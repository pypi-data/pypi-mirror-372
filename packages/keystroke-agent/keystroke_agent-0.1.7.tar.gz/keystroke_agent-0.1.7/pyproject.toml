[project]
name = "keystroke-agent"
version = "0.1.7"
description = "An AI-powered CLI assistant with AWS Bedrock integration, tool support, and customizable features for interactive conversations and task automation."
authors = [
    { name = "Puspak Rout", email = "thepuspak@gmail.com" }
]
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Communications :: Chat",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: AsyncIO",
    "Natural Language :: English"
]
keywords = ["ai-assistant", "bedrock", "llm", "claude", "chatbot", "cli", "aws", "tools", "async", "terminal-ui"]
dependencies = [
    "boto3",
    "requests",
    "python-dotenv",
    "litellm",
    "rich",
    "build",
    "twine",
    "numpydoc",
    "fastapi",
    "websockets",
    "uvicorn",
    "passlib",
    "python-jose"
]

[project.urls]
Homepage = "https://github.com/thepuspak/keystroke-agent"
Repository = "https://github.com/thepuspak/keystroke-agent.git"
Issues = "https://github.com/thepuspak/keystroke-agent/issues"
Changelog = "https://github.com/thepuspak/keystroke-agent/blob/main/CHANGELOG.md"

[project.scripts]
agent = "keystroke.cli:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
    "keystroke",
    "README.md",
    "LICENSE",
    "pyproject.toml",
    "example.env",
    "uv.lock",
    ".gitignore",
    "dist"
]

exclude = [
    "**/__pycache__",
    "**/*.pyc",
    "**/*.pyo",
    "**/*.pyd",
    ".env",
    "dist",
    ".pytest_cache",
    ".ruff_cache",
    ".mypy_cache",
    "**/.DS_Store"
]

[tool.hatch.build.targets.wheel]
packages = ["keystroke"]

[tool.black]
line-length = 100
target-version = ["py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = ["E402", "B008"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["E501"]

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=keystroke --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"