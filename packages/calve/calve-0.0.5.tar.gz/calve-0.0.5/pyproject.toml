[project]
name = "calve"
dynamic = ["version"]
authors = [{ name = "Caleb Grant", email = "grantcaleb22@gmail.com" }]
description = "A Python-based data pipeline for ingesting, cataloging, reporting, and querying data using Apache Iceberg as the storage format and DuckDB for lightweight analytics."
readme = { file = "README.md", content-type = "text/markdown" }
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.10,<3.14"
dependencies = [
    "duckdb>=1.3.2",
    "fastexcel>=0.14.0",
    "geopandas>=1.1.1",
    "netcdf4>=1.7.2",
    "pandas>=2.3.1",
    "polars>=1.31.0",
    "pyarrow>=21.0.0",
    "pyiceberg[glue,s3fs,sql-sqlite]>=0.9.1",
    "pyogrio>=0.11.0",
    "python-dotenv>=1.1.1",
    "pyyaml>=6.0.2",
    "rich>=13.9.4",
    "typer>=0.16.0",
    "xarray>=2025.6.1",
    "xlsx2csv>=0.8.4",
    "xlsxwriter>=3.2.5",
]

[project.optional-dependencies]
dev = [
    "build>=1.2.2.post1",
    "bump-my-version>=1.2.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff==0.11.0",
    "tox-uv>=1.26.2",
    "twine>=6.1.0",
]
docs = [
  "markdown-include>=0.8.1",
  "mkdocs>=1.6.1",
  "mkdocs-material>=9.6.16",
  "mkdocs-mermaid2-plugin>=1.2.1",
  "mkdocs-typer>=0.0.3",
  "mkdocstrings[python]>=0.30.0",
  "pymdown-extensions>=10.16.1",
]

[project.urls]
Homepage = "https://github.com/geocoug/calve"
Repository = "https://github.com/geocoug/calve"
Issues = "https://github.com/geocoug/calve/issues"

# [project.scripts]
# calve = "calve.cli:app"

[build-system]
requires = ["setuptools>=67.6.1", "wheel>=0.40.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "." }
packages = { find = { include = ["calve*"] } }

[tool.setuptools.dynamic]
version = { attr = "calve.__version__" }

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*cache*",
    "*/migrations/*",
]
line-length = 120
target-version = "py313"
respect-gitignore = true
fix = true

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
select = [
    "E",
    "F",
    "Q",
    "B",
    "I",
    "UP",
    "N",
    "S",
    "C4",
    "T20",
    "RET",
    "SIM",
    "PD",
    "RUF",
]
ignore = ["RUF012", "S101", "PD901", "S608"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.bumpversion]
current_version = "0.0.5"
commit = true
commit_args = "--no-verify"
tag = true

[[tool.bumpversion.files]]
filename = "calve/__init__.py"

[tool.pytest.ini_options]
addopts = [
    "--cov=calve",
    "--cov=tests",
    "--strict-markers",
    "--strict-config",
    "-ra",
    "--cov-branch",
    "--color=yes",
    # "--cov-fail-under=70",
]
testpaths = ["tests"]
log_cli = true
# markers = []

[tool.coverage.report]
exclude_also = ["if __name__ == .__main__.:"]

[tool.tox]
required = ["tox-uv"]
env_list = ["py310", "py311", "py312", "py313", "build", "docs"]
skip_missing_interpreters = true
isolated_build = true
basepython = "python3.13"

[tool.tox.env_run_base]
description = "Run tests under {base_python}"
deps = ["pytest-cov"]
commands = [["pytest", "{posargs}"]]

[tool.tox.env.docs]
description = "Build documentation using MkDocs"
deps = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "markdown-include",
    "mkdocs-typer",
    "mkdocs-mermaid2-plugin",
]
commands = [["mkdocs", "build", "-c", "-q"]]

[tool.tox.env.build]
description = "Build distribution packages"
deps = ["tox-uv"]
commands = [["uv", "build"]]
