[tool.poetry]
name           = 'data-manipulation-utilities'
description    = 'Project storing utilities needed to reduce boilerplate code when analyzing data'
version        = "0.2.8.dev1125"
readme         = 'README.md'
package-mode   = true 
packages       = [
{include='dmu',      from='src'},
{include='dmu_data', from='src'}]

[[tool.poetry.include]]
path = "src/dmu_data/**/*.yaml"
format = "wheel"

[[tool.poetry.include]]
path = "src/dmu_data/**/*.toml"
format = "wheel"

[[tool.poetry.include]]
path = "src/dmu_data/**/*.json"
format = "wheel"

[[tool.poetry.include]]
path = "src/dmu_data/**/*.txt"
format = "wheel"

[tool.poetry.dependencies]
python         = '>=3.10, <3.13'
PyYAML         = '*'
scipy          = '*'
awkward        = '*'
tqdm           = '*'
omegaconf      = '*'
toml           = '*'
uproot         = '*'
numpy          = '*'
matplotlib     = '*'
mplhep         = '*'
pandas         = '*'
tensorflow     = '*'
awkward-pandas = '*'
dask           = {version='*',      extras  =['dataframe','distributed']}
hist           = {version='*',      extras  =['plot']}
zfit           = {version='*',      optional=true}
scikit-learn   = {version='*',      optional=true}
joblib         = {version='*',      optional=true}
optuna         = {version='*',      optional=true}
pytest         = {version='*',      optional=true}

[tool.poetry.extras]
fit  = ['zfit']
ml   = ['scikit-learn', 'joblib', 'optuna']
dev  = ['pytest', 'pandas-stubs', 'memory-profiler']

[build-system]
requires      = [
    'poetry-core>=1.0.0',
    'poetry-dynamic-versioning>=1.0.0'
]
build-backend = 'poetry_dynamic_versioning.backend'

[tool.poetry-dynamic-versioning]
enable       = false
vcs          = 'git'
style        = 'pep440'
pattern      = 'default-unprefixed'
format-jinja = """
{%- if distance == 0 -%}
{{ base }}
{%- else -%}
{{ serialize_pep440(bump_version(base), dev=distance) }}
{%- endif -%}
"""

[tool.poetry.scripts]
transform_text       ='dmu_scripts.text.transform_text:main'
coned                ='dmu_scripts.ssh.coned:main'
check_truth          ='dmu_scripts.physics.check_truth:main'
print_trees          ='dmu_scripts.rfile.print_trees:main'
compare_root_files   ='dmu_scripts.rfile.compare_root_files:main'
compare_classifiers  ='dmu_scripts.ml.compare_classifiers:main'
