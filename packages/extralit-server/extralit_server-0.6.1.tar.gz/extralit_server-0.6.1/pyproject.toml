[project]
name = "extralit-server"
dynamic = []
description = "Open-source tool for accurate & fast scientific literature data extraction with LLM and human-in-the-loop."
readme = "README.md"
requires-python = ">=3.10"
keywords = [
    "literature-review",
    "data-annotation",
    "artificial-intelligence",
    "machine-learning",
    "human-in-the-loop",
    "mlops",
]
authors = [
    { name = "Extralit Labs", email = "extralit.contact@gmail.com" },
]
maintainers = [
    { name = "Extralit Labs", email = "extralit.contact@gmail.com" },
]
dependencies = [
    "fastapi ~= 0.115.0",
    "pydantic ~= 2.9.0",
    "pydantic-settings ~= 2.6.0",
    "uvicorn[standard] ~= 0.32.0",
    "opensearch-py ~= 2.0.0",
    "elasticsearch8[async] ~= 8.7.0",
    "brotli-asgi ~= 1.4.0",
    "backoff ~= 2.2.0",
    "alembic ~= 1.13.0",
    "SQLAlchemy ~= 2.0.0",
    "greenlet ~= 3.1.0",
    "aiosqlite == 0.20.0",
    "aiofiles ~= 24.1.0",
    "PyYAML >= 5.4.1,< 6.1.0",
    "python-jose[cryptography] ~= 3.3.0",
    "bcrypt ~= 4.2.0",
    "python-multipart ~= 0.0.16",
    "httpx ~= 0.27.0",
    "oauthlib ~= 3.2.0",
    "social-auth-core ~= 4.5.0",
    "rq~=2.4.1",
    "lazy-loader>=0.4",
    "psutil ~= 5.8, <5.10",
    "rich != 13.1.0",
    "typer >= 0.6.0, < 0.10.0",
    "packaging>=23.2",
    "standardwebhooks>=1.0.0",
    "datasets >= 3.0.1",
    "pillow>=11.3.0",
    "huggingface-hub>=0.26.2",
    "Jinja2>=3.1.4",
    "minio>=7.2.7",
    "ocrmypdf>=16.10.4",
    "pdf2image>=1.17.0",
    "opencv-python-headless>=4.11.0.86",
]
version = "0.6.1"

[project.license]
text = "Apache-2.0"

[project.optional-dependencies]
postgresql = [
    "psycopg2 ~= 2.9.0",
    "asyncpg ~= 0.30.0",
]

[project.urls]
homepage = "https://extralit.ai"
documentation = "https://docs.extralit.ai"
repository = "https://github.com/extralit/extralit"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.build]
excludes = [
    ".env.dev",
    ".env.test",
]

[tool.pdm.version]
source = "file"
path = "src/extralit_server/_version.py"

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio~=0.21.1",
    "pytest-env>=1.1.3",
    "factory-boy~=3.2.1",
    "httpx>=0.26.0",
    "pytest-randomly>=3.16.0",
    "respx>=0.21.1",
]

[tool.pdm.scripts]
lint = "ruff check"

[tool.pdm.scripts._]
env_file = ".env.dev"

[tool.pdm.scripts.cli]
cmd = "python -m extralit_server.cli"

[tool.pdm.scripts.server]
cmd = "uvicorn extralit_server:app --host 0.0.0.0 --port 6900 --reload"

[tool.pdm.scripts.migrate]
cmd = "alembic upgrade head"

[tool.pdm.scripts.alembic]
cmd = "alembic -c src/extralit_server/alembic.ini"

[tool.pdm.scripts.revision]
cmd = "alembic -c src/extralit_server/alembic.ini revision --autogenerate"

[tool.pdm.scripts.worker]
cmd = "python -m extralit_server worker"

[tool.pdm.scripts.server-dev]
composite = [
    "migrate",
    "cli database users create_default",
    "server-and-worker",
]

[tool.pdm.scripts.server-and-worker]
shell = "pdm run server & pdm run worker & wait"

[tool.pdm.scripts.test]
cmd = "pytest --verbosity=1 --disable-warnings"
env_file = ".env.test"

[tool.pdm.scripts.test-cov]
cmd = "pytest tests --cov=extralit_server --cov-report=term --cov-report=xml --verbosity=0 --disable-warnings"
env_file = ".env.test"

[tool.pdm.scripts.docker-build-extralit-server]
shell = "pdm build && cp -R dist docker/server && docker build -t extralit/extralit-server:local docker/server"

[tool.pytest.ini_options]
log_format = "%(asctime)s %(name)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
testpaths = [
    "tests",
]
env = [
    "HF_HUB_DISABLE_TELEMETRY=1",
]

[tool.coverage.run]
concurrency = [
    "greenlet",
    "thread",
    "multiprocessing",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if _TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "F",
    "E7",
    "E9",
    "E4",
    "B012",
    "B",
    "C4",
    "I",
    "UP",
    "ASYNC",
    "PLE",
    "FAST",
    "RUF",
]
ignore = [
    "E402",
    "B904",
    "UP007",
    "UP045",
    "B027",
    "B024",
    "B017",
    "RUF012",
    "B008",
    "FAST002",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",
    "F403",
    "I001",
]
"tests/**/*.py" = [
    "ASYNC",
    "F821",
]
"src/extralit_server/cli/**/*.py" = [
    "UP007",
    "UP045",
]
