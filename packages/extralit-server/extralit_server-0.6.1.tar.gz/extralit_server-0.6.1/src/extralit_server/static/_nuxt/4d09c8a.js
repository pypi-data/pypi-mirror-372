(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{1715:function(e,n){e.exports={attributes:{},body:"# 🗂️ Folder structure\n\n```\n.\n├── assets\n│ ├── fonts\n│ ├── icons\n│ └── scss\n├── database -> Vuex modules (to be removed)\n├── models -> Vuex models (to be removed)\n├── store -> Vuex store (to be removed)\n├── components\n│ ├── base -> Base and stateless components\n│ ├── features -> Features used in just one page\n│ ├── annotation -> Componentes used in Annotation page\n│ ├── datasets -> Components to support datasets page\n│ ├── global -> Components used in multiple pages ex: UserAvatarComponent\n│ ├── login -> Components to support login page\n│ └── user-settings -> Components to support user settings page\n├── e2e -> E2E tests\n├── layouts -> Layout components\n├── middleware -> Nuxt middlewares\n├── pages -> Nuxt global pages\n├── plugins -> Nuxt plugins\n├── static -> Static resources\n├── translations -> Extralit translation resources\n├── v1 -> New architecture\n│ ├── di -> Dependency injection configuration\n│ ├── domain -> Domain layer with entities and use cases\n│ │ ├── entities -> Data structures and types\n│ │ │ └── import -> Import-related entities (ImportAnalysis.ts)\n│ │ └── usecases -> Business logic use cases\n│ │   └── get-import-analysis-use-case.ts -> Import analysis API communication\n│ ├── infrastructure -> Infrastructure layer\n│ │ ├── services -> External services and utilities\n│ │ └── storage -> Data storage and state management\n│ └── store -> Pinia stores for state management\n│...\n├── package.json\n├── package-lock.json\n└── .gitignore\n```\n"}}}]);