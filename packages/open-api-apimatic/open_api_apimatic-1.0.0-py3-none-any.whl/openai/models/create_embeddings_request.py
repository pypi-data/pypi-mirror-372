# -*- coding: utf-8 -*-

"""
openai

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CreateEmbeddingsRequest(object):

    """Implementation of the 'Create embeddings Request' model.

    Attributes:
        model (str): The model property of type str.
        input (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "model": 'model',
        "input": 'input'
    }

    def __init__(self,
                 model=None,
                 input=None):
        """Constructor for the CreateEmbeddingsRequest class"""

        # Initialize members of the class
        self.model = model 
        self.input = input 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        model = dictionary.get("model") if dictionary.get("model") else None
        input = dictionary.get("input") if dictionary.get("input") else None
        # Return an object of this model
        return cls(model,
                   input)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'model={self.model!r}, '
                f'input={self.input!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'model={self.model!s}, '
                f'input={self.input!s})')
