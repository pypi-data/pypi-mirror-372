# -*- coding: utf-8 -*-

"""
openai

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ListFineTunes(object):

    """Implementation of the 'List fine-tunes' model.

    Attributes:
        object (str): The model property of type str.
        data (List[str]): The model property of type List[str].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "object": 'object',
        "data": 'data'
    }

    def __init__(self,
                 object=None,
                 data=None):
        """Constructor for the ListFineTunes class"""

        # Initialize members of the class
        self.object = object 
        self.data = data 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        object = dictionary.get("object") if dictionary.get("object") else None
        data = dictionary.get("data") if dictionary.get("data") else None
        # Return an object of this model
        return cls(object,
                   data)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'object={self.object!r}, '
                f'data={self.data!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'object={self.object!s}, '
                f'data={self.data!s})')
