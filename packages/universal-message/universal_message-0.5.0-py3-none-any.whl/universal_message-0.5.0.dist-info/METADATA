Metadata-Version: 2.3
Name: universal-message
Version: 0.5.0
Summary: Message for Universal LLM Usage
License: MIT
Author: Allen Chou
Author-email: f1470891079@gmail.com
Requires-Python: >=3.11,<4
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: dictpress (>=0.3.0)
Requires-Dist: durl-py (>=0.1.1)
Requires-Dist: json-repair
Requires-Dist: openai (>=1,<2)
Requires-Dist: openai-agents (>=0.1.0,<1.0.0)
Requires-Dist: pydantic (>=2)
Requires-Dist: str-or-none
Project-URL: Homepage, https://github.com/allen2c/universal-message
Project-URL: PyPI, https://pypi.org/project/universal-message/
Project-URL: Repository, https://github.com/allen2c/universal-message
Description-Content-Type: text/markdown

# Universal Message

A universal message format for AI interactions, designed to be simple, flexible, and easy to use.

## Installation

Install the package using pip:

```bash
pip install universal-message
```

## Usage

Create a message from a string:

```python
import universal_message as um

message = um.Message.from_any("Hello, world!")

print(message.to_instructions())
# user:
# Hello, world!
```

Create a message from a dictionary:

```python
import universal_message as um

message = um.Message.from_any(
    {
        "role": "assistant",
        "content": "I am a helpful assistant.",
    }
)

print(message.to_instructions())
# assistant:
# I am a helpful assistant.
```

## Features

* **Universal Format**: A single message format for all AI interactions.
* **Flexible**: Supports text, data URLs, and lists of content.
* **Easy to Use**: Create messages from strings, dictionaries, or pydantic models.
* **OpenAI Compatible**: Easily convert to and from OpenAI's chat completion format.

