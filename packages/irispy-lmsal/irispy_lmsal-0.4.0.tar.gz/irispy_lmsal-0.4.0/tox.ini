[tox]
envlist =
    py{311,312,313}{,-devdeps,-online,-figure}
    build_docs
    codestyle
isolated_build = true

[testenv]
allowlist_externals=
    /bin/sh
changedir = .tmp/{envname}
description =
    run tests
    conda: with the latest conda version of key dependencies
    devdeps: with the latest developer version of key dependencies
    figure: runs the figure test suite.
    oldestdeps: with the oldest supported version of key dependencies
    online: that require remote data (as well as the offline ones)
setenv =
    MPLBACKEND = agg
    COLUMNS = 180
deps =
    # All our tests run in parallel which this plugin allows us to.
    pytest-xdist
    # We check codecov in tox builds.
    pytest-cov
    # The devdeps factor is intended to be used to install the latest developer version of key dependencies.
    devdeps: git+https://github.com/sunpy/sunraster
    devdeps: git+https://github.com/sunpy/ndcube
    # These are specific online extras we use to run the online tests.
    online: pytest-timeout
    # Figure tests need a tightly controlled environment
    figure-!devdeps: astropy==7.1.0
    figure-!devdeps: matplotlib==3.10.5
extras =
    dev
commands =
    figure: /bin/sh -c "mkdir -p ./figure_test_images; python -c 'import matplotlib as mpl; print(mpl.ft2font.__file__, mpl.ft2font.__freetype_version__, mpl.ft2font.__freetype_build_type__)' > ./figure_test_images/figure_version_info.txt"
    figure: /bin/sh -c "pip freeze >> ./figure_test_images/figure_version_info.txt"
    figure: /bin/sh -c "cat ./figure_test_images/figure_version_info.txt"
    figure: python -c "import irispy.tests.helpers as h; print(h.get_hash_library_name())"
    pytest \
    -vvv \
    -r fEs \
    --pyargs irispy \
    --cov-report=xml \
    --cov=irispy \
    --cov-config={toxinidir}/.coveragerc \
    {toxinidir}/docs \
    online: --remote-data=any \
    online: --timeout=60 \
    figure: -m "mpl_image_compare" \
    figure: --mpl \
    figure: --remote-data=any \
    figure: --mpl-generate-summary=html \
    figure: --mpl-baseline-path=https://raw.githubusercontent.com/LM-SAL/figure_test_images/main/irispy/{envname}/ \
    {posargs}

[testenv:build_docs]
changedir = docs
description = Invoke sphinx-build to build the HTML docs
extras = dev
commands =
    sphinx-build --color -W --keep-going -b html -d _build/.doctrees . _build/html {posargs}
    python -c 'import pathlib; print("Documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "_build" / "index.html"))'

[testenv:codestyle]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --color always --all-files --show-diff-on-failure
