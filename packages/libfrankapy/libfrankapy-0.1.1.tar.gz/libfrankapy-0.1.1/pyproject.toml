[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "pybind11>=2.10.0",
    "numpy>=1.19.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "libfrankapy"
version = "0.1.1"
description = "Python bindings for libfranka with real-time control"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "Apache-2.0"}
authors = [
    {name = "libfrankapy Team", email = "support@libfrankapy.org"},
]
maintainers = [
    {name = "libfrankapy Team", email = "support@libfrankapy.org"},
]
keywords = ["robotics", "franka", "robot-control", "real-time", "panda"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",

    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=1.19.0",
    "pybind11>=2.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "isort",
    "mypy",
    "sphinx",
    "sphinx-rtd-theme",
    "pre-commit",
]
examples = [
    "matplotlib",
    "scipy",
    "jupyter",
]
testing = [
    "pytest>=6.0",
    "pytest-cov",
    "pytest-mock",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "myst-parser",
    "sphinx-autodoc-typehints",
]

[project.urls]
Homepage = "https://github.com/libfrankapy/libfrankapy"
Documentation = "https://libfrankapy.readthedocs.io"
Repository = "https://github.com/libfrankapy/libfrankapy"
"Bug Tracker" = "https://github.com/libfrankapy/libfrankapy/issues"
Changelog = "https://github.com/libfrankapy/libfrankapy/blob/main/CHANGELOG.md"

[project.scripts]
libfrankapy-info = "libfrankapy.utils:print_system_info"

[tool.setuptools]
packages = ["libfrankapy"]
include-package-data = true

[tool.setuptools.package-data]
libfrankapy = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "libfrankapy._libfrankapy_core",
    "franka.*",
    "pybind11.*",
    "numpy.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "hardware: marks tests that require hardware",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["libfrankapy"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Ruff configuration (alternative to flake8)
[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.ruff.isort]
known-first-party = ["libfrankapy"]

[tool.ruff.pyupgrade]
target-version = "py38"

# Wheel configuration
[tool.bdist_wheel]
universal = false
plat-name = "manylinux1_x86_64"
