[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_description }}"
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}"
authors = [
    {name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}"}
]

dependencies = [
    "fastapi==0.116.1",
    "flet[all]==0.28.3",
    "uvicorn==0.35.0",
    "structlog==25.4.0",
    "pydantic-settings==2.10.1",
    "typer==0.16.0",
    # Pin click to avoid yanked versions (typer dependency)
    "click==8.2.1",
    # Rich CLI formatting
    "rich==14.1.0",
    # HTTP client for CLI API calls
    "httpx==0.28.1",
    # System monitoring
    "psutil==7.0.0",
{%- if cookiecutter.include_scheduler == "yes" %}
    "apscheduler==3.10.4",
{%- endif %}
{%- if cookiecutter.include_redis == "yes" %}
    "redis==5.0.8",
{%- endif %}
{%- if cookiecutter.include_worker == "yes" %}
    "arq==0.25.0",
{%- endif %}
{%- if cookiecutter.include_database == "yes" %}
    "sqlmodel>=0.0.14",
    "sqlalchemy>=2.0.0",
    "aiosqlite>=0.19.0",
{%- endif %}
{%- if cookiecutter.include_cache == "yes" %}
    "redis[hiredis]==5.0.8",
{%- endif %}
]

[project.scripts]
{{cookiecutter.project_slug}} = "app.cli.main:main"

[project.optional-dependencies]
dev = [
    "pytest==8.4.1",
    "pytest-asyncio==1.1.0", 
    "ruff==0.12.7",
    "mypy==1.17.1",
    "types-psutil==7.0.0.20250801",
    "pre-commit==4.2.0",
    "pip-audit==2.9.0",
{%- if cookiecutter.include_worker == "yes" %}
    # Development auto-reload for workers
    "watchdog==4.0.2",
{%- endif %}
]
docs = [
    "mkdocs==1.6.1",
    "mkdocs-material==9.6.16",
    "mkdocstrings[python]==0.30.0",
    "mkdocs-gen-files==0.5.0",
    "pymdown-extensions==10.16.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
line-length = 88
target-version = "py{{ cookiecutter.python_version.replace('.', '') }}"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]  # Added UP for pyupgrade (modern Python syntax)
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = false
force-sort-within-sections = true
known-first-party = ["app"]

[tool.mypy]
python_version = "{{ cookiecutter.python_version }}"
strict = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "flet.*"
ignore_missing_imports = true

{%- if cookiecutter.include_scheduler == "yes" %}

[[tool.mypy.overrides]]
module = "apscheduler.*"
ignore_missing_imports = true
{%- endif %}

{%- if cookiecutter.include_redis == "yes" %}

[[tool.mypy.overrides]]
module = "redis.*"
ignore_missing_imports = true
{%- endif %}

{%- if cookiecutter.include_worker == "yes" %}

[[tool.mypy.overrides]]
module = "arq.*"
ignore_missing_imports = true
{%- endif %}

{%- if cookiecutter.include_database == "yes" %}

[[tool.mypy.overrides]]
module = "sqlmodel.*"
ignore_missing_imports = true
{%- endif %}

# Ignore imports for future components that may not exist yet
[[tool.mypy.overrides]]
module = "app.components.database.main"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "app.components.cache.main"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "app.components.worker.*"
ignore_missing_imports = true


[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[dependency-groups]
dev = [
    "httpx>=0.28.1",
]