[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ambivo-agents"
version = "1.3.8"
description = "Multi-Agent AI System for automation"
authors = [
    {name = "Hemant Gosain 'Sunny'", email = "info@ambivo.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Communications",
]
dependencies = [
    # Core dependencies
    "redis>=6.2.0",
    "redis[asyncio]",
    "docker>=6.0.0",
    "asyncio-mqtt>=0.11.0",
    "cachetools",
    "lz4",
    "requests>=2.32.4",
    "click>=8.2.1",

    # LangChain and LLM dependencies
    "openai>=1.84.0",
    "langchain>=0.3.25",
    "langchain-community>=0.3.24",
    "langchain-core>=0.3.63",
    "langchain-openai>=0.3.19",
    "langchainhub>=0.1.21",
    "langchain-text-splitters>=0.3.8",
    "langchain-anthropic>=0.3.15",
    "langchain-aws",
    "langchain-voyageai",
    "huggingface-hub",

    # LlamaIndex dependencies
    "llama-index-core",
    "llama-index-embeddings-langchain",
    "llama-index-llms-langchain",
    "llama-index-llms-openai",
    "llama-index-vector-stores-qdrant",
    "llama-index-readers-smart-pdf-loader",

    # API and web framework dependencies
    "pydantic>=2.11.7",

    # Cloud provider SDKs
    "boto3>=1.38.42",

    # Utility dependencies
    "python-dotenv>=1.1.1",
    "pyyaml>=6.0.2",
    "psutil>=7.0.0",
    "qdrant-client",
    "numexpr",

    # Development dependencies
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "black>=25.1.0",
    "isort>=6.0.1",

    # Document processing
    "unstructured",
    "langchain-unstructured",
]

[project.optional-dependencies]
# Web capabilities
web = [
    "beautifulsoup4>=4.13.4",
    "playwright>=1.40.0",
]

# Media processing
media = [
    "pytubefix>=6.0.0",
]

# Additional LLM providers
anthropic = [
    "anthropic>=0.55.0",
]

# Database capabilities
database = [
    "pymongo>=4.0.0",
    "mysql-connector-python>=8.0.0",
    "psycopg2-binary>=2.9.0",
    "tabulate>=0.9.0",
]

# Development tools
test = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-timeout>=2.1.0",
]

dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "black>=25.1.0",
    "isort>=6.0.1",
    "pytest-timeout>=2.1.0",
    "pre-commit>=3.0.0",
]

# Convenience combinations
full = [
    "ambivo-agents[web,media,anthropic,database]"
]

all = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "black>=25.1.0",
    "isort>=6.0.1",
    "pytest-timeout>=2.1.0",
    "beautifulsoup4>=4.13.4",
    "playwright>=1.40.0",
    "pytubefix>=6.0.0",
    "anthropic>=0.55.0",
    "pymongo>=4.0.0",
    "mysql-connector-python>=8.0.0",
    "psycopg2-binary>=2.9.0",
    "tabulate>=0.9.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
# Main CLI
ambivo-agents = "ambivo_agents.cli:main"
ambivo = "ambivo_agents.cli:main"

[project.urls]
Homepage = "https://github.com/ambivo-corp/ambivo-agents"
Repository = "https://github.com/ambivo-corp/ambivo-agents"
Issues = "https://github.com/ambivo-corp/ambivo-agents/issues"
Documentation = "https://github.com/ambivo-corp/ambivo-agents/blob/main/README.md"
Company = "https://www.ambivo.com"

[tool.setuptools.packages.find]
include = ["ambivo_agents*"]

[tool.setuptools.package-data]
ambivo_agents = [
    "*.yaml",
    "*.yml",
    "*.json",
    "*.md",
]

# Black formatting
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
timeout = 300