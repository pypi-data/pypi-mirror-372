from iode import Simulation as Simulation, SimulationInitialization as SimulationInitialization, SimulationSort as SimulationSort

def model_simulate(sample_from: str, sample_to: str, eqs_list=None, endo_exo_list=None, eps: float = 0.0001, relax: float = 1.0, maxit: int = 100, init_values: int = ..., sort_algo: int = ..., nb_passes: int = 5, debug: bool = False, newton_eps: float = 1e-06, newton_maxit: int = 50, newton_debug: bool = False): ...
def model_calc_scc(nb_passes: int = 1, pre_listname: str = '_PRE', inter_listname: str = '_INTER', post_listname: str = '_POST', eqs_list=None): ...
def model_simulate_scc(sample_from: str, sample_to: str, pre_listname: str = '_PRE', inter_listname: str = '_INTER', post_listname: str = '_POST', eps: float = 0.0001, relax: float = 1.0, maxit: int = 100, init_values: int = ..., debug: bool = False, newton_eps: float = 1e-06, newton_maxit: int = 50, newton_debug: bool = False): ...
def model_simulate_save_parms(eps: float = 0.0001, relax: float = 1.0, maxit: int = 100, init_values: int = ..., sort_algo: int = ..., nb_passes: int = 1): ...
def model_simulate_maxit() -> int: ...
def model_simulate_eps() -> float: ...
def model_simulate_relax() -> float: ...
def model_simulate_nb_passes() -> int: ...
def model_simulate_sort_algo() -> int: ...
def model_simulate_init_values() -> int: ...
def model_simulate_niter(period: str) -> int: ...
def model_simulate_norm(period: str) -> float: ...
