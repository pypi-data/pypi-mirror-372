# -*- coding: utf-8 -*-

"""
This module provides the character map for the Iran System character set,
as used by NDS Station Displays.
"""

# Standard Iran System character mapping from hex codes to Unicode characters.
IRAN_SYSTEM_MAP = {
    # Row 0x
    0x00: "NUL", 0x01: "üòä", 0x02: "‚ö´", 0x03: "‚ô•", 0x04: "‚ô¶", 0x05: "‚ô£", 0x06: "‚ô†", 0x07: "‚Ä¢",
    0x08: "‚óò", 0x09: "‚óã", 0x0A: "‚óô", 0x0B: "‚ôÇ", 0x0C: "‚ôÄ", 0x0D: "‚ô™", 0x0E: "‚ô´", 0x0F: "‚òº",
    # Row 1x
    0x10: "‚ñ∫", 0x11: "‚óÑ", 0x12: "‚Üï", 0x13: "‚Äº", 0x14: "¬∂", 0x15: "¬ß", 0x16: "‚ñ¨", 0x17: "‚Ü®",
    0x18: "‚Üë", 0x19: "‚Üì", 0x1A: "‚Üí", 0x1B: "‚Üê", 0x1C: "‚àü", 0x1D: "‚Üî", 0x1E: "‚ñ≤", 0x1F: "‚ñº",
    # Rows 2x-7x (Standard ASCII)
    0x20: " ", 0x21: "!", 0x22: '"', 0x23: "#", 0x24: "$", 0x25: "%", 0x26: "&", 0x27: "'",
    0x28: "(", 0x29: ")", 0x2A: "*", 0x2B: "+", 0x2C: ",", 0x2D: "-", 0x2E: ".", 0x2F: "/",
    0x30: "0", 0x31: "1", 0x32: "2", 0x33: "3", 0x34: "4", 0x35: "5", 0x36: "6", 0x37: "7",
    0x38: "8", 0x39: "9", 0x3A: ":", 0x3B: ";", 0x3C: "<", 0x3D: "=", 0x3E: ">", 0x3F: "?",
    0x40: "@", 0x41: "A", 0x42: "B", 0x43: "C", 0x44: "D", 0x45: "E", 0x46: "F", 0x47: "G",
    0x48: "H", 0x49: "I", 0x4A: "J", 0x4B: "K", 0x4C: "L", 0x4D: "M", 0x4E: "N", 0x4F: "O",
    0x50: "P", 0x51: "Q", 0x52: "R", 0x53: "S", 0x54: "T", 0x55: "U", 0x56: "V", 0x57: "W",
    0x58: "X", 0x59: "Y", 0x5A: "Z", 0x5B: "[", 0x5C: "\\", 0x5D: "]", 0x5E: "^", 0x5F: "_",
    0x60: "`", 0x61: "a", 0x62: "b", 0x63: "c", 0x64: "d", 0x65: "e", 0x66: "f", 0x67: "g",
    0x68: "h", 0x69: "i", 0x6A: "j", 0x6B: "k", 0x6C: "l", 0x6D: "m", 0x6E: "n", 0x6F: "o",
    0x70: "p", 0x71: "q", 0x72: "r", 0x73: "s", 0x74: "t", 0x75: "u", 0x76: "v", 0x77: "w",
    0x78: "x", 0x79: "y", 0x7A: "z", 0x7B: "{", 0x7C: "|", 0x7D: "}", 0x7E: "~", 0x7F: "√£",
    # Row 8x (Persian characters and numbers)
    0x80: " ", 0x81: "ÿå", 0x82: "€±", 0x83: "€≤", 0x84: "€≥", 0x85: "€¥", 0x86: "€µ", 0x87: "€∂",
    0x88: "€∑", 0x89: "€∏", 0x8A: "€π", 0x8B: "€∞", 0x8C: "ÿü", 0x8D: "ÿ¢", 0x8E: "ÿß", 0x8F: "ÿ®",
    # Row 9x
    0x90: "Ÿæ", 0x91: "ÿ™", 0x92: "ÿ´", 0x93: "ÿ¨", 0x94: "⁄Ü", 0x95: "ÿ≠", 0x96: "ÿÆ", 0x97: "ÿØ",
    0x98: "ÿ∞", 0x99: "ÿ±", 0x9A: "ÿ≤", 0x9B: "⁄ò", 0x9C: "ÿ≥", 0x9D: "ÿ¥", 0x9E: "ÿµ", 0x9F: "ÿ∂",
    # Row Ax (Persian character forms)
    0xA0: "ÿ∑", 0xA1: "ÿ∏", 0xA2: "ÿ∂", 0xA3: "ÿµ", 0xA4: "ÿ¥", 0xA5: "ÿ≥", 0xA6: "ŸÑÿ¢", 0xA7: "ŸÑÿß",
    0xA8: "ŸÑ", 0xA9: "⁄Ø", 0xAA: "⁄©", 0xAB: "ŸÇ", 0xAC: "ŸÅ", 0xAD: "ÿ∫", 0xAE: "ÿπ", 0xAF: " ",
    # Row Bx (Box-drawing characters)
    0xB0: "‚îò", 0xB1: "‚îê", 0xB2: "‚î¨", 0xB3: "‚î¥", 0xB4: "‚îÇ", 0xB5: "‚îÄ", 0xB6: "‚îº", 0xB7: "‚ï´",
    0xB8: "‚ï™", 0xB9: "‚ï°", 0xBA: "‚ï¢", 0xBB: "‚ïï", 0xBC: "‚ïê", 0xBD: "‚îÇ", 0xBE: "‚ïú", 0xBF: "‚ïõ",
    # Row Cx (Box-drawing characters)
    0xC0: "‚îî", 0xC1: "‚îå", 0xC2: "‚î¨", 0xC3: "‚î¥", 0xC4: "‚îÇ", 0xC5: "‚îÄ", 0xC6: "‚îº", 0xC7: "‚ïë",
    0xC8: "‚ï£", 0xC9: "‚ïó", 0xCA: "‚ïù", 0xCB: "‚ïö", 0xCC: "‚ï©", 0xCD: "‚ï¶", 0xCE: "‚ï†", 0xCF: "‚ïê",
    # Row Dx (Box-drawing and block characters)
    0xD0: "‚îò", 0xD1: "‚îê", 0xD2: "‚î¨", 0xD3: "‚î¥", 0xD4: "‚îÇ", 0xD5: "‚îÄ", 0xD6: "‚îº", 0xD7: "‚ï£",
    0xD8: "‚ïó", 0xD9: "‚ïù", 0xDA: "‚ïö", 0xDB: "‚ñà", 0xDC: "‚ñÑ", 0xDD: "‚ñå", 0xDE: "‚ñê", 0xDF: "‚ñÄ",
    # Row Ex (Persian character forms)
    0xE0: "ÿ∏", 0xE1: "ÿ∑", 0xE2: "ÿ∂", 0xE3: "ÿµ", 0xE4: "ÿ¥", 0xE5: "ÿ≥", 0xE6: "ÿπ", 0xE7: "ÿ∫",
    0xE8: "ŸÅ", 0xE9: "ŸÇ", 0xEA: "⁄©", 0xEB: "⁄Ø", 0xEC: "ŸÑ", 0xED: "ŸÖ", 0xEE: "ŸÜ", 0xEF: "Ÿá",
    # Row Fx (Persian character forms)
    0xF0: "€å", 0xF1: "Ÿà", 0xF2: "€å", 0xF3: "ÿ°", 0xF4: "ÿ¶", 0xF5: "ÿ§", 0xF6: "ÿ£", 0xF7: "ÿ•",
    0xF8: "ŸÑ", 0xF9: "ŸÑÿ¢", 0xFA: "ŸÑÿß", 0xFB: "€Ä", 0xFC: "ÿ©", 0xFD: "€å", 0xFE: " ", 0xFF: "NBSP",
}

# Create a reverse map for encoding: from character to hex code.
# We iterate through the map and overwrite entries. This ensures that the *last*
# occurrence of a character in the map is the one that is used.
REVERSE_IRAN_SYSTEM_MAP = {}
for code, char in IRAN_SYSTEM_MAP.items():
    if len(char) == 1:
        REVERSE_IRAN_SYSTEM_MAP[char] = code

# Define a fallback character code for characters not in the map.
UNKNOWN_CHAR_CODE = REVERSE_IRAN_SYSTEM_MAP.get('?', 0x3F)
