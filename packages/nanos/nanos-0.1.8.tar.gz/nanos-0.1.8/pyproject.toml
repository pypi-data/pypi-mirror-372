[tool.poetry]
name = "nanos"
version = "0.1.8"
description = "Collection of small utility-functions"
authors = ["Alex <aleosd@gmail.com>"]
license = "Apache-2.0"
homepage = "https://github.com/aleosd/nanos"
repository = "https://github.com/aleosd/nanos"
documentation = "https://nanos.readthedocs.io/en/stable/index.html"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
mypy = "^1.13"
ruff = "^0.8.2"
coverage = "^7.4.0"
pyhamcrest = "^2.1.0"


[tool.poetry.group.docs.dependencies]
sphinx = "^8.1.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E", "W",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # complexity of a function
    "C90",
]

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 5

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]

[tool.coverage.run]
branch = true
source = [
    "nanos"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: not covered",
    "@t.overload"
]
