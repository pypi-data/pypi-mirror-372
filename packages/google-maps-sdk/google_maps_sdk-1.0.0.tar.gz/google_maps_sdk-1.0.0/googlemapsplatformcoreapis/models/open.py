# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Open(object):

    """Implementation of the 'Open' model.

    Attributes:
        day (int): The model property of type int.
        time (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "day": 'day',
        "time": 'time'
    }

    def __init__(self,
                 day=None,
                 time=None):
        """Constructor for the Open class"""

        # Initialize members of the class
        self.day = day 
        self.time = time 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        day = dictionary.get("day") if dictionary.get("day") else None
        time = dictionary.get("time") if dictionary.get("time") else None
        # Return an object of this model
        return cls(day,
                   time)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'day={self.day!r}, '
                f'time={self.time!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'day={self.day!s}, '
                f'time={self.time!s})')
