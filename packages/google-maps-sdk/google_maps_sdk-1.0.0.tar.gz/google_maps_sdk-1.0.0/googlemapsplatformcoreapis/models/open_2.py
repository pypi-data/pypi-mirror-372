# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from googlemapsplatformcoreapis.api_helper import APIHelper


class Open2(object):

    """Implementation of the 'Open2' model.

    Attributes:
        day (int): The model property of type int.
        hour (int): The model property of type int.
        minute (int): The model property of type int.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "day": 'day',
        "hour": 'hour',
        "minute": 'minute'
    }

    def __init__(self,
                 day=None,
                 hour=None,
                 minute=None):
        """Constructor for the Open2 class"""

        # Initialize members of the class
        self.day = day 
        self.hour = hour 
        self.minute = minute 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        day = dictionary.get("day") if dictionary.get("day") else None
        hour = dictionary.get("hour") if dictionary.get("hour") else None
        minute = dictionary.get("minute") if dictionary.get("minute") else None
        # Return an object of this model
        return cls(day,
                   hour,
                   minute)

    @classmethod
    def validate(cls, dictionary):
        """Validates dictionary against class required properties

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            boolean : if dictionary is valid contains required properties.

        """

        if isinstance(dictionary, cls):
            return APIHelper.is_valid_type(value=dictionary.day,
                                           type_callable=lambda value: isinstance(value, int)) \
                and APIHelper.is_valid_type(value=dictionary.hour,
                                            type_callable=lambda value: isinstance(value, int)) \
                and APIHelper.is_valid_type(value=dictionary.minute,
                                            type_callable=lambda value: isinstance(value, int))

        if not isinstance(dictionary, dict):
            return False

        return APIHelper.is_valid_type(value=dictionary.get('day'),
                                       type_callable=lambda value: isinstance(value, int)) \
            and APIHelper.is_valid_type(value=dictionary.get('hour'),
                                        type_callable=lambda value: isinstance(value, int)) \
            and APIHelper.is_valid_type(value=dictionary.get('minute'),
                                        type_callable=lambda value: isinstance(value, int))

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'day={self.day!r}, '
                f'hour={self.hour!r}, '
                f'minute={self.minute!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'day={self.day!s}, '
                f'hour={self.hour!s}, '
                f'minute={self.minute!s})')
