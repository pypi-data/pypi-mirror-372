# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class DASH(object):

    """Implementation of the 'DASH' model.

    Attributes:
        landscape_uri (str): The model property of type str.
        portrait_uri (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "landscape_uri": 'landscapeUri',
        "portrait_uri": 'portraitUri'
    }

    def __init__(self,
                 landscape_uri=None,
                 portrait_uri=None):
        """Constructor for the DASH class"""

        # Initialize members of the class
        self.landscape_uri = landscape_uri 
        self.portrait_uri = portrait_uri 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        landscape_uri = dictionary.get("landscapeUri") if dictionary.get("landscapeUri") else None
        portrait_uri = dictionary.get("portraitUri") if dictionary.get("portraitUri") else None
        # Return an object of this model
        return cls(landscape_uri,
                   portrait_uri)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'landscape_uri={self.landscape_uri!r}, '
                f'portrait_uri={self.portrait_uri!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'landscape_uri={self.landscape_uri!s}, '
                f'portrait_uri={self.portrait_uri!s})')
