# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from googlemapsplatformcoreapis.api_helper import APIHelper
from googlemapsplatformcoreapis.models.bounding_box import BoundingBox
from googlemapsplatformcoreapis.models.center import Center
from googlemapsplatformcoreapis.models.stats import Stats


class RoofSegmentStat(object):

    """Implementation of the 'RoofSegmentStat' model.

    Attributes:
        pitch_degrees (float): The model property of type float.
        azimuth_degrees (int | float): The model property of type int | float.
        stats (Stats): The model property of type Stats.
        center (Center): The model property of type Center.
        bounding_box (BoundingBox): The model property of type BoundingBox.
        plane_height_at_center_meters (float): The model property of type
            float.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "pitch_degrees": 'pitchDegrees',
        "azimuth_degrees": 'azimuthDegrees',
        "stats": 'stats',
        "center": 'center',
        "bounding_box": 'boundingBox',
        "plane_height_at_center_meters": 'planeHeightAtCenterMeters'
    }

    def __init__(self,
                 pitch_degrees=None,
                 azimuth_degrees=None,
                 stats=None,
                 center=None,
                 bounding_box=None,
                 plane_height_at_center_meters=None):
        """Constructor for the RoofSegmentStat class"""

        # Initialize members of the class
        self.pitch_degrees = pitch_degrees 
        self.azimuth_degrees = azimuth_degrees 
        self.stats = stats 
        self.center = center 
        self.bounding_box = bounding_box 
        self.plane_height_at_center_meters = plane_height_at_center_meters 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        from googlemapsplatformcoreapis.utilities.union_type_lookup import UnionTypeLookUp

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        pitch_degrees = dictionary.get("pitchDegrees") if dictionary.get("pitchDegrees") else None
        azimuth_degrees = APIHelper.deserialize_union_type(UnionTypeLookUp.get('RoofSegmentStatAzimuthDegrees'), dictionary.get('azimuthDegrees'), False) if dictionary.get('azimuthDegrees') is not None else None
        stats = Stats.from_dictionary(dictionary.get('stats')) if dictionary.get('stats') else None
        center = Center.from_dictionary(dictionary.get('center')) if dictionary.get('center') else None
        bounding_box = BoundingBox.from_dictionary(dictionary.get('boundingBox')) if dictionary.get('boundingBox') else None
        plane_height_at_center_meters = dictionary.get("planeHeightAtCenterMeters") if dictionary.get("planeHeightAtCenterMeters") else None
        # Return an object of this model
        return cls(pitch_degrees,
                   azimuth_degrees,
                   stats,
                   center,
                   bounding_box,
                   plane_height_at_center_meters)

    @classmethod
    def validate(cls, dictionary):
        """Validates dictionary against class required properties

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            boolean : if dictionary is valid contains required properties.

        """
        from googlemapsplatformcoreapis.utilities.union_type_lookup import UnionTypeLookUp

        if isinstance(dictionary, cls):
            return APIHelper.is_valid_type(value=dictionary.pitch_degrees,
                                           type_callable=lambda value: isinstance(value, float)) \
                and UnionTypeLookUp.get('RoofSegmentStatAzimuthDegrees').validate(dictionary.azimuth_degrees).is_valid \
                and APIHelper.is_valid_type(value=dictionary.stats,
                                            type_callable=lambda value: Stats.validate(value),
                                            is_model_dict=True) \
                and APIHelper.is_valid_type(value=dictionary.center,
                                            type_callable=lambda value: Center.validate(value),
                                            is_model_dict=True) \
                and APIHelper.is_valid_type(value=dictionary.bounding_box,
                                            type_callable=lambda value: BoundingBox.validate(value),
                                            is_model_dict=True) \
                and APIHelper.is_valid_type(value=dictionary.plane_height_at_center_meters,
                                            type_callable=lambda value: isinstance(value, float))

        if not isinstance(dictionary, dict):
            return False

        return APIHelper.is_valid_type(value=dictionary.get('pitchDegrees'),
                                       type_callable=lambda value: isinstance(value, float)) \
            and UnionTypeLookUp.get('RoofSegmentStatAzimuthDegrees').validate(dictionary.get('azimuthDegrees')).is_valid \
            and APIHelper.is_valid_type(value=dictionary.get('stats'),
                                        type_callable=lambda value: Stats.validate(value),
                                        is_model_dict=True) \
            and APIHelper.is_valid_type(value=dictionary.get('center'),
                                        type_callable=lambda value: Center.validate(value),
                                        is_model_dict=True) \
            and APIHelper.is_valid_type(value=dictionary.get('boundingBox'),
                                        type_callable=lambda value: BoundingBox.validate(value),
                                        is_model_dict=True) \
            and APIHelper.is_valid_type(value=dictionary.get('planeHeightAtCenterMeters'),
                                        type_callable=lambda value: isinstance(value, float))

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'pitch_degrees={self.pitch_degrees!r}, '
                f'azimuth_degrees={self.azimuth_degrees!r}, '
                f'stats={self.stats!r}, '
                f'center={self.center!r}, '
                f'bounding_box={self.bounding_box!r}, '
                f'plane_height_at_center_meters={self.plane_height_at_center_meters!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'pitch_degrees={self.pitch_degrees!s}, '
                f'azimuth_degrees={self.azimuth_degrees!s}, '
                f'stats={self.stats!s}, '
                f'center={self.center!s}, '
                f'bounding_box={self.bounding_box!s}, '
                f'plane_height_at_center_meters={self.plane_height_at_center_meters!s})')
