# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CellTower(object):

    """Implementation of the 'CellTower' model.

    Attributes:
        cell_id (str): The model property of type str.
        location_area_code (str): The model property of type str.
        mobile_country_code (str): The model property of type str.
        mobile_network_code (str): The model property of type str.
        age (str): The model property of type str.
        signal_strength (str): The model property of type str.
        timing_advance (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "cell_id": 'cellId',
        "location_area_code": 'locationAreaCode',
        "mobile_country_code": 'mobileCountryCode',
        "mobile_network_code": 'mobileNetworkCode',
        "age": 'age',
        "signal_strength": 'signalStrength',
        "timing_advance": 'timingAdvance'
    }

    def __init__(self,
                 cell_id=None,
                 location_area_code=None,
                 mobile_country_code=None,
                 mobile_network_code=None,
                 age=None,
                 signal_strength=None,
                 timing_advance=None):
        """Constructor for the CellTower class"""

        # Initialize members of the class
        self.cell_id = cell_id 
        self.location_area_code = location_area_code 
        self.mobile_country_code = mobile_country_code 
        self.mobile_network_code = mobile_network_code 
        self.age = age 
        self.signal_strength = signal_strength 
        self.timing_advance = timing_advance 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        cell_id = dictionary.get("cellId") if dictionary.get("cellId") else None
        location_area_code = dictionary.get("locationAreaCode") if dictionary.get("locationAreaCode") else None
        mobile_country_code = dictionary.get("mobileCountryCode") if dictionary.get("mobileCountryCode") else None
        mobile_network_code = dictionary.get("mobileNetworkCode") if dictionary.get("mobileNetworkCode") else None
        age = dictionary.get("age") if dictionary.get("age") else None
        signal_strength = dictionary.get("signalStrength") if dictionary.get("signalStrength") else None
        timing_advance = dictionary.get("timingAdvance") if dictionary.get("timingAdvance") else None
        # Return an object of this model
        return cls(cell_id,
                   location_area_code,
                   mobile_country_code,
                   mobile_network_code,
                   age,
                   signal_strength,
                   timing_advance)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'cell_id={self.cell_id!r}, '
                f'location_area_code={self.location_area_code!r}, '
                f'mobile_country_code={self.mobile_country_code!r}, '
                f'mobile_network_code={self.mobile_network_code!r}, '
                f'age={self.age!r}, '
                f'signal_strength={self.signal_strength!r}, '
                f'timing_advance={self.timing_advance!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'cell_id={self.cell_id!s}, '
                f'location_area_code={self.location_area_code!s}, '
                f'mobile_country_code={self.mobile_country_code!s}, '
                f'mobile_network_code={self.mobile_network_code!s}, '
                f'age={self.age!s}, '
                f'signal_strength={self.signal_strength!s}, '
                f'timing_advance={self.timing_advance!s})')
