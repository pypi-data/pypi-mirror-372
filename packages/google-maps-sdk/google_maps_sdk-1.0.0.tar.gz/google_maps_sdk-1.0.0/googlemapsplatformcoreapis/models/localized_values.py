# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from googlemapsplatformcoreapis.models.distance_6 import Distance6
from googlemapsplatformcoreapis.models.static_duration import StaticDuration


class LocalizedValues(object):

    """Implementation of the 'LocalizedValues' model.

    Attributes:
        distance (Distance6): The model property of type Distance6.
        static_duration (StaticDuration): The model property of type
            StaticDuration.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "distance": 'distance',
        "static_duration": 'staticDuration'
    }

    def __init__(self,
                 distance=None,
                 static_duration=None):
        """Constructor for the LocalizedValues class"""

        # Initialize members of the class
        self.distance = distance 
        self.static_duration = static_duration 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        distance = Distance6.from_dictionary(dictionary.get('distance')) if dictionary.get('distance') else None
        static_duration = StaticDuration.from_dictionary(dictionary.get('staticDuration')) if dictionary.get('staticDuration') else None
        # Return an object of this model
        return cls(distance,
                   static_duration)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'distance={self.distance!r}, '
                f'static_duration={self.static_duration!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'distance={self.distance!s}, '
                f'static_duration={self.static_duration!s})')
