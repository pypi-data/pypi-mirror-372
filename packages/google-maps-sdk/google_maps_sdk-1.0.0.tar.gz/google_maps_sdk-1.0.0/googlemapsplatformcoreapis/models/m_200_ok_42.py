# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from googlemapsplatformcoreapis.models.localized_values_1 import LocalizedValues1


class M200OK42(object):

    """Implementation of the '200 OK42' model.

    Attributes:
        origin_index (int): The model property of type int.
        destination_index (int): The model property of type int.
        status (Any): The model property of type Any.
        distance_meters (int): The model property of type int.
        duration (str): The model property of type str.
        static_duration (str): The model property of type str.
        travel_advisory (Any): The model property of type Any.
        condition (str): The model property of type str.
        localized_values (LocalizedValues1): The model property of type
            LocalizedValues1.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "origin_index": 'originIndex',
        "destination_index": 'destinationIndex',
        "status": 'status',
        "distance_meters": 'distanceMeters',
        "duration": 'duration',
        "static_duration": 'staticDuration',
        "travel_advisory": 'travelAdvisory',
        "condition": 'condition',
        "localized_values": 'localizedValues'
    }

    def __init__(self,
                 origin_index=None,
                 destination_index=None,
                 status=None,
                 distance_meters=None,
                 duration=None,
                 static_duration=None,
                 travel_advisory=None,
                 condition=None,
                 localized_values=None):
        """Constructor for the M200OK42 class"""

        # Initialize members of the class
        self.origin_index = origin_index 
        self.destination_index = destination_index 
        self.status = status 
        self.distance_meters = distance_meters 
        self.duration = duration 
        self.static_duration = static_duration 
        self.travel_advisory = travel_advisory 
        self.condition = condition 
        self.localized_values = localized_values 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        origin_index = dictionary.get("originIndex") if dictionary.get("originIndex") else None
        destination_index = dictionary.get("destinationIndex") if dictionary.get("destinationIndex") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        distance_meters = dictionary.get("distanceMeters") if dictionary.get("distanceMeters") else None
        duration = dictionary.get("duration") if dictionary.get("duration") else None
        static_duration = dictionary.get("staticDuration") if dictionary.get("staticDuration") else None
        travel_advisory = dictionary.get("travelAdvisory") if dictionary.get("travelAdvisory") else None
        condition = dictionary.get("condition") if dictionary.get("condition") else None
        localized_values = LocalizedValues1.from_dictionary(dictionary.get('localizedValues')) if dictionary.get('localizedValues') else None
        # Return an object of this model
        return cls(origin_index,
                   destination_index,
                   status,
                   distance_meters,
                   duration,
                   static_duration,
                   travel_advisory,
                   condition,
                   localized_values)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'origin_index={self.origin_index!r}, '
                f'destination_index={self.destination_index!r}, '
                f'status={self.status!r}, '
                f'distance_meters={self.distance_meters!r}, '
                f'duration={self.duration!r}, '
                f'static_duration={self.static_duration!r}, '
                f'travel_advisory={self.travel_advisory!r}, '
                f'condition={self.condition!r}, '
                f'localized_values={self.localized_values!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'origin_index={self.origin_index!s}, '
                f'destination_index={self.destination_index!s}, '
                f'status={self.status!s}, '
                f'distance_meters={self.distance_meters!s}, '
                f'duration={self.duration!s}, '
                f'static_duration={self.static_duration!s}, '
                f'travel_advisory={self.travel_advisory!s}, '
                f'condition={self.condition!s}, '
                f'localized_values={self.localized_values!s})')
