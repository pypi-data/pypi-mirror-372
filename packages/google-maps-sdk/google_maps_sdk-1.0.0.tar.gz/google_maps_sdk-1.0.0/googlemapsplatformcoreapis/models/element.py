# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from googlemapsplatformcoreapis.models.distance import Distance
from googlemapsplatformcoreapis.models.duration import Duration


class Element(object):

    """Implementation of the 'Element' model.

    Attributes:
        distance (Distance): The model property of type Distance.
        duration (Duration): The model property of type Duration.
        status (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "distance": 'distance',
        "duration": 'duration',
        "status": 'status'
    }

    def __init__(self,
                 distance=None,
                 duration=None,
                 status=None):
        """Constructor for the Element class"""

        # Initialize members of the class
        self.distance = distance 
        self.duration = duration 
        self.status = status 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        distance = Distance.from_dictionary(dictionary.get('distance')) if dictionary.get('distance') else None
        duration = Duration.from_dictionary(dictionary.get('duration')) if dictionary.get('duration') else None
        status = dictionary.get("status") if dictionary.get("status") else None
        # Return an object of this model
        return cls(distance,
                   duration,
                   status)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'distance={self.distance!r}, '
                f'duration={self.duration!r}, '
                f'status={self.status!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'distance={self.distance!s}, '
                f'duration={self.duration!s}, '
                f'status={self.status!s})')
