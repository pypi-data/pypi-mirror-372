# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from googlemapsplatformcoreapis.models.standardized_address import StandardizedAddress


class UspsData(object):

    """Implementation of the 'UspsData' model.

    Attributes:
        standardized_address (StandardizedAddress): The model property of type
            StandardizedAddress.
        delivery_point_code (str): The model property of type str.
        delivery_point_check_digit (str): The model property of type str.
        dpv_confirmation (str): The model property of type str.
        dpv_footnote (str): The model property of type str.
        dpv_cmra (str): The model property of type str.
        dpv_vacant (str): The model property of type str.
        dpv_no_stat (str): The model property of type str.
        carrier_route_indicator (str): The model property of type str.
        post_office_city (str): The model property of type str.
        post_office_state (str): The model property of type str.
        fips_county_code (str): The model property of type str.
        county (str): The model property of type str.
        elot_number (str): The model property of type str.
        elot_flag (str): The model property of type str.
        address_record_type (str): The model property of type str.
        dpv_no_stat_reason_code (int): The model property of type int.
        dpv_drop (str): The model property of type str.
        dpv_throwback (str): The model property of type str.
        dpv_non_delivery_days (str): The model property of type str.
        dpv_no_secure_location (str): The model property of type str.
        dpv_pbsa (str): The model property of type str.
        dpv_door_not_accessible (str): The model property of type str.
        dpv_enhanced_delivery_code (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "standardized_address": 'standardizedAddress',
        "delivery_point_code": 'deliveryPointCode',
        "delivery_point_check_digit": 'deliveryPointCheckDigit',
        "dpv_confirmation": 'dpvConfirmation',
        "dpv_footnote": 'dpvFootnote',
        "dpv_cmra": 'dpvCmra',
        "dpv_vacant": 'dpvVacant',
        "dpv_no_stat": 'dpvNoStat',
        "carrier_route_indicator": 'carrierRouteIndicator',
        "post_office_city": 'postOfficeCity',
        "post_office_state": 'postOfficeState',
        "fips_county_code": 'fipsCountyCode',
        "county": 'county',
        "elot_number": 'elotNumber',
        "elot_flag": 'elotFlag',
        "address_record_type": 'addressRecordType',
        "dpv_no_stat_reason_code": 'dpvNoStatReasonCode',
        "dpv_drop": 'dpvDrop',
        "dpv_throwback": 'dpvThrowback',
        "dpv_non_delivery_days": 'dpvNonDeliveryDays',
        "dpv_no_secure_location": 'dpvNoSecureLocation',
        "dpv_pbsa": 'dpvPbsa',
        "dpv_door_not_accessible": 'dpvDoorNotAccessible',
        "dpv_enhanced_delivery_code": 'dpvEnhancedDeliveryCode'
    }

    def __init__(self,
                 standardized_address=None,
                 delivery_point_code=None,
                 delivery_point_check_digit=None,
                 dpv_confirmation=None,
                 dpv_footnote=None,
                 dpv_cmra=None,
                 dpv_vacant=None,
                 dpv_no_stat=None,
                 carrier_route_indicator=None,
                 post_office_city=None,
                 post_office_state=None,
                 fips_county_code=None,
                 county=None,
                 elot_number=None,
                 elot_flag=None,
                 address_record_type=None,
                 dpv_no_stat_reason_code=None,
                 dpv_drop=None,
                 dpv_throwback=None,
                 dpv_non_delivery_days=None,
                 dpv_no_secure_location=None,
                 dpv_pbsa=None,
                 dpv_door_not_accessible=None,
                 dpv_enhanced_delivery_code=None):
        """Constructor for the UspsData class"""

        # Initialize members of the class
        self.standardized_address = standardized_address 
        self.delivery_point_code = delivery_point_code 
        self.delivery_point_check_digit = delivery_point_check_digit 
        self.dpv_confirmation = dpv_confirmation 
        self.dpv_footnote = dpv_footnote 
        self.dpv_cmra = dpv_cmra 
        self.dpv_vacant = dpv_vacant 
        self.dpv_no_stat = dpv_no_stat 
        self.carrier_route_indicator = carrier_route_indicator 
        self.post_office_city = post_office_city 
        self.post_office_state = post_office_state 
        self.fips_county_code = fips_county_code 
        self.county = county 
        self.elot_number = elot_number 
        self.elot_flag = elot_flag 
        self.address_record_type = address_record_type 
        self.dpv_no_stat_reason_code = dpv_no_stat_reason_code 
        self.dpv_drop = dpv_drop 
        self.dpv_throwback = dpv_throwback 
        self.dpv_non_delivery_days = dpv_non_delivery_days 
        self.dpv_no_secure_location = dpv_no_secure_location 
        self.dpv_pbsa = dpv_pbsa 
        self.dpv_door_not_accessible = dpv_door_not_accessible 
        self.dpv_enhanced_delivery_code = dpv_enhanced_delivery_code 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        standardized_address = StandardizedAddress.from_dictionary(dictionary.get('standardizedAddress')) if dictionary.get('standardizedAddress') else None
        delivery_point_code = dictionary.get("deliveryPointCode") if dictionary.get("deliveryPointCode") else None
        delivery_point_check_digit = dictionary.get("deliveryPointCheckDigit") if dictionary.get("deliveryPointCheckDigit") else None
        dpv_confirmation = dictionary.get("dpvConfirmation") if dictionary.get("dpvConfirmation") else None
        dpv_footnote = dictionary.get("dpvFootnote") if dictionary.get("dpvFootnote") else None
        dpv_cmra = dictionary.get("dpvCmra") if dictionary.get("dpvCmra") else None
        dpv_vacant = dictionary.get("dpvVacant") if dictionary.get("dpvVacant") else None
        dpv_no_stat = dictionary.get("dpvNoStat") if dictionary.get("dpvNoStat") else None
        carrier_route_indicator = dictionary.get("carrierRouteIndicator") if dictionary.get("carrierRouteIndicator") else None
        post_office_city = dictionary.get("postOfficeCity") if dictionary.get("postOfficeCity") else None
        post_office_state = dictionary.get("postOfficeState") if dictionary.get("postOfficeState") else None
        fips_county_code = dictionary.get("fipsCountyCode") if dictionary.get("fipsCountyCode") else None
        county = dictionary.get("county") if dictionary.get("county") else None
        elot_number = dictionary.get("elotNumber") if dictionary.get("elotNumber") else None
        elot_flag = dictionary.get("elotFlag") if dictionary.get("elotFlag") else None
        address_record_type = dictionary.get("addressRecordType") if dictionary.get("addressRecordType") else None
        dpv_no_stat_reason_code = dictionary.get("dpvNoStatReasonCode") if dictionary.get("dpvNoStatReasonCode") else None
        dpv_drop = dictionary.get("dpvDrop") if dictionary.get("dpvDrop") else None
        dpv_throwback = dictionary.get("dpvThrowback") if dictionary.get("dpvThrowback") else None
        dpv_non_delivery_days = dictionary.get("dpvNonDeliveryDays") if dictionary.get("dpvNonDeliveryDays") else None
        dpv_no_secure_location = dictionary.get("dpvNoSecureLocation") if dictionary.get("dpvNoSecureLocation") else None
        dpv_pbsa = dictionary.get("dpvPbsa") if dictionary.get("dpvPbsa") else None
        dpv_door_not_accessible = dictionary.get("dpvDoorNotAccessible") if dictionary.get("dpvDoorNotAccessible") else None
        dpv_enhanced_delivery_code = dictionary.get("dpvEnhancedDeliveryCode") if dictionary.get("dpvEnhancedDeliveryCode") else None
        # Return an object of this model
        return cls(standardized_address,
                   delivery_point_code,
                   delivery_point_check_digit,
                   dpv_confirmation,
                   dpv_footnote,
                   dpv_cmra,
                   dpv_vacant,
                   dpv_no_stat,
                   carrier_route_indicator,
                   post_office_city,
                   post_office_state,
                   fips_county_code,
                   county,
                   elot_number,
                   elot_flag,
                   address_record_type,
                   dpv_no_stat_reason_code,
                   dpv_drop,
                   dpv_throwback,
                   dpv_non_delivery_days,
                   dpv_no_secure_location,
                   dpv_pbsa,
                   dpv_door_not_accessible,
                   dpv_enhanced_delivery_code)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'standardized_address={self.standardized_address!r}, '
                f'delivery_point_code={self.delivery_point_code!r}, '
                f'delivery_point_check_digit={self.delivery_point_check_digit!r}, '
                f'dpv_confirmation={self.dpv_confirmation!r}, '
                f'dpv_footnote={self.dpv_footnote!r}, '
                f'dpv_cmra={self.dpv_cmra!r}, '
                f'dpv_vacant={self.dpv_vacant!r}, '
                f'dpv_no_stat={self.dpv_no_stat!r}, '
                f'carrier_route_indicator={self.carrier_route_indicator!r}, '
                f'post_office_city={self.post_office_city!r}, '
                f'post_office_state={self.post_office_state!r}, '
                f'fips_county_code={self.fips_county_code!r}, '
                f'county={self.county!r}, '
                f'elot_number={self.elot_number!r}, '
                f'elot_flag={self.elot_flag!r}, '
                f'address_record_type={self.address_record_type!r}, '
                f'dpv_no_stat_reason_code={self.dpv_no_stat_reason_code!r}, '
                f'dpv_drop={self.dpv_drop!r}, '
                f'dpv_throwback={self.dpv_throwback!r}, '
                f'dpv_non_delivery_days={self.dpv_non_delivery_days!r}, '
                f'dpv_no_secure_location={self.dpv_no_secure_location!r}, '
                f'dpv_pbsa={self.dpv_pbsa!r}, '
                f'dpv_door_not_accessible={self.dpv_door_not_accessible!r}, '
                f'dpv_enhanced_delivery_code={self.dpv_enhanced_delivery_code!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'standardized_address={self.standardized_address!s}, '
                f'delivery_point_code={self.delivery_point_code!s}, '
                f'delivery_point_check_digit={self.delivery_point_check_digit!s}, '
                f'dpv_confirmation={self.dpv_confirmation!s}, '
                f'dpv_footnote={self.dpv_footnote!s}, '
                f'dpv_cmra={self.dpv_cmra!s}, '
                f'dpv_vacant={self.dpv_vacant!s}, '
                f'dpv_no_stat={self.dpv_no_stat!s}, '
                f'carrier_route_indicator={self.carrier_route_indicator!s}, '
                f'post_office_city={self.post_office_city!s}, '
                f'post_office_state={self.post_office_state!s}, '
                f'fips_county_code={self.fips_county_code!s}, '
                f'county={self.county!s}, '
                f'elot_number={self.elot_number!s}, '
                f'elot_flag={self.elot_flag!s}, '
                f'address_record_type={self.address_record_type!s}, '
                f'dpv_no_stat_reason_code={self.dpv_no_stat_reason_code!s}, '
                f'dpv_drop={self.dpv_drop!s}, '
                f'dpv_throwback={self.dpv_throwback!s}, '
                f'dpv_non_delivery_days={self.dpv_non_delivery_days!s}, '
                f'dpv_no_secure_location={self.dpv_no_secure_location!s}, '
                f'dpv_pbsa={self.dpv_pbsa!s}, '
                f'dpv_door_not_accessible={self.dpv_door_not_accessible!s}, '
                f'dpv_enhanced_delivery_code={self.dpv_enhanced_delivery_code!s})')
