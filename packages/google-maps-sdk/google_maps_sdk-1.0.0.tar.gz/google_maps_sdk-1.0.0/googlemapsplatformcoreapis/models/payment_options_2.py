# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from googlemapsplatformcoreapis.api_helper import APIHelper


class PaymentOptions2(object):

    """Implementation of the 'PaymentOptions2' model.

    Attributes:
        accepts_credit_cards (bool): The model property of type bool.
        accepts_debit_cards (bool): The model property of type bool.
        accepts_cash_only (bool): The model property of type bool.
        accepts_nfc (bool): The model property of type bool.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "accepts_credit_cards": 'acceptsCreditCards',
        "accepts_debit_cards": 'acceptsDebitCards',
        "accepts_cash_only": 'acceptsCashOnly',
        "accepts_nfc": 'acceptsNfc'
    }

    _optionals = [
        'accepts_debit_cards',
        'accepts_cash_only',
        'accepts_nfc',
    ]

    def __init__(self,
                 accepts_credit_cards=None,
                 accepts_debit_cards=APIHelper.SKIP,
                 accepts_cash_only=APIHelper.SKIP,
                 accepts_nfc=APIHelper.SKIP):
        """Constructor for the PaymentOptions2 class"""

        # Initialize members of the class
        self.accepts_credit_cards = accepts_credit_cards 
        if accepts_debit_cards is not APIHelper.SKIP:
            self.accepts_debit_cards = accepts_debit_cards 
        if accepts_cash_only is not APIHelper.SKIP:
            self.accepts_cash_only = accepts_cash_only 
        if accepts_nfc is not APIHelper.SKIP:
            self.accepts_nfc = accepts_nfc 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        accepts_credit_cards = dictionary.get("acceptsCreditCards") if "acceptsCreditCards" in dictionary.keys() else None
        accepts_debit_cards = dictionary.get("acceptsDebitCards") if "acceptsDebitCards" in dictionary.keys() else APIHelper.SKIP
        accepts_cash_only = dictionary.get("acceptsCashOnly") if "acceptsCashOnly" in dictionary.keys() else APIHelper.SKIP
        accepts_nfc = dictionary.get("acceptsNfc") if "acceptsNfc" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(accepts_credit_cards,
                   accepts_debit_cards,
                   accepts_cash_only,
                   accepts_nfc)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'accepts_credit_cards={self.accepts_credit_cards!r}, '
                f'accepts_debit_cards={(self.accepts_debit_cards if hasattr(self, "accepts_debit_cards") else None)!r}, '
                f'accepts_cash_only={(self.accepts_cash_only if hasattr(self, "accepts_cash_only") else None)!r}, '
                f'accepts_nfc={(self.accepts_nfc if hasattr(self, "accepts_nfc") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'accepts_credit_cards={self.accepts_credit_cards!s}, '
                f'accepts_debit_cards={(self.accepts_debit_cards if hasattr(self, "accepts_debit_cards") else None)!s}, '
                f'accepts_cash_only={(self.accepts_cash_only if hasattr(self, "accepts_cash_only") else None)!s}, '
                f'accepts_nfc={(self.accepts_nfc if hasattr(self, "accepts_nfc") else None)!s})')
