# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from googlemapsplatformcoreapis.api_helper import APIHelper
from googlemapsplatformcoreapis.configuration import Server
from googlemapsplatformcoreapis.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from googlemapsplatformcoreapis.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from googlemapsplatformcoreapis.models.m_200_ok_10 import M200OK10


class ElevationAPIController(BaseController):

    """A Controller to access Endpoints in the googlemapsplatformcoreapis API."""
    def __init__(self, config):
        super(ElevationAPIController, self).__init__(config)

    def elevation(self,
                  accept):
        """Does a GET request to /elevation/json.

        The Elevation API provides a simple interface to query locations on
        the earth for elevation data. Additionally, you may request sampled
        elevation data along paths, allowing you to calculate elevation
        changes along routes. With the Elevation API, you can develop hiking
        and biking applications, positioning applications, or low resolution
        surveying applications.
        Elevation data is available for all locations on the surface of the
        earth, including depth locations on the ocean floor (which return
        negative values). In those cases where Google does not possess exact
        elevation measurements at the precise location you request, the
        service interpolates and returns an averaged value using the four
        nearest locations. Elevation values are expressed relative to local
        mean sea level (LMSL).
        Requests to the Elevation API utilize different parameters based on
        whether the request is for discrete locations or for an ordered path.
        For discrete locations, requests for elevation return data on the
        specific locations passed in the request; for paths, elevation
        requests are instead sampled along the given path.

        Args:
            accept (str): The request header parameter.

        Returns:
            M200OK10: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_3)
            .path('/elevation/json')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('apiKey'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M200OK10.from_dictionary)
        ).execute()
