# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from googlemapsplatformcoreapis.api_helper import APIHelper
from googlemapsplatformcoreapis.configuration import Server
from googlemapsplatformcoreapis.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from googlemapsplatformcoreapis.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from googlemapsplatformcoreapis.models.m_200_ok_6 import M200OK6


class DirectionsAPILegacyController(BaseController):

    """A Controller to access Endpoints in the googlemapsplatformcoreapis API."""
    def __init__(self, config):
        super(DirectionsAPILegacyController, self).__init__(config)

    def directions(self,
                   destination,
                   origin,
                   accept):
        """Does a GET request to /directions/json.

        The Directions API is a web service that uses an HTTP request to
        return JSON or XML-formatted directions between locations. You can
        receive directions for several modes of transportation, such as
        transit, driving, walking, or cycling.

        Args:
            destination (str): (Required) The place ID, address, or textual
                latitude/longitude value to which you wish to calculate
                directions. The options for the destination parameter are the
                same as for the origin parameter.
            origin (str): (Required) The place ID, address, or textual
                latitude/longitude value from which you wish to calculate
                directions. * Place IDs must be prefixed with `place_id:`. You
                can retrieve place IDs from the Geocoding API and the Places
                API (including Place Autocomplete). For an example using place
                IDs from Place Autocomplete, see [Place Autocomplete and
                Directions](https://developers.google.com/maps/documentation/ja
                vascript/examples/places-autocomplete-directions). For more
                about place IDs, see the [Place ID
                overview](https://developers.google.com/maps/documentation/plac
                es/web-service/place-id).      ```  
                origin=place_id:ChIJ3S-JXmauEmsRUcIaWtf4MzE   ```    * If you
                pass an address, the Directions service geocodes the string
                and converts it to a latitude/longitude coordinate to
                calculate directions. This coordinate may be different from
                that returned by the Geocoding API, for example a building
                entrance rather than its center.      ```  
                origin=24+Sussex+Drive+Ottawa+ON   ```      Using place IDs is
                preferred over using addresses or latitude/longitude
                coordinates. Using coordinates will always result in the point
                being snapped to the road nearest to those coordinates - which
                may not be an access point to the property, or even a road
                that will quickly or safely lead to the destination. * If you
                pass coordinates, the point will snap to the nearest road.
                Passing a place ID is preferred. If you do pass coordinates,
                ensure that no space exists between the latitude and longitude
                values.      ```   origin=41.43206,-81.38992   ```  * Plus
                codes must be formatted as a global code or a compound code.
                Format plus codes as shown here (plus signs are url-escaped to
                `%2B` and spaces are url-escaped to `%20`).       * **Global
                code** is a 4 character area code and 6 character or longer
                local code (849VCWC8+R9 is `849VCWC8%2BR9`).    * **Compound
                code** is a 6 character or longer local code with an explicit
                location (CWC8+R9 Mountain View, CA, USA is
                `CWC8%2BR9%20Mountain%20View%20CA%20USA`).  <div
                class="note">Note: For efficiency and accuracy, use place ID's
                when possible. These ID's are uniquely explicit like a lat/lng
                value pair and provide geocoding benefits for routing such as
                access points and traffic variables. Unlike an address, ID's
                do not require the service to perform a search or an
                intermediate request for place details; therefore, performance
                is better.</div>
            accept (str): The request header parameter.

        Returns:
            M200OK6: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_3)
            .path('/directions/json')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('destination')
                         .value(destination))
            .query_param(Parameter()
                         .key('origin')
                         .value(origin))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('apiKey'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M200OK6.from_dictionary)
        ).execute()
