# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from googlemapsplatformcoreapis.api_helper import APIHelper
from googlemapsplatformcoreapis.configuration import Server
from googlemapsplatformcoreapis.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from googlemapsplatformcoreapis.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from googlemapsplatformcoreapis.models.m_200_ok import M200OK


class AddressValidationAPIController(BaseController):

    """A Controller to access Endpoints in the googlemapsplatformcoreapis API."""
    def __init__(self, config):
        super(AddressValidationAPIController, self).__init__(config)

    def validate_address(self,
                         body):
        """Does a POST request to /v1:validateAddress.

        API endpoint used to validate an address.
        Full documentation can be found here:
        [https://developers.google.com/maps/documentation/address-validation/re
        ference/rest/v1/TopLevel/validateAddress](https://developers.google.com
        /maps/documentation/address-validation/reference/rest/v1/TopLevel/valid
        ateAddress)

        Args:
            body (ValidateAddressRequest): The request body parameter.

        Returns:
            M200OK: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/v1:validateAddress')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('apiKey'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(M200OK.from_dictionary)
        ).execute()

    def provide_validation_feedback(self,
                                    body):
        """Does a POST request to /v1:provideValidationFeedback.

        This is used to provide feedback back to the Google Address Validation
        API on how the address was used. Note that it's not required to
        implement this, but is helpful to improve the ecosystem and provide
        better responses for future requests.
        Full documentation can be found here:
        [https://developers.google.com/maps/documentation/address-validation/re
        ference/rest/v1/TopLevel/provideValidationFeedback#ValidationConclusion
        ](https://developers.google.com/maps/documentation/address-validation/r
        eference/rest/v1/TopLevel/provideValidationFeedback#ValidationConclusio
        n)

        Args:
            body (str): The request body parameter.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/v1:provideValidationFeedback')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('content-type')
                          .value('text/plain; charset=utf-8'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('apiKey'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
        ).execute()
