# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from googlemapsplatformcoreapis.api_helper import APIHelper
from googlemapsplatformcoreapis.models.highlighted_text_range import HighlightedTextRange


class HighlightedText(object):

    """Implementation of the 'HighlightedText' model.

    Attributes:
        text (str): The model property of type str.
        highlighted_text_ranges (List[HighlightedTextRange]): The model
            property of type List[HighlightedTextRange].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "text": 'text',
        "highlighted_text_ranges": 'highlightedTextRanges'
    }

    _optionals = [
        'highlighted_text_ranges',
    ]

    def __init__(self,
                 text=None,
                 highlighted_text_ranges=APIHelper.SKIP):
        """Constructor for the HighlightedText class"""

        # Initialize members of the class
        self.text = text 
        if highlighted_text_ranges is not APIHelper.SKIP:
            self.highlighted_text_ranges = highlighted_text_ranges 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        text = dictionary.get("text") if dictionary.get("text") else None
        highlighted_text_ranges = None
        if dictionary.get('highlightedTextRanges') is not None:
            highlighted_text_ranges = [HighlightedTextRange.from_dictionary(x) for x in dictionary.get('highlightedTextRanges')]
        else:
            highlighted_text_ranges = APIHelper.SKIP
        # Return an object of this model
        return cls(text,
                   highlighted_text_ranges)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'text={self.text!r}, '
                f'highlighted_text_ranges={(self.highlighted_text_ranges if hasattr(self, "highlighted_text_ranges") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'text={self.text!s}, '
                f'highlighted_text_ranges={(self.highlighted_text_ranges if hasattr(self, "highlighted_text_ranges") else None)!s})')
