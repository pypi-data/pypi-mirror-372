# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class UtilityIncentive(object):

    """Implementation of the 'UtilityIncentive' model.

    Attributes:
        currency_code (str): The model property of type str.
        units (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "currency_code": 'currencyCode',
        "units": 'units'
    }

    def __init__(self,
                 currency_code=None,
                 units=None):
        """Constructor for the UtilityIncentive class"""

        # Initialize members of the class
        self.currency_code = currency_code 
        self.units = units 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        currency_code = dictionary.get("currencyCode") if dictionary.get("currencyCode") else None
        units = dictionary.get("units") if dictionary.get("units") else None
        # Return an object of this model
        return cls(currency_code,
                   units)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'currency_code={self.currency_code!r}, '
                f'units={self.units!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'currency_code={self.currency_code!s}, '
                f'units={self.units!s})')
