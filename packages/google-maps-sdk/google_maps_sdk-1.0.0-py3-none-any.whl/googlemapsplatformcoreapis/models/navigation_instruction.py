# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class NavigationInstruction(object):

    """Implementation of the 'NavigationInstruction' model.

    Attributes:
        maneuver (str): The model property of type str.
        instructions (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "maneuver": 'maneuver',
        "instructions": 'instructions'
    }

    def __init__(self,
                 maneuver=None,
                 instructions=None):
        """Constructor for the NavigationInstruction class"""

        # Initialize members of the class
        self.maneuver = maneuver 
        self.instructions = instructions 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        maneuver = dictionary.get("maneuver") if dictionary.get("maneuver") else None
        instructions = dictionary.get("instructions") if dictionary.get("instructions") else None
        # Return an object of this model
        return cls(maneuver,
                   instructions)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'maneuver={self.maneuver!r}, '
                f'instructions={self.instructions!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'maneuver={self.maneuver!s}, '
                f'instructions={self.instructions!s})')
