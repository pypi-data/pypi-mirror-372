# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from googlemapsplatformcoreapis.api_helper import APIHelper


class PaymentOptions(object):

    """Implementation of the 'PaymentOptions' model.

    Attributes:
        accepts_credit_cards (bool): The model property of type bool.
        accepts_cash_only (bool): The model property of type bool.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "accepts_credit_cards": 'acceptsCreditCards',
        "accepts_cash_only": 'acceptsCashOnly'
    }

    def __init__(self,
                 accepts_credit_cards=None,
                 accepts_cash_only=None):
        """Constructor for the PaymentOptions class"""

        # Initialize members of the class
        self.accepts_credit_cards = accepts_credit_cards 
        self.accepts_cash_only = accepts_cash_only 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        accepts_credit_cards = dictionary.get("acceptsCreditCards") if "acceptsCreditCards" in dictionary.keys() else None
        accepts_cash_only = dictionary.get("acceptsCashOnly") if "acceptsCashOnly" in dictionary.keys() else None
        # Return an object of this model
        return cls(accepts_credit_cards,
                   accepts_cash_only)

    @classmethod
    def validate(cls, dictionary):
        """Validates dictionary against class required properties

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            boolean : if dictionary is valid contains required properties.

        """

        if isinstance(dictionary, cls):
            return APIHelper.is_valid_type(value=dictionary.accepts_credit_cards,
                                           type_callable=lambda value: isinstance(value, bool)) \
                and APIHelper.is_valid_type(value=dictionary.accepts_cash_only,
                                            type_callable=lambda value: isinstance(value, bool))

        if not isinstance(dictionary, dict):
            return False

        return APIHelper.is_valid_type(value=dictionary.get('acceptsCreditCards'),
                                       type_callable=lambda value: isinstance(value, bool)) \
            and APIHelper.is_valid_type(value=dictionary.get('acceptsCashOnly'),
                                        type_callable=lambda value: isinstance(value, bool))

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'accepts_credit_cards={self.accepts_credit_cards!r}, '
                f'accepts_cash_only={self.accepts_cash_only!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'accepts_credit_cards={self.accepts_credit_cards!s}, '
                f'accepts_cash_only={self.accepts_cash_only!s})')
