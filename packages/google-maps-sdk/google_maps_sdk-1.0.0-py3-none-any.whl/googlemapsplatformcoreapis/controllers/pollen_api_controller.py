# -*- coding: utf-8 -*-

"""
googlemapsplatformcoreapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from googlemapsplatformcoreapis.api_helper import APIHelper
from googlemapsplatformcoreapis.configuration import Server
from googlemapsplatformcoreapis.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from googlemapsplatformcoreapis.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single


class PollenAPIController(BaseController):

    """A Controller to access Endpoints in the googlemapsplatformcoreapis API."""
    def __init__(self, config):
        super(PollenAPIController, self).__init__(config)

    def get_forecast(self,
                     location_longitude,
                     location_latitude,
                     days):
        """Does a GET request to /forecast:lookup.

        The [forecast](https://developers.google.com/maps/documentation/pollen/
        reference/rest/v1/forecast) endpoint provides up to 5 days of daily
        pollen information. You can control the following information that is
        shown to users:
        - Number of forecast days

        - Language code for translated fields

        - Response page size

        - Detailed information about a given area's plants and their
        allergenic potential

        Args:
            location_longitude (str): Required. The longitude from which the
                API searches for pollen forecast data.
            location_latitude (str): Required. The latitude from which the API
                searches for pollen forecast data.
            days (str): Required. A number that indicates how many forecast
                days to request (minimum value 1, maximum value is 5).

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_10)
            .path('/forecast:lookup')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('location.longitude')
                         .value(location_longitude))
            .query_param(Parameter()
                         .key('location.latitude')
                         .value(location_latitude))
            .query_param(Parameter()
                         .key('days')
                         .value(days))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('apiKey'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def get_heatmap_tiles(self):
        """Does a GET request to /mapTypes/GRASS_UPI/heatmapTiles/0/0/0.

        The [heatmapTiles](https://developers.google.com/maps/documentation/pol
        len/reference/rest/v1/mapTypes.heatmapTiles/lookupHeatmapTile) endpoint
        provides pollen-related heatmaps through tile overlay. A tile overlay
        is a collection of image tiles that can be displayed on top of Google
        Maps. Each image tile is 256 x 256 pixels.
        The tile overlay is a grid assembled from a collection of tiles, each
        assigned (`X`,`Y`) coordinates. The tile with coordinates (0,0) is
        always at the northwest corner of the map. The `X` values increase
        from west to east, while the `Y` values increase from north to south.
        The `zoom level` determines how large or small the contents of a map
        appear in a map view. The tile grid size is determined by scaling
        the `X` and `Y` coordinates exponentially by the zoom level.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_10)
            .path('/mapTypes/GRASS_UPI/heatmapTiles/0/0/0')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('apiKey'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()
