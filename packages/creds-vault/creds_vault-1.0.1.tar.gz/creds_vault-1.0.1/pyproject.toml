[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "creds-vault"
dynamic = ["version"]
description = "Secure environment variable synchronization tool"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "Mudassir Mirza", email = "hello.mudassirmirza@gmail.com"}]
maintainers = [{name = "Mudassir Mirza", email = "hello.mudassirmirza@gmail.com"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
keywords = ["secrets-cli", "environment", "dotenv", "encryption", "cli", "github", "gist", "security", "devops"]
requires-python = ">=3.7"
dependencies = [
    "requests>=2.25.0",
    "cryptography>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "twine>=3.0",
    "pip-audit>=2.0",
    "safety>=2.0",
]

[project.scripts]
secrets = "secrets_cli.cli:main"

[project.urls]
Homepage = "https://github.com/mirzamudassir/secrets-cli"
Documentation = "https://github.com/mirzamudassir/secrets-cli#readme"
Repository = "https://github.com/mirzamudassir/secrets-cli"
"Bug Reports" = "https://github.com/mirzamudassir/secrets-cli/issues"
Changelog = "https://github.com/mirzamudassir/secrets-cli/blob/main/CHANGELOG.md"

[tool.setuptools.dynamic]
version = {attr = "secrets_cli.cli.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["secrets_cli*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".eggs"]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["secrets_cli"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]