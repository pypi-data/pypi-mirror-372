# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetPublicIpRangesResult',
    'AwaitableGetPublicIpRangesResult',
    'get_public_ip_ranges',
    'get_public_ip_ranges_output',
]

@pulumi.output_type
class GetPublicIpRangesResult:
    """
    A collection of values returned by getPublicIpRanges.
    """
    def __init__(__self__, id=None, public_ip_ranges=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if public_ip_ranges and not isinstance(public_ip_ranges, list):
            raise TypeError("Expected argument 'public_ip_ranges' to be a list")
        pulumi.set(__self__, "public_ip_ranges", public_ip_ranges)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="publicIpRanges")
    def public_ip_ranges(self) -> Sequence['outputs.GetPublicIpRangesPublicIpRangeResult']:
        """
        A list of all public IP ranges.
        """
        return pulumi.get(self, "public_ip_ranges")


class AwaitableGetPublicIpRangesResult(GetPublicIpRangesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPublicIpRangesResult(
            id=self.id,
            public_ip_ranges=self.public_ip_ranges)


def get_public_ip_ranges(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPublicIpRangesResult:
    """
    A list of all public IP ranges that STACKIT uses.

    ## Example Usage
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('stackit:index/getPublicIpRanges:getPublicIpRanges', __args__, opts=opts, typ=GetPublicIpRangesResult).value

    return AwaitableGetPublicIpRangesResult(
        id=pulumi.get(__ret__, 'id'),
        public_ip_ranges=pulumi.get(__ret__, 'public_ip_ranges'))
def get_public_ip_ranges_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetPublicIpRangesResult]:
    """
    A list of all public IP ranges that STACKIT uses.

    ## Example Usage
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('stackit:index/getPublicIpRanges:getPublicIpRanges', __args__, opts=opts, typ=GetPublicIpRangesResult)
    return __ret__.apply(lambda __response__: GetPublicIpRangesResult(
        id=pulumi.get(__response__, 'id'),
        public_ip_ranges=pulumi.get(__response__, 'public_ip_ranges')))
