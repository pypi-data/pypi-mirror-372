# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetObjectstorageBucketResult',
    'AwaitableGetObjectstorageBucketResult',
    'get_objectstorage_bucket',
    'get_objectstorage_bucket_output',
]

@pulumi.output_type
class GetObjectstorageBucketResult:
    """
    A collection of values returned by getObjectstorageBucket.
    """
    def __init__(__self__, id=None, name=None, project_id=None, region=None, url_path_style=None, url_virtual_hosted_style=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if project_id and not isinstance(project_id, str):
            raise TypeError("Expected argument 'project_id' to be a str")
        pulumi.set(__self__, "project_id", project_id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if url_path_style and not isinstance(url_path_style, str):
            raise TypeError("Expected argument 'url_path_style' to be a str")
        pulumi.set(__self__, "url_path_style", url_path_style)
        if url_virtual_hosted_style and not isinstance(url_virtual_hosted_style, str):
            raise TypeError("Expected argument 'url_virtual_hosted_style' to be a str")
        pulumi.set(__self__, "url_virtual_hosted_style", url_virtual_hosted_style)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The bucket name. It must be DNS conform.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="projectId")
    def project_id(self) -> _builtins.str:
        """
        STACKIT Project ID to which the bucket is associated.
        """
        return pulumi.get(self, "project_id")

    @_builtins.property
    @pulumi.getter
    def region(self) -> Optional[_builtins.str]:
        """
        The resource region. If not defined, the provider region is used.
        """
        return pulumi.get(self, "region")

    @_builtins.property
    @pulumi.getter(name="urlPathStyle")
    def url_path_style(self) -> _builtins.str:
        return pulumi.get(self, "url_path_style")

    @_builtins.property
    @pulumi.getter(name="urlVirtualHostedStyle")
    def url_virtual_hosted_style(self) -> _builtins.str:
        return pulumi.get(self, "url_virtual_hosted_style")


class AwaitableGetObjectstorageBucketResult(GetObjectstorageBucketResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetObjectstorageBucketResult(
            id=self.id,
            name=self.name,
            project_id=self.project_id,
            region=self.region,
            url_path_style=self.url_path_style,
            url_virtual_hosted_style=self.url_virtual_hosted_style)


def get_objectstorage_bucket(name: Optional[_builtins.str] = None,
                             project_id: Optional[_builtins.str] = None,
                             region: Optional[_builtins.str] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetObjectstorageBucketResult:
    """
    ObjectStorage bucket data source schema. Must have a `region` specified in the provider configuration.

    ## Example Usage


    :param _builtins.str name: The bucket name. It must be DNS conform.
    :param _builtins.str project_id: STACKIT Project ID to which the bucket is associated.
    :param _builtins.str region: The resource region. If not defined, the provider region is used.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['projectId'] = project_id
    __args__['region'] = region
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('stackit:index/getObjectstorageBucket:getObjectstorageBucket', __args__, opts=opts, typ=GetObjectstorageBucketResult).value

    return AwaitableGetObjectstorageBucketResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        project_id=pulumi.get(__ret__, 'project_id'),
        region=pulumi.get(__ret__, 'region'),
        url_path_style=pulumi.get(__ret__, 'url_path_style'),
        url_virtual_hosted_style=pulumi.get(__ret__, 'url_virtual_hosted_style'))
def get_objectstorage_bucket_output(name: Optional[pulumi.Input[_builtins.str]] = None,
                                    project_id: Optional[pulumi.Input[_builtins.str]] = None,
                                    region: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                    opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetObjectstorageBucketResult]:
    """
    ObjectStorage bucket data source schema. Must have a `region` specified in the provider configuration.

    ## Example Usage


    :param _builtins.str name: The bucket name. It must be DNS conform.
    :param _builtins.str project_id: STACKIT Project ID to which the bucket is associated.
    :param _builtins.str region: The resource region. If not defined, the provider region is used.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['projectId'] = project_id
    __args__['region'] = region
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('stackit:index/getObjectstorageBucket:getObjectstorageBucket', __args__, opts=opts, typ=GetObjectstorageBucketResult)
    return __ret__.apply(lambda __response__: GetObjectstorageBucketResult(
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        project_id=pulumi.get(__response__, 'project_id'),
        region=pulumi.get(__response__, 'region'),
        url_path_style=pulumi.get(__response__, 'url_path_style'),
        url_virtual_hosted_style=pulumi.get(__response__, 'url_virtual_hosted_style')))
