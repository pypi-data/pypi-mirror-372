[tool.poetry]
name = "tenduke_scale"
version = "2.3.0"
description = "API client for 10Duke Scale."
authors = []
repository = "https://gitlab.com/10Duke/scale/python/python-scale-sdk"
license = "MIT"
readme = "README.md"
packages = [
    {include = "tenduke_scale"},
    {include = "tenduke_scale/py.typed"},
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Software Development",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
requests = {extras = ["security"], version = "^2.32.3"}
pyjwt = "^2.10.1"
tenduke-core = "3.0.1"
platformdirs = "^4.3.8"

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.0"
mypy = "^1.15.0"
mutmut = "^3.2.3"
pydocstyle = "^6.3.0"
pyright = "^1.1.386"
pytest = "^8.3.5"
pytest-asyncio = "^1.0.0"
pytest-cov = "^6.0.0"
pytest-freezer = "^0.4.9"
pytest-mock = "^3.14.0"
requests-mock = "^1.12.1"
tox = "^4.24.2"
types-python-dateutil = "^2.9.0.20241206"
types-requests = "^2.32.0.20250306"
twine = "^6.1.0"


[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.0"
mkdocstrings = {extras = ["python"], version = "^0.30.0"}
mdx-include = "^1.4.2"

[[tool.poetry.source]]
name = "gitlab-tenduke-core"
url = "https://gitlab.com/api/v4/projects/53247933/packages/pypi/simple"
priority = "supplemental"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 100
indent-width = 4

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
]

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

fixable = ["ALL"]
unfixable = []

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.pyright]
typeCheckingMode = "basic"

[tool.mutmut]
paths_to_mutate = "tenduke_core/"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = {py310, py311, py312, py313}

[testenv]
skip_install = true
allowlist_externals = poetry
commands_pre =
    poetry install
commands =
    poetry run pytest tests/ --import-mode importlib
"""

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
