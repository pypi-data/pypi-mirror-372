[project]
authors = [
  { name = "Adrien Plaçais", email = "placais@lpsc.in2p3.fr" },
  { name = "Bruce Yee-Rendon", email = "byee@post.j-parc.jp" },
  { name = "Didier Uriot", email = "didier.uriot@cea.fr" },
  { name = "Frédéric Bouly", email = "bouly@lpsc.in2p3.fr" },
  { name = "Jean-Michel Lagniel", email = "jean-michel.lagniel@ganil.fr" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
  "bayesian-optimization>=3.1, <4",
  "cloudpickle>=3, <4",
  "matplotlib>=3.9.1, <4",
  "numpy>=2, <3",
  "pandas>=2.2, <3",
  "palettable>=3.3.3, <4",
  "pre-commit>=4, <5",
  "pymoo>=0.6.1.3, <1",
  "scipy>=1.14, <2",
]
description = "Automatically compensate cavity failures in linacs"
dynamic = ["version"]
keywords = ["failure compensation", "linac", "linear accelerator", "reliability"]
name = "LightWin"
readme = "README.md"
requires-python = ">=3.12"

[project.optional-dependencies]
docs = [
  "myst-parser>=4, <5",
  "nbsphinx>=0.9.6, <1",
  "sphinx-autodoc-typehints>=3.0.1, <4",
  "sphinx-rtd-theme>=3, <4",
  "sphinx-tabs>=3.4,<4",
  "sphinxcontrib-bibtex>=2.6,<3",
]
test = ["pytest>=8.3.2, <9"]

[project.scripts]
lw-combine-solutions = "lightwin.scripts.combine_solutions:main"
lw-compute-lost-power-per-meter = "lightwin.scripts.compute_lost_power_per_meter:main"
lw-reorder-output-figures = "lightwin.scripts.reorder_output_figures:main"

[project.urls]
changelog = "https://github.com/AdrienPlacais/LightWin/blob/main/CHANGELOG.md"
discussions = "https://github.com/AdrienPlacais/LightWin/discussions"
documentation = "https://lightwin.readthedocs.io/en/latest/"
homepage = "https://github.com/AdrienPlacais/LightWin"
tracker = "https://github.com/AdrienPlacais/LightWin/issues"

[tool.black]
line-length = 79
target-version = ["py312"]

[tool.isort]
line_length = 79
profile = "black"
src_paths = ["./src"]

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib", "--strict-markers"]
filterwarnings = ["ignore:.*cKDTree.*:DeprecationWarning"]
markers = [
  "cython: mark tests that require a Cython compilation (deselect with '-m \"not cython\"')",
  "envelope1d: mark tests using the Envelope1D solver",
  "envelope3d: mark tests using the Envelope3D solver",
  "implementation: mark tests currently under implementation",
  "slow: mark a test as slow (deselect with '-m \"not slow\"')",
  "smoke: mark quick and critical tests (select with '-m smoke')",
  "tmp: mark to select specific tests for debug",
  "tracewin: mark tests requiring a working installation of TraceWin (deselect with '-m \"not tracewin\"')",
]
minversion = "6.0"
testpaths = ["tests"]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]

[tool.cibuildwheel]
build-verbosity = 1
test-command = 'pytest {project}/tests -m "not implementation and not tracewin and not slow"'
test-extras = "test"

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=64", "Cython>=3, <4", "numpy>=2, <3", "setuptools-scm>=8, <9"]
