"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

from abc import (
    ABCMeta,
    abstractmethod,
)
from chalk._gen.chalk.server.v1.model_registry_pb2 import (
    CreateModelRequest,
    CreateModelResponse,
    CreateModelVersionRequest,
    CreateModelVersionResponse,
    GetModelRequest,
    GetModelResponse,
    GetModelVersionRequest,
    GetModelVersionResponse,
    ListModelVersionsRequest,
    ListModelVersionsResponse,
    ListModelsRequest,
    ListModelsResponse,
    UpdateModelRequest,
    UpdateModelResponse,
    UpdateModelVersionRequest,
    UpdateModelVersionResponse,
)
from grpc import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)

class ModelRegistryServiceStub:
    def __init__(self, channel: Channel) -> None: ...
    ListModels: UnaryUnaryMultiCallable[
        ListModelsRequest,
        ListModelsResponse,
    ]
    GetModel: UnaryUnaryMultiCallable[
        GetModelRequest,
        GetModelResponse,
    ]
    CreateModel: UnaryUnaryMultiCallable[
        CreateModelRequest,
        CreateModelResponse,
    ]
    UpdateModel: UnaryUnaryMultiCallable[
        UpdateModelRequest,
        UpdateModelResponse,
    ]
    ListModelVersions: UnaryUnaryMultiCallable[
        ListModelVersionsRequest,
        ListModelVersionsResponse,
    ]
    GetModelVersion: UnaryUnaryMultiCallable[
        GetModelVersionRequest,
        GetModelVersionResponse,
    ]
    CreateModelVersion: UnaryUnaryMultiCallable[
        CreateModelVersionRequest,
        CreateModelVersionResponse,
    ]
    UpdateModelVersion: UnaryUnaryMultiCallable[
        UpdateModelVersionRequest,
        UpdateModelVersionResponse,
    ]

class ModelRegistryServiceServicer(metaclass=ABCMeta):
    @abstractmethod
    def ListModels(
        self,
        request: ListModelsRequest,
        context: ServicerContext,
    ) -> ListModelsResponse: ...
    @abstractmethod
    def GetModel(
        self,
        request: GetModelRequest,
        context: ServicerContext,
    ) -> GetModelResponse: ...
    @abstractmethod
    def CreateModel(
        self,
        request: CreateModelRequest,
        context: ServicerContext,
    ) -> CreateModelResponse: ...
    @abstractmethod
    def UpdateModel(
        self,
        request: UpdateModelRequest,
        context: ServicerContext,
    ) -> UpdateModelResponse: ...
    @abstractmethod
    def ListModelVersions(
        self,
        request: ListModelVersionsRequest,
        context: ServicerContext,
    ) -> ListModelVersionsResponse: ...
    @abstractmethod
    def GetModelVersion(
        self,
        request: GetModelVersionRequest,
        context: ServicerContext,
    ) -> GetModelVersionResponse: ...
    @abstractmethod
    def CreateModelVersion(
        self,
        request: CreateModelVersionRequest,
        context: ServicerContext,
    ) -> CreateModelVersionResponse: ...
    @abstractmethod
    def UpdateModelVersion(
        self,
        request: UpdateModelVersionRequest,
        context: ServicerContext,
    ) -> UpdateModelVersionResponse: ...

def add_ModelRegistryServiceServicer_to_server(servicer: ModelRegistryServiceServicer, server: Server) -> None: ...
