[project]
name = "tool-webp-converter"
version = "0.1.0"
description = "A tool for optimal WebP image compression"
authors = [
    { name = "guilhemheinrich", email = "guilhem.heinrich@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = ["pillow (>=11.3.0,<12.0.0)", "click (>=8.2.1,<9.0.0)"]

[project.scripts]
webp-converter = "tool_webp_converter.cli:main"

[build-system]
requires = [
    "poetry-core>=2.0.0,<3.0.0",
]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [
    { include = "tool_webp_converter", from = "src" },
]

[tool.poetry.group.dev.dependencies]
python-semantic-release = "^9.21.1"

[tool.ruff]
src = ["src"]
select = [
    "B",  # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4", # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",  # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",  # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "N",  # pep8-naming - https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "W",  # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",  # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP", # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
]
line-length = 120


[tool.semantic_release]
version_toml = [
    "pyproject.toml:project.version",
]
version_variables = [
    "src/tool_webp_converter/__init__.py:__version__",
]
branch = "main"
upload_to_pypi = true
upload_to_release = true
upload_to_repository = true
assets = []
build_command_env = []
build_command = "pip install poetry && poetry build"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
changelog_sections = [
    "feature",
    "fix",
    "breaking",
]
commit_parser = "conventional"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = [
    "feat",
]
patch_tags = [
    "fix",
    "perf",
]
other_allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "style",
    "refactor",
    "test",
]
allowed_tags = [
    "feat",
    "fix",
    "perf",
    "build",
    "chore",
    "ci",
    "docs",
    "style",
    "refactor",
    "test",
]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = [
    "dist/*",
]
upload_to_vcs_release = true

