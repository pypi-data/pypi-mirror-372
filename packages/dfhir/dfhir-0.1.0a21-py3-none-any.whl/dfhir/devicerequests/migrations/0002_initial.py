# Generated by Django 5.2 on 2025-04-23 12:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0003_initial'),
        ('careteams', '0002_initial'),
        ('devicerequests', '0001_initial'),
        ('devices', '0001_initial'),
        ('encounters', '0001_initial'),
        ('healthcareservices', '0001_initial'),
        ('organizations', '0001_initial'),
        ('provenances', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='devicerequest',
            name='encounter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_encounter', to='encounters.encounterreference'),
        ),
        migrations.AddField(
            model_name='devicerequest',
            name='group_identifier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_group_identifier', to='base.identifier'),
        ),
        migrations.AddField(
            model_name='devicerequest',
            name='identifier',
            field=models.ManyToManyField(blank=True, related_name='device_request_identifier', to='base.identifier'),
        ),
        migrations.AddField(
            model_name='devicerequest',
            name='note',
            field=models.ManyToManyField(blank=True, related_name='device_request_note', to='base.annotation'),
        ),
        migrations.AddField(
            model_name='devicerequest',
            name='occurrence_period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_occurrence_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='devicerequest',
            name='occurrence_timing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_request_occurrence_timing', to='base.timing'),
        ),
        migrations.AddField(
            model_name='devicerequest',
            name='relevant_history',
            field=models.ManyToManyField(blank=True, related_name='device_request_relevant_history', to='provenances.provenancereference'),
        ),
        migrations.AddField(
            model_name='devicerequest',
            name='supporting_info',
            field=models.ManyToManyField(blank=True, related_name='device_request_supporting_info', to='base.reference'),
        ),
        migrations.AddField(
            model_name='devicerequestparameter',
            name='code',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_parameter_code', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='devicerequestparameter',
            name='value_codeable_concept',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_parameter_value_codeable_concept', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='devicerequestparameter',
            name='value_quantity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_parameter_value_quantity', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='devicerequestparameter',
            name='value_range',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_parameter_value_range', to='base.range'),
        ),
        migrations.AddField(
            model_name='devicerequest',
            name='parameter',
            field=models.ManyToManyField(blank=True, related_name='device_request_parameter', to='devicerequests.devicerequestparameter'),
        ),
        migrations.AddField(
            model_name='devicerequestperformercodeablereference',
            name='concept',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_performer_codeable_reference_concept', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='devicerequest',
            name='performer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_performer', to='devicerequests.devicerequestperformercodeablereference'),
        ),
        migrations.AddField(
            model_name='devicerequestperformerreference',
            name='care_team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_performer_reference_care_team', to='careteams.careteam'),
        ),
        migrations.AddField(
            model_name='devicerequestperformerreference',
            name='device',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_performer_reference_device', to='devices.device'),
        ),
        migrations.AddField(
            model_name='devicerequestperformerreference',
            name='healthcare_service',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_performer_reference_healthcare_service', to='healthcareservices.healthcareservice'),
        ),
        migrations.AddField(
            model_name='devicerequestperformerreference',
            name='identifier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_performer_reference_identifier', to='base.identifier'),
        ),
        migrations.AddField(
            model_name='devicerequestperformerreference',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='device_request_performer_reference_organization', to='organizations.organization'),
        ),
    ]
