# Generated by Django 5.2 on 2025-04-23 12:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('activitydefinitions', '0001_initial'),
        ('base', '0001_initial'),
        ('locations', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='activitydefinition',
            name='as_needed_codeable_concept',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_as_needed_codeable_concept', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='author',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_author', to='base.contactdetail'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='body_site',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_body_site', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='code',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_code', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='contact',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_contact', to='base.contactdetail'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='editor',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_editor', to='base.contactdetail'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='effective_period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='endorser',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_endorser', to='base.contactdetail'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='identifier',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_identifier', to='base.identifier'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='jurisdiction',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_jurisdiction', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='kind',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_kind', to='base.coding'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_location', to='locations.locationreference'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='product_codeable_concept',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_product_codeable_concept', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='quantity',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_quantity', to='base.simplequantity'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='related_artifact',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_related_artifact', to='base.relatedartifact'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='reviewer',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_reviewer', to='base.contactdetail'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='subject_codealbe_concept',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_subject_codeable_concept', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='timing_age',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_timing_age', to='base.age'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='timing_duration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_timing_duration', to='base.duration'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='timing_range',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_timing_range', to='base.range'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='timing_timing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_timing_timing', to='base.timing'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='topic',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_topic', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='use_context',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_use_context', to='base.usagecontext'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='version_algorithm_coding',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_version_algorithm_coding', to='base.coding'),
        ),
        migrations.AddField(
            model_name='activitydefinitiondynamicvalue',
            name='expression',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_dynamic_value_expression', to='base.expression'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='dynamic_value',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_note', to='activitydefinitions.activitydefinitiondynamicvalue'),
        ),
        migrations.AddField(
            model_name='activitydefinitionparticipant',
            name='function',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_participant_function', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='activitydefinitionparticipant',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_definition_participant_role', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='activitydefinition',
            name='participant',
            field=models.ManyToManyField(blank=True, related_name='activity_definition_participant', to='activitydefinitions.activitydefinitionparticipant'),
        ),
    ]
