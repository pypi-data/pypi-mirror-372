# Generated by Django 5.2 on 2025-04-23 12:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='extendedcontactdetail',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='extended_contact_detail_organization', to='organizations.organization'),
        ),
        migrations.AddField(
            model_name='extendedcontactdetail',
            name='purpose',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='extended_contact_detail_purpose', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='extendedcontactdetail',
            name='telecom',
            field=models.ManyToManyField(blank=True, related_name='extended_contact_detail_telecom', to='base.contactpoint'),
        ),
        migrations.AddField(
            model_name='extendedcontactdetail',
            name='name',
            field=models.ManyToManyField(blank=True, related_name='extended_contact_detail_name', to='base.humanname'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='monetarycomponent',
            name='code',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='monetory_component_code', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='monetarycomponent',
            name='amount',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='monetory_component_amount', to='base.money'),
        ),
        migrations.AddField(
            model_name='availability',
            name='not_available_time',
            field=models.ManyToManyField(blank=True, related_name='availability_not_available_time', to='base.notavailabletime'),
        ),
        migrations.AddField(
            model_name='organizationreference',
            name='identifier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='organization_reference_identifier', to='base.identifier'),
        ),
        migrations.AddField(
            model_name='organizationreference',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='organization_reference', to='organizations.organization'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='assigner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='identifier_for_organization', to='base.organizationreference'),
        ),
        migrations.AddField(
            model_name='payload',
            name='type',
            field=models.ManyToManyField(blank=True, related_name='payload_type', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='notavailabletime',
            name='during',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='not_available_time_during', to='base.period'),
        ),
        migrations.AddField(
            model_name='identifier',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='identifier', to='base.period'),
        ),
        migrations.AddField(
            model_name='humanname',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='human_name_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='extendedcontactdetail',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='extended_contact_detail_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='contactpoint',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_point_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='availability',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='availability_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='address',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='address_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='productshelflife',
            name='period_duration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='product_shelf_life_period_duration', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='productshelflife',
            name='special_precautions_for_storage',
            field=models.ManyToManyField(blank=True, related_name='product_shelf_life_special_precautions_for_storage', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='productshelflife',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='product_shelf_life_type', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='qualification',
            name='code',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='qualification_code', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='qualification',
            name='identifier',
            field=models.ManyToManyField(blank=True, related_name='qualification_identifier', to='base.identifier'),
        ),
        migrations.AddField(
            model_name='qualification',
            name='issuer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='qualification_issuer', to='base.organizationreference'),
        ),
        migrations.AddField(
            model_name='qualification',
            name='period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='qualification_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='range',
            name='high',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='range_high', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='range',
            name='low',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='range_low', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='ratio',
            name='denominator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ratio_denominator', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='ratio',
            name='numerator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ratio_numerator', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='reference',
            name='identifier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='base.identifier'),
        ),
        migrations.AddField(
            model_name='codeablereference',
            name='reference',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='codeable_reference_reference', to='base.reference'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='author_reference',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='annotation_author_reference', to='base.reference'),
        ),
        migrations.AddField(
            model_name='relatedartifact',
            name='classifier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_artifact_classifier', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='relatedartifact',
            name='document',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_artifact_document', to='base.attachment'),
        ),
        migrations.AddField(
            model_name='relatedartifact',
            name='resource_reference',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_artifact_resource', to='base.reference'),
        ),
        migrations.AddField(
            model_name='relativetime',
            name='context_code',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='relative_time_context_code', to='base.codeableconcept'),
        ),
        migrations.AddField(
            model_name='relativetime',
            name='context_reference',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='relative_time_context_reference', to='base.reference'),
        ),
        migrations.AddField(
            model_name='relativetime',
            name='offset_duration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='relative_time_offset_duration', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='relativetime',
            name='offset_range',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='relative_time_offset_range', to='base.range'),
        ),
        migrations.AddField(
            model_name='repeat',
            name='bounds_duration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='repeat_bounds_duration', to='base.quantity'),
        ),
        migrations.AddField(
            model_name='repeat',
            name='bounds_period',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='repeat_bounds_period', to='base.period'),
        ),
        migrations.AddField(
            model_name='repeat',
            name='bounds_range',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='repeat_bounds_range', to='base.range'),
        ),
        migrations.AddField(
            model_name='repeat',
            name='day_of_week',
            field=models.ManyToManyField(blank=True, related_name='repeat_day_of_week', to='base.coding'),
        ),
        migrations.AddField(
            model_name='repeat',
            name='when',
            field=models.ManyToManyField(blank=True, related_name='repeat_when', to='base.coding'),
        ),
        migrations.AddField(
            model_name='signature',
            name='type',
            field=models.ManyToManyField(blank=True, related_name='signature_type', to='base.coding'),
        ),
    ]
