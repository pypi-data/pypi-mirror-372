// Package {{packageName}} provides common types for the {{info.title}} API
// Generated by MicroRapid
package {{packageName}}

import (
    "fmt"
    "time"
)

// Config holds the configuration for the API client
type Config struct {
    // BaseURL is the base URL for the API
    BaseURL string
    
    {{#if includeAuth}}
    // BearerToken is the bearer token for authentication
    BearerToken string
    
    // APIKey is the API key for authentication
    APIKey string
    {{/if}}
    
    // Timeout is the HTTP client timeout
    Timeout time.Duration
    
    {{#if includeResilience}}
    // MaxRetries is the maximum number of retries
    MaxRetries int
    
    // RetryDelay is the delay between retries
    RetryDelay time.Duration
    {{/if}}
}

// NewConfig creates a new configuration with defaults
func NewConfig() *Config {
    return &Config{
        Timeout: 30 * time.Second,
        {{#if includeResilience}}
        MaxRetries: 3,
        RetryDelay: 1 * time.Second,
        {{/if}}
    }
}

// APIError represents an API error response
type APIError struct {
    StatusCode int    `json:"status_code"`
    Message    string `json:"message"`
}

// Error implements the error interface
func (e *APIError) Error() string {
    return fmt.Sprintf("API error (status %d): %s", e.StatusCode, e.Message)
}

{{#if includePagination}}
// PageInfo contains pagination information
type PageInfo struct {
    Page       int `json:"page"`
    PerPage    int `json:"per_page"`
    Total      int `json:"total"`
    TotalPages int `json:"total_pages"`
}

// ListOptions specifies optional parameters for list operations
type ListOptions struct {
    Page    int `url:"page,omitempty"`
    PerPage int `url:"per_page,omitempty"`
}
{{/if}}