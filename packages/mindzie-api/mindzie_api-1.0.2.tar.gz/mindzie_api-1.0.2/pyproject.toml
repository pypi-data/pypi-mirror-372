[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mindzie-api"
dynamic = ["version", "dependencies"]
description = "Official Python client library for Mindzie Studio API"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Mindzie", email = "support@mindzie.com"},
]
maintainers = [
    {name = "Mindzie Development Team", email = "dev@mindzie.com"},
]
keywords = [
    "mindzie",
    "api",
    "client",
    "studio",
    "process mining",
    "business intelligence",
    "data analysis",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

[project.urls]
Homepage = "https://github.com/mindzie/mindzie-api-python"
Documentation = "https://docs.mindzie.com/api/python"
Repository = "https://github.com/mindzie/mindzie-api-python"
Issues = "https://github.com/mindzie/mindzie-api-python/issues"
Changelog = "https://github.com/mindzie/mindzie-api-python/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "responses>=0.23.0",
    "faker>=18.0.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "isort>=5.0",
    "pre-commit>=3.0",
    "tox>=4.0",
    "sphinx>=6.0",
    "sphinx-rtd-theme>=1.0",
    "twine>=4.0",
    "build>=0.10.0",
]
async = [
    "aiohttp>=3.8.0",
    "aiofiles>=23.0",
]
azure = [
    "msal>=1.20.0",
    "azure-identity>=1.12.0",
]

[tool.setuptools.dynamic]
version = {attr = "mindzie_api.__version__.__version__"}
dependencies = {file = ["requirements.txt"]}

[tool.setuptools.packages.find]
include = ["mindzie_api*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=mindzie_api",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-branch",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "requires_api: Tests that require API access",
]

[tool.coverage.run]
source = ["mindzie_api"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{38,39,310,311,312},lint,type,docs
isolated_build = true

[testenv]
deps =
    pytest>=7.0
    pytest-cov>=4.0
    pytest-mock>=3.10.0
    responses>=0.23.0
    faker>=18.0.0
commands =
    pytest {posargs}

[testenv:lint]
deps =
    black>=23.0
    flake8>=6.0
    isort>=5.0
commands =
    black --check mindzie_api tests
    flake8 mindzie_api tests
    isort --check-only mindzie_api tests

[testenv:type]
deps =
    mypy>=1.0
    types-requests
commands =
    mypy mindzie_api

[testenv:docs]
deps =
    sphinx>=6.0
    sphinx-rtd-theme>=1.0
commands =
    sphinx-build -W -b html docs docs/_build/html
"""