# Adapted from: https://docs.python.org/3/reference/grammar.html and the Lark Python grammar

input: (_NEWLINE | _stmt)*

_literal: number | string | boolean

_stmt: _small_stmt [_NEWLINE] | _compound_stmt
_small_stmt: (_expr_stmt | assign | pass_stmt )
_compound_stmt: if_stmt
pass_stmt: "pass"

_expr_stmt: _expr


# assignment

# can currently only assign constant values to vars
# for some reason if i use _reference here i don't get a None in the optional spot
assign: var [":" (get_attr | get_item | var)] "=" _expr



# branching

if_stmt: "if" _expr ":" body elifs ["else" ":" body]
elifs: elif_*
elif_: "elif" _expr ":" body
body: _NEWLINE _INDENT _stmt+ _DEDENT

_expr: _test

# logical tests
_test: or_test
?or_test: and_test ("or" and_test)*
?and_test: not_test_ ("and" not_test_)*
?not_test_: "not" not_test_ -> not_test
          | comparison
          | atom
comparison: atom comp_op atom
comp_op: COMPARISON_OP

arguments: _expr ("," _expr)*

?atom: _reference "(" [arguments] ")" -> func_call
     | _reference
     | _literal
     | "(" _expr ")"

get_item: _reference "[" number "]"
get_attr: _reference "." name
var: name

_reference: get_item | get_attr | var

# not used in grammar, but may appear in "node" passed from Parser to Compiler
encoding_decl: name

number: DEC_NUMBER | FLOAT_NUMBER
string: STRING
boolean: CONST_FALSE | CONST_TRUE

# Other terminals

_NEWLINE: ( /\r?\n[\t ]*/ | COMMENT )+

%ignore /[\t \f]+/  // WS
%ignore /\\[\t \f]*\r?\n/   // LINE_CONT
%ignore COMMENT
%declare _INDENT _DEDENT


# Python terminals

!name: NAME
NAME: /[^\W\d]\w*/
COMMENT: /#[^\n]*/
CONST_TRUE: "True"
CONST_FALSE: "False"
COMPARISON_OP: ">" | "<" | "<=" | ">=" | "==" | "!="

STRING: /("(?!"").*?(?<!\\)(\\\\)*?"|'(?!'').*?(?<!\\)(\\\\)*?')/i

_SPECIAL_DEC: "0".."9"        ("_"?  "0".."9"                       )*
DEC_NUMBER:   "-"? "1".."9"        ("_"?  "0".."9"                       )*
          |   "-"? "0"             ("_"?  "0"                            )* /(?![1-9])/

DECIMAL: "." _SPECIAL_DEC | _SPECIAL_DEC "." _SPECIAL_DEC?
FLOAT_NUMBER.2: "-"? _SPECIAL_DEC DECIMAL ["e" ["-"] _SPECIAL_DEC]