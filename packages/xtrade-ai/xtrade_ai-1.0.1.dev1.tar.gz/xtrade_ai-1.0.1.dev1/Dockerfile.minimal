# XTrade-AI Framework Minimal Production Dockerfile
FROM python:3.11-alpine as builder

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV SETUPTOOLS_SCM_PRETEND_VERSION=1.0.0

# Install build dependencies
RUN apk add --no-cache \
    build-base \
    linux-headers \
    musl-dev \
    gcc \
    g++ \
    make

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy and install requirements
COPY requirements-docker.txt ./
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements-docker.txt

# Production stage
FROM python:3.11-alpine

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV SETUPTOOLS_SCM_PRETEND_VERSION=1.0.0

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install runtime dependencies
RUN apk add --no-cache \
    libstdc++ \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy only necessary source code
COPY xtrade_ai/ ./xtrade_ai/

# Create necessary directories
RUN mkdir -p /app/data /app/models /app/logs /app/config

# Create version file
RUN echo "__version__ = '1.0.0'" > xtrade_ai/_version.py

# Install package
RUN pip install --no-cache-dir -e . || pip install --no-cache-dir .

# Create non-root user
RUN adduser -D -s /bin/sh xtrade && \
    chown -R xtrade:xtrade /app
USER xtrade

# Set environment variables
ENV XTRADE_DATA_DIR=/app/data
ENV XTRADE_MODEL_DIR=/app/models
ENV XTRADE_LOG_DIR=/app/logs
ENV XTRADE_CONFIG_DIR=/app/config

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import xtrade_ai; print('XTrade-AI Framework is healthy')" || exit 1

# Default command
CMD ["xtrade-ai", "--help"]
