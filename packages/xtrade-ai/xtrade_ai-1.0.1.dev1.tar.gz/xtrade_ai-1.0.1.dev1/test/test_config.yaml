# XTrade-AI Test Configuration
# Konfigurasi untuk test suite training dan fine-tuning

# Test Environment Configuration
environment:
  # Python environment
  python_version: ">=3.8"
  timeout_per_test: 300  # seconds
  timeout_per_category: 600  # seconds
  
  # Memory and resource limits
  max_memory_usage: "4GB"
  max_cpu_usage: 80  # percentage
  
  # Cleanup settings
  cleanup_after_tests: true
  cleanup_temp_files: true
  preserve_logs: true

# Test Data Configuration
test_data:
  # Synthetic data generation
  generate_synthetic_data: true
  data_size: 1000  # number of data points
  date_range:
    start: "2023-01-01"
    end: "2024-12-31"
  
  # Market data simulation
  market_conditions:
    - name: "bull_market"
      volatility: 0.02
      trend: 0.001
    - name: "bear_market"
      volatility: 0.03
      trend: -0.001
    - name: "sideways_market"
      volatility: 0.015
      trend: 0.0001
  
  # Technical indicators
  indicators:
    - "rsi"
    - "macd"
    - "bollinger_upper"
    - "bollinger_lower"
    - "sma_20"
    - "ema_20"
    - "stochastic_k"
    - "stochastic_d"
    - "williams_r"
    - "cci"
    - "adx"
    - "obv"
    - "vwap"
    - "supertrend"
    - "ichimoku_tenkan"
    - "ichimoku_kijun"
    - "kst"
    - "tsi"
    - "ultimate_oscillator"
    - "money_flow_index"

# Training Test Configuration
training_tests:
  # Algorithms to test
  algorithms:
    - "PPO"
    - "DQN"
    - "A2C"
    - "SAC"
    - "TD3"
  
  # Training parameters
  epochs: 5
  batch_size: 64
  learning_rate: 0.0003
  validation_split: 0.2
  
  # Test scenarios
  scenarios:
    - name: "basic_training"
      description: "Basic model training"
      epochs: 3
      algorithms: ["PPO"]
    
    - name: "multi_algorithm"
      description: "Training with multiple algorithms"
      epochs: 2
      algorithms: ["PPO", "DQN", "A2C"]
    
    - name: "validation_training"
      description: "Training with validation"
      epochs: 5
      validation_split: 0.3
      early_stopping_patience: 3
    
    - name: "custom_reward"
      description: "Training with custom reward function"
      epochs: 3
      custom_reward: true
    
    - name: "data_size_variations"
      description: "Training with different data sizes"
      data_sizes: [100, 500, 1000]
      epochs: 2

# Fine-tuning Test Configuration
fine_tuning_tests:
  # Base models for fine-tuning
  base_models:
    - algorithm: "PPO"
      epochs: 5
      description: "PPO base model"
    
    - algorithm: "DQN"
      epochs: 5
      description: "DQN base model"
    
    - algorithm: "A2C"
      epochs: 5
      description: "A2C base model"
  
  # Fine-tuning parameters
  fine_tuning_params:
    learning_rates: [0.0001, 0.00005, 0.00001]
    epochs: 3
    layer_freezing: true
    early_stopping: true
  
  # Test scenarios
  scenarios:
    - name: "basic_fine_tuning"
      description: "Basic fine-tuning"
      epochs: 3
      learning_rate: 0.0001
    
    - name: "learning_rate_variations"
      description: "Fine-tuning with different learning rates"
      learning_rates: [0.0001, 0.00005, 0.00001]
      epochs: 2
    
    - name: "layer_freezing"
      description: "Fine-tuning with frozen layers"
      freeze_layers: ["feature_extractor"]
      epochs: 3
    
    - name: "limited_data"
      description: "Fine-tuning with limited data"
      data_size: 50
      epochs: 5
      learning_rate: 0.00005
    
    - name: "hyperparameter_optimization"
      description: "Fine-tuning with hyperparameter optimization"
      optimization_trials: 3
      optimization_metric: "sharpe_ratio"

# Integration Test Configuration
integration_tests:
  # End-to-end workflows
  workflows:
    - name: "complete_training_pipeline"
      description: "Complete training pipeline from data to model"
      steps:
        - "data_preprocessing"
        - "model_training"
        - "model_validation"
        - "model_saving"
        - "model_loading"
    
    - name: "complete_fine_tuning_pipeline"
      description: "Complete fine-tuning pipeline"
      steps:
        - "base_model_training"
        - "fine_tuning"
        - "performance_comparison"
        - "model_deployment"
    
    - name: "model_lifecycle_management"
      description: "Complete model lifecycle management"
      steps:
        - "model_training"
        - "model_saving"
        - "model_versioning"
        - "model_deployment"
        - "model_monitoring"
        - "model_cleanup"
    
    - name: "performance_monitoring_integration"
      description: "Performance monitoring integration"
      steps:
        - "model_training"
        - "backtesting"
        - "performance_calculation"
        - "report_generation"
        - "visualization"

# Performance Test Configuration
performance_tests:
  # Performance benchmarks
  benchmarks:
    - name: "training_speed"
      description: "Training speed benchmark"
      metrics:
        - "epochs_per_second"
        - "total_training_time"
        - "memory_usage"
    
    - name: "inference_speed"
      description: "Inference speed benchmark"
      metrics:
        - "predictions_per_second"
        - "latency"
        - "throughput"
    
    - name: "memory_efficiency"
      description: "Memory efficiency benchmark"
      metrics:
        - "peak_memory_usage"
        - "memory_per_sample"
        - "garbage_collection_frequency"
  
  # Performance thresholds
  thresholds:
    training_speed:
      min_epochs_per_second: 0.1
      max_training_time: 300  # seconds
    
    inference_speed:
      min_predictions_per_second: 100
      max_latency: 0.1  # seconds
    
    memory_efficiency:
      max_peak_memory: "2GB"
      max_memory_per_sample: "1MB"

# Error Handling Test Configuration
error_handling_tests:
  # Error scenarios to test
  scenarios:
    - name: "invalid_data"
      description: "Test with invalid data"
      test_cases:
        - "missing_columns"
        - "invalid_data_types"
        - "empty_dataframe"
        - "null_values"
    
    - name: "invalid_configuration"
      description: "Test with invalid configuration"
      test_cases:
        - "invalid_algorithm"
        - "negative_learning_rate"
        - "invalid_batch_size"
        - "missing_required_params"
    
    - name: "resource_limitations"
      description: "Test with resource limitations"
      test_cases:
        - "insufficient_memory"
        - "disk_space_full"
        - "network_timeout"
        - "file_permission_denied"
    
    - name: "model_compatibility"
      description: "Test model compatibility issues"
      test_cases:
        - "incompatible_model_format"
        - "missing_dependencies"
        - "version_mismatch"
        - "corrupted_model_file"

# Reporting Configuration
reporting:
  # Report formats
  formats:
    - "json"
    - "txt"
    - "html"
    - "xml"
  
  # Report content
  content:
    summary: true
    detailed_results: true
    error_details: true
    performance_metrics: true
    recommendations: true
  
  # Report output
  output:
    directory: "test_results"
    filename_pattern: "test_report_{timestamp}"
    include_logs: true
    include_plots: true

# CI/CD Integration Configuration
ci_cd:
  # GitHub Actions
  github_actions:
    enabled: true
    workflow_file: ".github/workflows/test.yml"
    triggers:
      - "push"
      - "pull_request"
    
    # Test matrix
    matrix:
      python_versions: ["3.8", "3.9", "3.10", "3.11"]
      operating_systems: ["ubuntu-latest", "windows-latest", "macos-latest"]
    
    # Artifacts
    artifacts:
      test_results: true
      coverage_reports: true
      performance_reports: true
  
  # Jenkins
  jenkins:
    enabled: false
    pipeline_file: "Jenkinsfile"
    
  # GitLab CI
  gitlab_ci:
    enabled: false
    pipeline_file: ".gitlab-ci.yml"

# Monitoring Configuration
monitoring:
  # Test execution monitoring
  execution:
    track_progress: true
    real_time_updates: true
    resource_monitoring: true
  
  # Performance monitoring
  performance:
    track_execution_time: true
    track_memory_usage: true
    track_cpu_usage: true
  
  # Alerting
  alerts:
    test_failures: true
    performance_degradation: true
    resource_exhaustion: true
    
    # Alert thresholds
    thresholds:
      failure_rate: 0.2  # 20%
      performance_degradation: 0.5  # 50%
      memory_usage: 0.9  # 90%
      cpu_usage: 0.95  # 95%

# Security Configuration
security:
  # Data security
  data:
    sanitize_test_data: true
    encrypt_sensitive_data: true
    secure_data_transmission: true
  
  # Code security
  code:
    static_analysis: true
    dependency_scanning: true
    vulnerability_scanning: true
  
  # Access control
  access:
    restrict_test_access: false
    audit_test_execution: true
    log_access_attempts: true
