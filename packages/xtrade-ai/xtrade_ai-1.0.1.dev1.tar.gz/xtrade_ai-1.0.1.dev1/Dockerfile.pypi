# XTrade-AI Framework PyPI-based Dockerfile
FROM python:3.11-slim as builder

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive

# Install build dependencies only
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy and install requirements
COPY requirements-docker-pypi.txt ./
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements-docker-pypi.txt

# Production stage
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set working directory
WORKDIR /app

# Create necessary directories
RUN mkdir -p /app/data /app/models /app/logs /app/config

# Install XTrade-AI framework from PyPI
RUN pip install --no-cache-dir xtrade-ai

# Create non-root user
RUN useradd --create-home --shell /bin/bash xtrade && \
    chown -R xtrade:xtrade /app
USER xtrade

# Set environment variables
ENV XTRADE_DATA_DIR=/app/data
ENV XTRADE_MODEL_DIR=/app/models
ENV XTRADE_LOG_DIR=/app/logs
ENV XTRADE_CONFIG_DIR=/app/config

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import xtrade_ai; print('XTrade-AI Framework is healthy')" || exit 1

# Default command
CMD ["xtrade-ai", "--help"]
