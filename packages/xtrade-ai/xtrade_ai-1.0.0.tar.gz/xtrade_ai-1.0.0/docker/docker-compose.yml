version: '3.8'

services:
  # Main XTrade-AI service (full features)
  xtrade-ai:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: xtrade-ai-app
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - XTRADE_DATA_DIR=/app/data
      - XTRADE_MODEL_DIR=/app/models
      - XTRADE_LOG_DIR=/app/logs
      - XTRADE_CONFIG_DIR=/app/config
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=xtrade_ai
      - POSTGRES_USER=xtrade_user
      - POSTGRES_PASSWORD=xtrade_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - xtrade-network
    restart: unless-stopped

  # Minimal XTrade-AI service (resource-constrained)
  xtrade-ai-minimal:
    build:
      context: .
      dockerfile: Dockerfile.minimal
    container_name: xtrade-ai-minimal
    ports:
      - "8001:8000"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - XTRADE_DATA_DIR=/app/data
      - XTRADE_MODEL_DIR=/app/models
      - XTRADE_LOG_DIR=/app/logs
      - XTRADE_CONFIG_DIR=/app/config
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=xtrade_ai
      - POSTGRES_USER=xtrade_user
      - POSTGRES_PASSWORD=xtrade_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - xtrade-network
    restart: unless-stopped
    profiles:
      - minimal

  # API-only XTrade-AI service (microservices)
  xtrade-ai-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: xtrade-ai-api
    ports:
      - "8002:8000"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      - XTRADE_DATA_DIR=/app/data
      - XTRADE_MODEL_DIR=/app/models
      - XTRADE_LOG_DIR=/app/logs
      - XTRADE_CONFIG_DIR=/app/config
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=xtrade_ai
      - POSTGRES_USER=xtrade_user
      - POSTGRES_PASSWORD=xtrade_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    networks:
      - xtrade-network
    restart: unless-stopped
    profiles:
      - api

  # Development XTrade-AI service
  xtrade-ai-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: xtrade-ai-dev
    ports:
      - "8003:8000"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
      - ./config:/app/config
      - ../xtrade_ai:/app/xtrade_ai  # Mount source code for development
    environment:
      - XTRADE_DATA_DIR=/app/data
      - XTRADE_MODEL_DIR=/app/models
      - XTRADE_LOG_DIR=/app/logs
      - XTRADE_CONFIG_DIR=/app/config
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=xtrade_ai
      - POSTGRES_USER=xtrade_user
      - POSTGRES_PASSWORD=xtrade_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONPATH=/app
    depends_on:
      - postgres
      - redis
    networks:
      - xtrade-network
    restart: unless-stopped
    profiles:
      - dev

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: xtrade-postgres
    environment:
      POSTGRES_DB: xtrade_ai
      POSTGRES_USER: xtrade_user
      POSTGRES_PASSWORD: xtrade_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../config/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - xtrade-network
    restart: unless-stopped

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: xtrade-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - xtrade-network
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: xtrade-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - xtrade-ai
    networks:
      - xtrade-network
    restart: unless-stopped

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: xtrade-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - xtrade-network
    restart: unless-stopped

  # Grafana dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: xtrade-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - xtrade-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  xtrade-network:
    driver: bridge
