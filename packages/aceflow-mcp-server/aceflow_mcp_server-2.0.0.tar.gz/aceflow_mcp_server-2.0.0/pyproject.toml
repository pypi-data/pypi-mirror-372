[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aceflow-mcp-server"
version = "2.0.0"
description = "AceFlow MCP Server - AI-协作增强版，支持双向AI-MCP数据交换的智能开发工作流服务器"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AceFlow Team", email = "team@aceflow.dev"}
]
maintainers = [
    {name = "AceFlow Team", email = "team@aceflow.dev"}
]
keywords = [
    "mcp", "model-context-protocol", "workflow", "ai-collaboration", 
    "ai-tools", "dual-direction", "intelligent-workflow", "claude-code", "cursor"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "mcp>=1.0.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "psutil>=5.9.0",
    "aiofiles>=23.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
performance = [
    "psutil>=5.9.0",
    "memory-profiler>=0.60.0",
    "py-spy>=0.3.14",
]
monitoring = [
    "prometheus-client>=0.16.0",
    "grafana-api>=1.0.3",
]
all = [
    "aceflow-mcp-server[dev,performance,monitoring]"
]

[project.urls]
Homepage = "https://github.com/aceflow/mcp-server"
Documentation = "https://docs.aceflow.dev"
Repository = "https://github.com/aceflow/mcp-server.git"
"Bug Tracker" = "https://github.com/aceflow/mcp-server/issues"
Changelog = "https://github.com/aceflow/mcp-server/blob/main/CHANGELOG.md"

[project.scripts]
aceflow-mcp-server = "aceflow_mcp_server.mcp_stdio_server:main"
aceflow-mcp = "aceflow_mcp_server.mcp_stdio_server:main"

[tool.setuptools]
packages = ["aceflow_mcp_server"]

[tool.setuptools.package-data]
aceflow_mcp_server = [
    "config/*.json",
    "templates/*.json",
    "schemas/*.json",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["aceflow_mcp_server"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fastmcp.*",
    "asyncio_mqtt.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["aceflow_mcp_server"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]