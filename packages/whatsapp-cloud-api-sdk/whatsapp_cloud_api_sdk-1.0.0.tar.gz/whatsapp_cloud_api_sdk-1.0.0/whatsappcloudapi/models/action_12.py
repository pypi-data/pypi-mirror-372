# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from whatsappcloudapi.models.order import Order
from whatsappcloudapi.models.total_amount import TotalAmount


class Action12(object):

    """Implementation of the 'Action12' model.

    Attributes:
        reference_id (str): The model property of type str.
        mtype (str): The model property of type str.
        payment_type (str): The model property of type str.
        payment_configuration (str): The model property of type str.
        currency (str): The model property of type str.
        total_amount (TotalAmount): The model property of type TotalAmount.
        order (Order): The model property of type Order.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "reference_id": 'reference_id',
        "mtype": 'type',
        "payment_type": 'payment_type',
        "payment_configuration": 'payment_configuration',
        "currency": 'currency',
        "total_amount": 'total_amount',
        "order": 'order'
    }

    def __init__(self,
                 reference_id=None,
                 mtype=None,
                 payment_type=None,
                 payment_configuration=None,
                 currency=None,
                 total_amount=None,
                 order=None):
        """Constructor for the Action12 class"""

        # Initialize members of the class
        self.reference_id = reference_id 
        self.mtype = mtype 
        self.payment_type = payment_type 
        self.payment_configuration = payment_configuration 
        self.currency = currency 
        self.total_amount = total_amount 
        self.order = order 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        reference_id = dictionary.get("reference_id") if dictionary.get("reference_id") else None
        mtype = dictionary.get("type") if dictionary.get("type") else None
        payment_type = dictionary.get("payment_type") if dictionary.get("payment_type") else None
        payment_configuration = dictionary.get("payment_configuration") if dictionary.get("payment_configuration") else None
        currency = dictionary.get("currency") if dictionary.get("currency") else None
        total_amount = TotalAmount.from_dictionary(dictionary.get('total_amount')) if dictionary.get('total_amount') else None
        order = Order.from_dictionary(dictionary.get('order')) if dictionary.get('order') else None
        # Return an object of this model
        return cls(reference_id,
                   mtype,
                   payment_type,
                   payment_configuration,
                   currency,
                   total_amount,
                   order)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'reference_id={self.reference_id!r}, '
                f'mtype={self.mtype!r}, '
                f'payment_type={self.payment_type!r}, '
                f'payment_configuration={self.payment_configuration!r}, '
                f'currency={self.currency!r}, '
                f'total_amount={self.total_amount!r}, '
                f'order={self.order!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'reference_id={self.reference_id!s}, '
                f'mtype={self.mtype!s}, '
                f'payment_type={self.payment_type!s}, '
                f'payment_configuration={self.payment_configuration!s}, '
                f'currency={self.currency!s}, '
                f'total_amount={self.total_amount!s}, '
                f'order={self.order!s})')
