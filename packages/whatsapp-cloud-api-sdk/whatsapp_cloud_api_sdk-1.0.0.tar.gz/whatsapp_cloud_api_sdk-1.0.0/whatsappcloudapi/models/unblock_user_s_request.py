# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from whatsappcloudapi.models.block_users_2 import BlockUsers2


class UnblockUserSRequest(object):

    """Implementation of the 'Unblock user(s) Request' model.

    Attributes:
        messaging_product (str): The model property of type str.
        block_users (List[BlockUsers2]): The model property of type
            List[BlockUsers2].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "messaging_product": 'messaging_product',
        "block_users": 'block_users'
    }

    def __init__(self,
                 messaging_product=None,
                 block_users=None):
        """Constructor for the UnblockUserSRequest class"""

        # Initialize members of the class
        self.messaging_product = messaging_product 
        self.block_users = block_users 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        messaging_product = dictionary.get("messaging_product") if dictionary.get("messaging_product") else None
        block_users = None
        if dictionary.get('block_users') is not None:
            block_users = [BlockUsers2.from_dictionary(x) for x in dictionary.get('block_users')]
        # Return an object of this model
        return cls(messaging_product,
                   block_users)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'messaging_product={self.messaging_product!r}, '
                f'block_users={self.block_users!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'messaging_product={self.messaging_product!s}, '
                f'block_users={self.block_users!s})')
