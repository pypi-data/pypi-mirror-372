# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class BusinessProfile(object):

    """Implementation of the 'BusinessProfile' model.

    Attributes:
        messaging_product (str): The model property of type str.
        address (str): The model property of type str.
        description (str): The model property of type str.
        vertical (str): The model property of type str.
        about (str): The model property of type str.
        email (str): The model property of type str.
        websites (List[str]): The model property of type List[str].
        profile_picture_url (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "messaging_product": 'messaging_product',
        "address": 'address',
        "description": 'description',
        "vertical": 'vertical',
        "about": 'about',
        "email": 'email',
        "websites": 'websites',
        "profile_picture_url": 'profile_picture_url'
    }

    def __init__(self,
                 messaging_product=None,
                 address=None,
                 description=None,
                 vertical=None,
                 about=None,
                 email=None,
                 websites=None,
                 profile_picture_url=None):
        """Constructor for the BusinessProfile class"""

        # Initialize members of the class
        self.messaging_product = messaging_product 
        self.address = address 
        self.description = description 
        self.vertical = vertical 
        self.about = about 
        self.email = email 
        self.websites = websites 
        self.profile_picture_url = profile_picture_url 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        messaging_product = dictionary.get("messaging_product") if dictionary.get("messaging_product") else None
        address = dictionary.get("address") if dictionary.get("address") else None
        description = dictionary.get("description") if dictionary.get("description") else None
        vertical = dictionary.get("vertical") if dictionary.get("vertical") else None
        about = dictionary.get("about") if dictionary.get("about") else None
        email = dictionary.get("email") if dictionary.get("email") else None
        websites = dictionary.get("websites") if dictionary.get("websites") else None
        profile_picture_url = dictionary.get("profile_picture_url") if dictionary.get("profile_picture_url") else None
        # Return an object of this model
        return cls(messaging_product,
                   address,
                   description,
                   vertical,
                   about,
                   email,
                   websites,
                   profile_picture_url)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'messaging_product={self.messaging_product!r}, '
                f'address={self.address!r}, '
                f'description={self.description!r}, '
                f'vertical={self.vertical!r}, '
                f'about={self.about!r}, '
                f'email={self.email!r}, '
                f'websites={self.websites!r}, '
                f'profile_picture_url={self.profile_picture_url!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'messaging_product={self.messaging_product!s}, '
                f'address={self.address!s}, '
                f'description={self.description!s}, '
                f'vertical={self.vertical!s}, '
                f'about={self.about!s}, '
                f'email={self.email!s}, '
                f'websites={self.websites!s}, '
                f'profile_picture_url={self.profile_picture_url!s})')
