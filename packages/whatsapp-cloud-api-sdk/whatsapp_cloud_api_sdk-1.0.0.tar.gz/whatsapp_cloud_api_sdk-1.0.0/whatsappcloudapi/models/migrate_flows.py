# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from whatsappcloudapi.models.failed_flow import FailedFlow
from whatsappcloudapi.models.migrated_flow import MigratedFlow


class MigrateFlows(object):

    """Implementation of the 'Migrate Flows' model.

    Attributes:
        migrated_flows (List[MigratedFlow]): The model property of type
            List[MigratedFlow].
        failed_flows (List[FailedFlow]): The model property of type
            List[FailedFlow].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "migrated_flows": 'migrated_flows',
        "failed_flows": 'failed_flows'
    }

    def __init__(self,
                 migrated_flows=None,
                 failed_flows=None):
        """Constructor for the MigrateFlows class"""

        # Initialize members of the class
        self.migrated_flows = migrated_flows 
        self.failed_flows = failed_flows 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        migrated_flows = None
        if dictionary.get('migrated_flows') is not None:
            migrated_flows = [MigratedFlow.from_dictionary(x) for x in dictionary.get('migrated_flows')]
        failed_flows = None
        if dictionary.get('failed_flows') is not None:
            failed_flows = [FailedFlow.from_dictionary(x) for x in dictionary.get('failed_flows')]
        # Return an object of this model
        return cls(migrated_flows,
                   failed_flows)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'migrated_flows={self.migrated_flows!r}, '
                f'failed_flows={self.failed_flows!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'migrated_flows={self.migrated_flows!s}, '
                f'failed_flows={self.failed_flows!s})')
