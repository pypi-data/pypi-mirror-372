# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from whatsappcloudapi.api_helper import APIHelper
from whatsappcloudapi.models.component_6 import Component6


class Datum7(object):

    """Implementation of the 'Datum7' model.

    Attributes:
        name (str): The model property of type str.
        previous_category (str): The model property of type str.
        components (List[Component6]): The model property of type
            List[Component6].
        language (str): The model property of type str.
        status (str): The model property of type str.
        category (str): The model property of type str.
        id (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "components": 'components',
        "language": 'language',
        "status": 'status',
        "category": 'category',
        "id": 'id',
        "previous_category": 'previous_category'
    }

    _optionals = [
        'previous_category',
    ]

    def __init__(self,
                 name=None,
                 components=None,
                 language=None,
                 status=None,
                 category=None,
                 id=None,
                 previous_category=APIHelper.SKIP):
        """Constructor for the Datum7 class"""

        # Initialize members of the class
        self.name = name 
        if previous_category is not APIHelper.SKIP:
            self.previous_category = previous_category 
        self.components = components 
        self.language = language 
        self.status = status 
        self.category = category 
        self.id = id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get("name") if dictionary.get("name") else None
        components = None
        if dictionary.get('components') is not None:
            components = [Component6.from_dictionary(x) for x in dictionary.get('components')]
        language = dictionary.get("language") if dictionary.get("language") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        category = dictionary.get("category") if dictionary.get("category") else None
        id = dictionary.get("id") if dictionary.get("id") else None
        previous_category = dictionary.get("previous_category") if dictionary.get("previous_category") else APIHelper.SKIP
        # Return an object of this model
        return cls(name,
                   components,
                   language,
                   status,
                   category,
                   id,
                   previous_category)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'name={self.name!r}, '
                f'previous_category={(self.previous_category if hasattr(self, "previous_category") else None)!r}, '
                f'components={self.components!r}, '
                f'language={self.language!r}, '
                f'status={self.status!r}, '
                f'category={self.category!r}, '
                f'id={self.id!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'name={self.name!s}, '
                f'previous_category={(self.previous_category if hasattr(self, "previous_category") else None)!s}, '
                f'components={self.components!s}, '
                f'language={self.language!s}, '
                f'status={self.status!s}, '
                f'category={self.category!s}, '
                f'id={self.id!s})')
