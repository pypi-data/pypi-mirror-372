# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from whatsappcloudapi.api_helper import APIHelper
from whatsappcloudapi.configuration import Server
from whatsappcloudapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from whatsappcloudapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from whatsappcloudapi.models.register_phone import RegisterPhone
from whatsappcloudapi.models.deregister_phone import DeregisterPhone


class RegistrationController(BaseController):

    """A Controller to access Endpoints in the whatsappcloudapi API."""
    def __init__(self, config):
        super(RegistrationController, self).__init__(config)

    def register_phone(self,
                       body,
                       phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/register.

        To register your phone, make a **POST** call to
        **`/{{Phone-Number-ID}}/register`**. You need to include the following
        parameters.
        ## Request Parameters
        | Name                    | Description              |
        |-------------------------|--------------------------|
        | **`messaging_product`** | **Required**.<br/>The messaging service
        used. This value always needs to be set to `"whatsapp"`. |
        | **`pin`**               | **Required**.<br/>A 6-digit pin you
        previously set up. For more information, see [Set Two-Step
        Verification](#08c441cc-8837-4ce5-8e0d-73fb0125c323). |

        Args:
            body (RegisterPhoneRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            RegisterPhone: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/register')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(RegisterPhone.from_dictionary)
        ).execute()

    def deregister_phone(self,
                         phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/deregister.

        To deregister your phone, make a **POST** call to
        **`{{Phone-Number-ID}}/deregister`**. **Deregister Phone** removes a
        previously registered phone. You can always re-register your phone
        using by repeating the registration process.
        #### Response
        A successful response returns:
        ``` json
        {
            "success": true
        }
        ```

        Args:
            phone_number_id (str): The request template parameter.

        Returns:
            DeregisterPhone: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/deregister')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(DeregisterPhone.from_dictionary)
        ).execute()
