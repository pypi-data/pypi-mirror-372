# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from whatsappcloudapi.api_helper import APIHelper
from whatsappcloudapi.configuration import Server
from whatsappcloudapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from whatsappcloudapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single


class WebhookPayloadReferenceController(BaseController):

    """A Controller to access Endpoints in the whatsappcloudapi API."""
    def __init__(self, config):
        super(WebhookPayloadReferenceController, self).__init__(config)

    def received_text_message(self):
        """Does a GET request to /.

        The following is an example of a text message you received from a
        customer:

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def received_text_message_with_show_security_notifications(self):
        """Does a GET request to /.

        The following is an example of a text message you receive from a
        customer, when you have the **`show_security_notifications`**
        parameter set to **`true`** in the **application settings**.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def received_message_with_reaction(self):
        """Does a GET request to /.

        If the message being reacted to is more than 30 days old the reaction
        message webhook will not be delivered. Note that for reactions, the
        **`timestamp`** value indicates when the customer sent the reaction,
        not when the Webhook was generated.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def received_media_message_with_image(self):
        """Does a GET request to /.

        When a message with media is received, the WhatsApp Business API
        downloads the media. A notification is sent to your Webhook once the
        media is downloaded.  
        The Webhook notification contains information that identifies the
        media object and enables you to find and retrieve the object. [Use the
        media endpoints to retrieve the
        media](#39a02bc0-ede1-4848-b24e-4ac3d501aaea).

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def received_media_message_with_sticker(self):
        """Does a GET request to /.

        When you receive a media message containing a sticker, WhatsApp
        Business API downloads the sticker and a notification is sent to your
        Webhook once the sticker is downloaded.
        The Webhook notification contains information that identifies the
        media object and allows you to find and retrieve the object. [Use the
        media endpoints to retrieve the
        media](https://desktop.postman.com/?desktopVersion=9.16.0&userId=142917
        47&teamId=1367031).

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def received_contact_messages(self):
        """Does a GET request to /.

        The following is an example of a contact message you received from a
        customer:

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def received_static_location_messages(self):
        """Does a GET request to /.

        The following is an example of a static location message you received
        from a customer.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def received_message_triggered_by_click_to_whats_app_ads(self):
        """Does a GET request to /.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def received_unknown_messages(self):
        """Does a GET request to /.

        It’s possible to receive an unknown message callback notification. The
        following is an example of a message you received from a customer that
        is not supported.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def message_status_update_notifications(self):
        """Does a GET request to /.

        The WhatsApp Business API sends notifications to inform you of the
        status of the messages between you and users. When a message is sent
        successfully, you receive a notification when the message is sent,
        delivered, and read. The order of these notifications in your app may
        not reflect the actual timing of the message status. You can view the
        timestamp to determine the timing.
        The following is an example of successful message status update
        Webhooks:

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def received_callback_from_a_quick_reply_button_click(self):
        """Does a GET request to /.

        When your customer clicks on a quick reply button in an [interactive
        message template](#eed16be1-5e49-4a48-8710-398820b4b5dd), a response
        is sent. Below is an example of the callback format.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def status_message_sent_user_initiated(self):
        """Does a GET request to /.

        The following notification is received when a business sends a message
        as part of a [user-initiated
        conversation](https://developers.facebook.com/docs/whatsapp/pricing/con
        versationpricing#how-it-works) (if that conversation did not originate
        in a free entry point):

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def status_message_sent_business_initiated(self):
        """Does a GET request to /.

        The following notification is received when a business sends a message
        as part of a [business-initiated
        conversation](https://developers.facebook.com/docs/whatsapp/pricing/con
        versationpricing#how-it-works):

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def status_message_sent_business_reply_to_user(self):
        """Does a GET request to /.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def status_message_delivered_user_initiated(self):
        """Does a GET request to /.

        The following notification is received when a business’ message is
        delivered and that message is part of a [user-initiated
        conversation](https://developers.facebook.com/docs/whatsapp/pricing/con
        versationpricing#how-it-works) (if that conversation did not originate
        in a [free entry
        point](https://developers.facebook.com/docs/whatsapp/pricing/conversati
        onpricing#free-entry-points)):

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def status_message_delivered_business_from_user_initiated(self):
        """Does a GET request to /.

        The following notification is received when a business’ message is
        delivered and that message is part of a [user-initiated
        conversation](https://developers.facebook.com/docs/whatsapp/pricing/con
        versationpricing#how-it-works) (if that conversation did not originate
        in a [free entry
        point](https://developers.facebook.com/docs/whatsapp/pricing/conversati
        onpricing#free-entry-points)):

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def status_message_delivered_business_delivered_from_user(self):
        """Does a GET request to /.

        The following notification is received when a business’ message is
        delivered and that message is part of a [user-initiated
        conversation](https://developers.facebook.com/docs/whatsapp/pricing/con
        versationpricing#how-it-works) originating from a [free entry
        point](https://developers.facebook.com/docs/whatsapp/pricing/conversati
        onpricing#free-entry-points):

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def status_message_deleted(self):
        """Does a GET request to /.

        Currently, the Cloud API does not support webhook status updates for
        deleted messages. If a user deletes a message, you will receive a
        webhook with an error code for an unsupported message type:

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def status_message_failed(self):
        """Does a GET request to /.

        The following notification shows a Webhook with failed status:

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def received_product_enquiry_message(self):
        """Does a GET request to /.

        A Product Enquiry Message is received when a user is asking for more
        information about a specific product. These can be received as in two
        scenarios:<ol><li>When a customer replies to Single or Multi-Product
        Messages</li><li>When a customer accesses a business’ catalog through
        another entry point, navigates to a **Product Details Page**, and
        clicks **Message Business about this Product**.</li></ol>

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def received_order_messages(self):
        """Does a GET request to /.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()

    def status_transaction_status_order_details_message(self):
        """Does a GET request to /.

        The following notification is received when a business sends a message
        which opens a service
        [conversation](https://developers.facebook.com/docs/whatsapp/pricing#co
        nversations):

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .auth(Single('bearer'))
        ).execute()
