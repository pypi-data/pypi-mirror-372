# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from whatsappcloudapi.api_helper import APIHelper
from whatsappcloudapi.configuration import Server
from whatsappcloudapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from whatsappcloudapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from whatsappcloudapi.models.send_sample_text_message import SendSampleTextMessage
from whatsappcloudapi.models.send_sample_shipping_confirmation_template import SendSampleShippingConfirmationTemplate


class ExamplesController(BaseController):

    """A Controller to access Endpoints in the whatsappcloudapi API."""
    def __init__(self, config):
        super(ExamplesController, self).__init__(config)

    def send_sample_text_message(self,
                                 body,
                                 phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        You need to create a message template before you can send one. See
        [Create Template Using the WhatsApp
        Manager](https://developers.facebook.com/docs/whatsapp/message-template
        s/creation#step-1--create-template-using-the-whatsapp-manager) for
        more information. If your account is not verified yet, you can use one
        of our pre-approved templates.
        To send a text-based message template, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `template`. Then, add a template object.
        ## Prerequisites
        - You need to create a message template through [WhatsApp
        Manager](https://developers.facebook.com/docs/whatsapp/message-template
        s/creation) or [BM
        API](https://developers.facebook.com/docs/whatsapp/business-management-
        api/message-templates#creating-message-templates)
        - For an unverified account, we have already [pre-created message
        templates](https://www.facebook.com/business/help/722393685250070) for
        you to use.
        ## Message Objects
        Message templates can contain the following `Message Objects`:
        * [Template Object](#fb5ad9b7-7991-443a-a1b5-97fdc5731673)
        * [Language Object](#d9272e38-c3db-458c-a23b-07953abc73a40)
        * [Component Object](#8225365a-acb8-48c7-8e57-079dfc532865)
        * [Parameter Object](#fe8db07c-27ad-49f3-bf33-472ee302c136)
        * [Currency Object](#424b70af-ced8-456d-b1e1-1360c5afb9e9)
        * [Date_Time Object](#ec955b05-7bd4-4273-ad87-ae755b580f6e)
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**.

        Args:
            body (SendSampleTextMessageRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendSampleTextMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/json; charset=utf-8'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendSampleTextMessage.from_dictionary)
        ).execute()

    def send_sample_shipping_confirmation_template(self,
                                                   body,
                                                   phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        Args:
            body (SendSampleShippingConfirmationTemplateRequest): The request
                body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendSampleShippingConfirmationTemplate: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/json; charset=utf-8'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendSampleShippingConfirmationTemplate.from_dictionary)
        ).execute()

    def send_sample_issue_resolution_template(self,
                                              body,
                                              phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        Args:
            body (SendSampleIssueResolutionTemplateRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/json; charset=utf-8'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()
