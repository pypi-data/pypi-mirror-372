# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from whatsappcloudapi.models.action_3 import Action3
from whatsappcloudapi.models.body import Body
from whatsappcloudapi.models.footer import Footer


class Interactive3(object):

    """Implementation of the 'Interactive3' model.

    Attributes:
        mtype (str): The model property of type str.
        body (Body): The model property of type Body.
        footer (Footer): The model property of type Footer.
        action (Action3): The model property of type Action3.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "body": 'body',
        "footer": 'footer',
        "action": 'action'
    }

    def __init__(self,
                 mtype=None,
                 body=None,
                 footer=None,
                 action=None):
        """Constructor for the Interactive3 class"""

        # Initialize members of the class
        self.mtype = mtype 
        self.body = body 
        self.footer = footer 
        self.action = action 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        mtype = dictionary.get("type") if dictionary.get("type") else None
        body = Body.from_dictionary(dictionary.get('body')) if dictionary.get('body') else None
        footer = Footer.from_dictionary(dictionary.get('footer')) if dictionary.get('footer') else None
        action = Action3.from_dictionary(dictionary.get('action')) if dictionary.get('action') else None
        # Return an object of this model
        return cls(mtype,
                   body,
                   footer,
                   action)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'mtype={self.mtype!r}, '
                f'body={self.body!r}, '
                f'footer={self.footer!r}, '
                f'action={self.action!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'mtype={self.mtype!s}, '
                f'body={self.body!s}, '
                f'footer={self.footer!s}, '
                f'action={self.action!s})')
