# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from whatsappcloudapi.api_helper import APIHelper
from whatsappcloudapi.models.button_4 import Button4


class Component7(object):

    """Implementation of the 'Component7' model.

    Attributes:
        mtype (str): The model property of type str.
        add_security_recommendation (bool): The model property of type bool.
        code_expiration_minutes (int): The model property of type int.
        buttons (List[Button4]): The model property of type List[Button4].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "add_security_recommendation": 'add_security_recommendation',
        "code_expiration_minutes": 'code_expiration_minutes',
        "buttons": 'buttons'
    }

    _optionals = [
        'add_security_recommendation',
        'code_expiration_minutes',
        'buttons',
    ]

    def __init__(self,
                 mtype=None,
                 add_security_recommendation=APIHelper.SKIP,
                 code_expiration_minutes=APIHelper.SKIP,
                 buttons=APIHelper.SKIP):
        """Constructor for the Component7 class"""

        # Initialize members of the class
        self.mtype = mtype 
        if add_security_recommendation is not APIHelper.SKIP:
            self.add_security_recommendation = add_security_recommendation 
        if code_expiration_minutes is not APIHelper.SKIP:
            self.code_expiration_minutes = code_expiration_minutes 
        if buttons is not APIHelper.SKIP:
            self.buttons = buttons 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        mtype = dictionary.get("type") if dictionary.get("type") else None
        add_security_recommendation = dictionary.get("add_security_recommendation") if "add_security_recommendation" in dictionary.keys() else APIHelper.SKIP
        code_expiration_minutes = dictionary.get("code_expiration_minutes") if dictionary.get("code_expiration_minutes") else APIHelper.SKIP
        buttons = None
        if dictionary.get('buttons') is not None:
            buttons = [Button4.from_dictionary(x) for x in dictionary.get('buttons')]
        else:
            buttons = APIHelper.SKIP
        # Return an object of this model
        return cls(mtype,
                   add_security_recommendation,
                   code_expiration_minutes,
                   buttons)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'mtype={self.mtype!r}, '
                f'add_security_recommendation={(self.add_security_recommendation if hasattr(self, "add_security_recommendation") else None)!r}, '
                f'code_expiration_minutes={(self.code_expiration_minutes if hasattr(self, "code_expiration_minutes") else None)!r}, '
                f'buttons={(self.buttons if hasattr(self, "buttons") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'mtype={self.mtype!s}, '
                f'add_security_recommendation={(self.add_security_recommendation if hasattr(self, "add_security_recommendation") else None)!s}, '
                f'code_expiration_minutes={(self.code_expiration_minutes if hasattr(self, "code_expiration_minutes") else None)!s}, '
                f'buttons={(self.buttons if hasattr(self, "buttons") else None)!s})')
