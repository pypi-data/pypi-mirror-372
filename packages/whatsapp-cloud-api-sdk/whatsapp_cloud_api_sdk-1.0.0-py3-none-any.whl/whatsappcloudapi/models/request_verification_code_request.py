# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class RequestVerificationCodeRequest(object):

    """Implementation of the 'Request Verification Code Request' model.

    Attributes:
        code_method (str): The model property of type str.
        locale (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "code_method": 'code_method',
        "locale": 'locale'
    }

    def __init__(self,
                 code_method=None,
                 locale=None):
        """Constructor for the RequestVerificationCodeRequest class"""

        # Initialize members of the class
        self.code_method = code_method 
        self.locale = locale 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        code_method = dictionary.get("code_method") if dictionary.get("code_method") else None
        locale = dictionary.get("locale") if dictionary.get("locale") else None
        # Return an object of this model
        return cls(code_method,
                   locale)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'code_method={self.code_method!r}, '
                f'locale={self.locale!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'code_method={self.code_method!s}, '
                f'locale={self.locale!s})')
