# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Phone(object):

    """Implementation of the 'Phone' model.

    Attributes:
        phone (str): The model property of type str.
        wa_id (str): The model property of type str.
        mtype (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "phone": 'phone',
        "wa_id": 'wa_id',
        "mtype": 'type'
    }

    def __init__(self,
                 phone=None,
                 wa_id=None,
                 mtype=None):
        """Constructor for the Phone class"""

        # Initialize members of the class
        self.phone = phone 
        self.wa_id = wa_id 
        self.mtype = mtype 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        phone = dictionary.get("phone") if dictionary.get("phone") else None
        wa_id = dictionary.get("wa_id") if dictionary.get("wa_id") else None
        mtype = dictionary.get("type") if dictionary.get("type") else None
        # Return an object of this model
        return cls(phone,
                   wa_id,
                   mtype)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'phone={self.phone!r}, '
                f'wa_id={self.wa_id!r}, '
                f'mtype={self.mtype!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'phone={self.phone!s}, '
                f'wa_id={self.wa_id!s}, '
                f'mtype={self.mtype!s})')
