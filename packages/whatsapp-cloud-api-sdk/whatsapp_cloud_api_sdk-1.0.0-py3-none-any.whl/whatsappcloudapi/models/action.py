# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from whatsappcloudapi.models.section import Section


class Action(object):

    """Implementation of the 'Action' model.

    Attributes:
        button (str): The model property of type str.
        sections (List[Section]): The model property of type List[Section].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "button": 'button',
        "sections": 'sections'
    }

    def __init__(self,
                 button=None,
                 sections=None):
        """Constructor for the Action class"""

        # Initialize members of the class
        self.button = button 
        self.sections = sections 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        button = dictionary.get("button") if dictionary.get("button") else None
        sections = None
        if dictionary.get('sections') is not None:
            sections = [Section.from_dictionary(x) for x in dictionary.get('sections')]
        # Return an object of this model
        return cls(button,
                   sections)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'button={self.button!r}, '
                f'sections={self.sections!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'button={self.button!s}, '
                f'sections={self.sections!s})')
