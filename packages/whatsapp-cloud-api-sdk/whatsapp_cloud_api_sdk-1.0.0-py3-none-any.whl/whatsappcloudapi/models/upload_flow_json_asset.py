# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from whatsappcloudapi.models.validation_error_1 import ValidationError1


class UploadFlowJSONAsset(object):

    """Implementation of the 'Upload Flow JSON Asset' model.

    Attributes:
        success (bool): The model property of type bool.
        validation_errors (List[ValidationError1]): The model property of type
            List[ValidationError1].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "success": 'success',
        "validation_errors": 'validation_errors'
    }

    def __init__(self,
                 success=None,
                 validation_errors=None):
        """Constructor for the UploadFlowJSONAsset class"""

        # Initialize members of the class
        self.success = success 
        self.validation_errors = validation_errors 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        success = dictionary.get("success") if "success" in dictionary.keys() else None
        validation_errors = None
        if dictionary.get('validation_errors') is not None:
            validation_errors = [ValidationError1.from_dictionary(x) for x in dictionary.get('validation_errors')]
        # Return an object of this model
        return cls(success,
                   validation_errors)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'success={self.success!r}, '
                f'validation_errors={self.validation_errors!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'success={self.success!s}, '
                f'validation_errors={self.validation_errors!s})')
