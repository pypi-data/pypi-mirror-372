# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CreateQRCodeRequest(object):

    """Implementation of the 'Create QR code Request' model.

    Attributes:
        prefilled_message (str): The model property of type str.
        generate_qr_image (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "prefilled_message": 'prefilled_message',
        "generate_qr_image": 'generate_qr_image'
    }

    def __init__(self,
                 prefilled_message=None,
                 generate_qr_image=None):
        """Constructor for the CreateQRCodeRequest class"""

        # Initialize members of the class
        self.prefilled_message = prefilled_message 
        self.generate_qr_image = generate_qr_image 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        prefilled_message = dictionary.get("prefilled_message") if dictionary.get("prefilled_message") else None
        generate_qr_image = dictionary.get("generate_qr_image") if dictionary.get("generate_qr_image") else None
        # Return an object of this model
        return cls(prefilled_message,
                   generate_qr_image)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'prefilled_message={self.prefilled_message!r}, '
                f'generate_qr_image={self.generate_qr_image!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'prefilled_message={self.prefilled_message!s}, '
                f'generate_qr_image={self.generate_qr_image!s})')
