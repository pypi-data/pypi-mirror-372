# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Action3(object):

    """Implementation of the 'Action3' model.

    Attributes:
        catalog_id (str): The model property of type str.
        product_retailer_id (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "catalog_id": 'catalog_id',
        "product_retailer_id": 'product_retailer_id'
    }

    def __init__(self,
                 catalog_id=None,
                 product_retailer_id=None):
        """Constructor for the Action3 class"""

        # Initialize members of the class
        self.catalog_id = catalog_id 
        self.product_retailer_id = product_retailer_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        catalog_id = dictionary.get("catalog_id") if dictionary.get("catalog_id") else None
        product_retailer_id = dictionary.get("product_retailer_id") if dictionary.get("product_retailer_id") else None
        # Return an object of this model
        return cls(catalog_id,
                   product_retailer_id)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'catalog_id={self.catalog_id!r}, '
                f'product_retailer_id={self.product_retailer_id!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'catalog_id={self.catalog_id!s}, '
                f'product_retailer_id={self.product_retailer_id!s})')
