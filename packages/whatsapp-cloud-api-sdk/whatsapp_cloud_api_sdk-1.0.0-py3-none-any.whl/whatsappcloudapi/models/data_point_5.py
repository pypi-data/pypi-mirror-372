# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class DataPoint5(object):

    """Implementation of the 'DataPoint5' model.

    Attributes:
        start (int): The model property of type int.
        end (int): The model property of type int.
        sent (int): The model property of type int.
        delivered (int): The model property of type int.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "start": 'start',
        "end": 'end',
        "sent": 'sent',
        "delivered": 'delivered'
    }

    def __init__(self,
                 start=None,
                 end=None,
                 sent=None,
                 delivered=None):
        """Constructor for the DataPoint5 class"""

        # Initialize members of the class
        self.start = start 
        self.end = end 
        self.sent = sent 
        self.delivered = delivered 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        start = dictionary.get("start") if dictionary.get("start") else None
        end = dictionary.get("end") if dictionary.get("end") else None
        sent = dictionary.get("sent") if dictionary.get("sent") else None
        delivered = dictionary.get("delivered") if dictionary.get("delivered") else None
        # Return an object of this model
        return cls(start,
                   end,
                   sent,
                   delivered)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'start={self.start!r}, '
                f'end={self.end!r}, '
                f'sent={self.sent!r}, '
                f'delivered={self.delivered!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'start={self.start!s}, '
                f'end={self.end!s}, '
                f'sent={self.sent!s}, '
                f'delivered={self.delivered!s})')
