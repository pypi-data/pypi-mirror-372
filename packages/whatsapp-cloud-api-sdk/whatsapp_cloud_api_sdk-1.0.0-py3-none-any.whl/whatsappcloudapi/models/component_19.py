# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from whatsappcloudapi.models.parameters_6 import Parameters6


class Component19(object):

    """Implementation of the 'Component19' model.

    Attributes:
        mtype (str): The model property of type str.
        sub_type (str): The model property of type str.
        index (str): The model property of type str.
        parameters (List[Parameters6]): The model property of type
            List[Parameters6].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "sub_type": 'sub_type',
        "index": 'index',
        "parameters": 'parameters'
    }

    def __init__(self,
                 mtype=None,
                 sub_type=None,
                 index=None,
                 parameters=None):
        """Constructor for the Component19 class"""

        # Initialize members of the class
        self.mtype = mtype 
        self.sub_type = sub_type 
        self.index = index 
        self.parameters = parameters 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        mtype = dictionary.get("type") if dictionary.get("type") else None
        sub_type = dictionary.get("sub_type") if dictionary.get("sub_type") else None
        index = dictionary.get("index") if dictionary.get("index") else None
        parameters = None
        if dictionary.get('parameters') is not None:
            parameters = [Parameters6.from_dictionary(x) for x in dictionary.get('parameters')]
        # Return an object of this model
        return cls(mtype,
                   sub_type,
                   index,
                   parameters)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'mtype={self.mtype!r}, '
                f'sub_type={self.sub_type!r}, '
                f'index={self.index!r}, '
                f'parameters={self.parameters!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'mtype={self.mtype!s}, '
                f'sub_type={self.sub_type!s}, '
                f'index={self.index!s}, '
                f'parameters={self.parameters!s})')
