# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Datum(object):

    """Implementation of the 'Datum' model.

    Attributes:
        verified_name (str): The model property of type str.
        display_phone_number (str): The model property of type str.
        id (str): The model property of type str.
        quality_rating (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "verified_name": 'verified_name',
        "display_phone_number": 'display_phone_number',
        "id": 'id',
        "quality_rating": 'quality_rating'
    }

    def __init__(self,
                 verified_name=None,
                 display_phone_number=None,
                 id=None,
                 quality_rating=None):
        """Constructor for the Datum class"""

        # Initialize members of the class
        self.verified_name = verified_name 
        self.display_phone_number = display_phone_number 
        self.id = id 
        self.quality_rating = quality_rating 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        verified_name = dictionary.get("verified_name") if dictionary.get("verified_name") else None
        display_phone_number = dictionary.get("display_phone_number") if dictionary.get("display_phone_number") else None
        id = dictionary.get("id") if dictionary.get("id") else None
        quality_rating = dictionary.get("quality_rating") if dictionary.get("quality_rating") else None
        # Return an object of this model
        return cls(verified_name,
                   display_phone_number,
                   id,
                   quality_rating)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'verified_name={self.verified_name!r}, '
                f'display_phone_number={self.display_phone_number!r}, '
                f'id={self.id!r}, '
                f'quality_rating={self.quality_rating!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'verified_name={self.verified_name!s}, '
                f'display_phone_number={self.display_phone_number!s}, '
                f'id={self.id!s}, '
                f'quality_rating={self.quality_rating!s})')
