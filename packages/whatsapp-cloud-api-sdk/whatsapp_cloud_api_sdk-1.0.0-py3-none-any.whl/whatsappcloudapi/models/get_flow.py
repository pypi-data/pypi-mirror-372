# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from whatsappcloudapi.models.application import Application
from whatsappcloudapi.models.health_status import HealthStatus
from whatsappcloudapi.models.preview import Preview
from whatsappcloudapi.models.whatsapp_business_account import WhatsappBusinessAccount


class GetFlow(object):

    """Implementation of the 'Get Flow' model.

    Attributes:
        id (str): The model property of type str.
        name (str): The model property of type str.
        categories (List[str]): The model property of type List[str].
        preview (Preview): The model property of type Preview.
        status (str): The model property of type str.
        validation_errors (List[str]): The model property of type List[str].
        json_version (str): The model property of type str.
        data_api_version (str): The model property of type str.
        data_channel_uri (str): The model property of type str.
        health_status (HealthStatus): The model property of type HealthStatus.
        whatsapp_business_account (WhatsappBusinessAccount): The model
            property of type WhatsappBusinessAccount.
        application (Application): The model property of type Application.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "name": 'name',
        "categories": 'categories',
        "preview": 'preview',
        "status": 'status',
        "validation_errors": 'validation_errors',
        "json_version": 'json_version',
        "data_api_version": 'data_api_version',
        "data_channel_uri": 'data_channel_uri',
        "health_status": 'health_status',
        "whatsapp_business_account": 'whatsapp_business_account',
        "application": 'application'
    }

    def __init__(self,
                 id=None,
                 name=None,
                 categories=None,
                 preview=None,
                 status=None,
                 validation_errors=None,
                 json_version=None,
                 data_api_version=None,
                 data_channel_uri=None,
                 health_status=None,
                 whatsapp_business_account=None,
                 application=None):
        """Constructor for the GetFlow class"""

        # Initialize members of the class
        self.id = id 
        self.name = name 
        self.categories = categories 
        self.preview = preview 
        self.status = status 
        self.validation_errors = validation_errors 
        self.json_version = json_version 
        self.data_api_version = data_api_version 
        self.data_channel_uri = data_channel_uri 
        self.health_status = health_status 
        self.whatsapp_business_account = whatsapp_business_account 
        self.application = application 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else None
        name = dictionary.get("name") if dictionary.get("name") else None
        categories = dictionary.get("categories") if dictionary.get("categories") else None
        preview = Preview.from_dictionary(dictionary.get('preview')) if dictionary.get('preview') else None
        status = dictionary.get("status") if dictionary.get("status") else None
        validation_errors = dictionary.get("validation_errors") if dictionary.get("validation_errors") else None
        json_version = dictionary.get("json_version") if dictionary.get("json_version") else None
        data_api_version = dictionary.get("data_api_version") if dictionary.get("data_api_version") else None
        data_channel_uri = dictionary.get("data_channel_uri") if dictionary.get("data_channel_uri") else None
        health_status = HealthStatus.from_dictionary(dictionary.get('health_status')) if dictionary.get('health_status') else None
        whatsapp_business_account = WhatsappBusinessAccount.from_dictionary(dictionary.get('whatsapp_business_account')) if dictionary.get('whatsapp_business_account') else None
        application = Application.from_dictionary(dictionary.get('application')) if dictionary.get('application') else None
        # Return an object of this model
        return cls(id,
                   name,
                   categories,
                   preview,
                   status,
                   validation_errors,
                   json_version,
                   data_api_version,
                   data_channel_uri,
                   health_status,
                   whatsapp_business_account,
                   application)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!r}, '
                f'name={self.name!r}, '
                f'categories={self.categories!r}, '
                f'preview={self.preview!r}, '
                f'status={self.status!r}, '
                f'validation_errors={self.validation_errors!r}, '
                f'json_version={self.json_version!r}, '
                f'data_api_version={self.data_api_version!r}, '
                f'data_channel_uri={self.data_channel_uri!r}, '
                f'health_status={self.health_status!r}, '
                f'whatsapp_business_account={self.whatsapp_business_account!r}, '
                f'application={self.application!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!s}, '
                f'name={self.name!s}, '
                f'categories={self.categories!s}, '
                f'preview={self.preview!s}, '
                f'status={self.status!s}, '
                f'validation_errors={self.validation_errors!s}, '
                f'json_version={self.json_version!s}, '
                f'data_api_version={self.data_api_version!s}, '
                f'data_channel_uri={self.data_channel_uri!s}, '
                f'health_status={self.health_status!s}, '
                f'whatsapp_business_account={self.whatsapp_business_account!s}, '
                f'application={self.application!s})')
