# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from whatsappcloudapi.api_helper import APIHelper
from whatsappcloudapi.configuration import Server
from whatsappcloudapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from whatsappcloudapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from whatsappcloudapi.models.get_endpoint_request_count_metric import GetEndpointRequestCountMetric
from whatsappcloudapi.models.get_endpoint_request_error_metric import GetEndpointRequestErrorMetric
from whatsappcloudapi.models.get_endpoint_request_error_rate_metric import GetEndpointRequestErrorRateMetric
from whatsappcloudapi.models.get_endpoint_request_latencies_metric import GetEndpointRequestLatenciesMetric
from whatsappcloudapi.models.get_endpoint_availability_metric import GetEndpointAvailabilityMetric


class GetEndpointMetricsController(BaseController):

    """A Controller to access Endpoints in the whatsappcloudapi API."""
    def __init__(self, config):
        super(GetEndpointMetricsController, self).__init__(config)

    def get_endpoint_request_count_metric(self,
                                          fields,
                                          flow_id):
        """Does a GET request to /{Flow-ID}.

        Can request specific fields by enabling the \`fields\` query param

        Args:
            fields (str): The request query parameter.
            flow_id (str): The request template parameter.

        Returns:
            GetEndpointRequestCountMetric: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Flow-ID}')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('fields')
                         .value(fields))
            .template_param(Parameter()
                            .key('Flow-ID')
                            .value(flow_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetEndpointRequestCountMetric.from_dictionary)
        ).execute()

    def get_endpoint_request_error_metric(self,
                                          fields,
                                          flow_id):
        """Does a GET request to /{Flow-ID}.

        Can request specific fields by enabling the \`fields\` query param

        Args:
            fields (str): The request query parameter.
            flow_id (str): The request template parameter.

        Returns:
            GetEndpointRequestErrorMetric: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Flow-ID}')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('fields')
                         .value(fields))
            .template_param(Parameter()
                            .key('Flow-ID')
                            .value(flow_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetEndpointRequestErrorMetric.from_dictionary)
        ).execute()

    def get_endpoint_request_error_rate_metric(self,
                                               fields,
                                               flow_id):
        """Does a GET request to /{Flow-ID}.

        Can request specific fields by enabling the \`fields\` query param

        Args:
            fields (str): The request query parameter.
            flow_id (str): The request template parameter.

        Returns:
            GetEndpointRequestErrorRateMetric: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Flow-ID}')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('fields')
                         .value(fields))
            .template_param(Parameter()
                            .key('Flow-ID')
                            .value(flow_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetEndpointRequestErrorRateMetric.from_dictionary)
        ).execute()

    def get_endpoint_request_latencies_metric(self,
                                              fields,
                                              flow_id):
        """Does a GET request to /{Flow-ID}.

        Can request specific fields by enabling the \`fields\` query param

        Args:
            fields (str): The request query parameter.
            flow_id (str): The request template parameter.

        Returns:
            GetEndpointRequestLatenciesMetric: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Flow-ID}')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('fields')
                         .value(fields))
            .template_param(Parameter()
                            .key('Flow-ID')
                            .value(flow_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetEndpointRequestLatenciesMetric.from_dictionary)
        ).execute()

    def get_endpoint_availability_metric(self,
                                         fields,
                                         flow_id):
        """Does a GET request to /{Flow-ID}.

        Can request specific fields by enabling the \`fields\` query param

        Args:
            fields (str): The request query parameter.
            flow_id (str): The request template parameter.

        Returns:
            GetEndpointAvailabilityMetric: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Flow-ID}')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('fields')
                         .value(fields))
            .template_param(Parameter()
                            .key('Flow-ID')
                            .value(flow_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetEndpointAvailabilityMetric.from_dictionary)
        ).execute()
