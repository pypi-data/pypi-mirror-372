# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from whatsappcloudapi.api_helper import APIHelper
from whatsappcloudapi.configuration import Server
from whatsappcloudapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from whatsappcloudapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from whatsappcloudapi.models.subscribe_to_your_waba import SubscribeToYourWABA
from whatsappcloudapi.models.get_phone_number_id import GetPhoneNumberID
from whatsappcloudapi.models.register_phone_number import RegisterPhoneNumber
from whatsappcloudapi.models.send_test_message import SendTestMessage


class GetStartedController(BaseController):

    """A Controller to access Endpoints in the whatsappcloudapi API."""
    def __init__(self, config):
        super(GetStartedController, self).__init__(config)

    def subscribe_to_your_waba(self,
                               waba_id):
        """Does a POST request to /{WABA-ID}/subscribed_apps.

        To make sure you receive notifications for your account you need to
        subscribe your app to your WABA.
        #### Response
        If your request is successful, all Webhook events for the phone
        numbers under this account are sent to your configured Webhooks
        endpoint.

        Args:
            waba_id (str): The request template parameter.

        Returns:
            SubscribeToYourWABA: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{WABA-ID}/subscribed_apps')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('WABA-ID')
                            .value(waba_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SubscribeToYourWABA.from_dictionary)
        ).execute()

    def get_phone_number_id(self,
                            waba_id):
        """Does a GET request to /{WABA-ID}/phone_numbers.

        To send messages, you need to register the phone number you want to
        use. This is the business phone number we mentioned in [Set up
        Assets](https://developers.facebook.com/docs/whatsapp/cloud-api/get-sta
        rted#set-up-assets).
        Before you can proceed to registration, you need to find that phone
        number’s ID.
        #### Response
        If the request is successful, the response includes all phone numbers
        connected to your WABA.
        Save the ID for the phone number you want to register. For more
        information about this endpoint, see [Read Phone
        Numbers](https://developers.facebook.com/docs/whatsapp/business-managem
        ent-api/phone-numbers).
        #### Migration Exception
        If you are migrating a phone number from the On-Premises API to the
        Cloud API, there are extra steps you need to perform before
        registering a phone number with the Cloud API. For more information
        regarding the full process, see [Migrate Between On-Premises and Cloud
        API](#79b8156b-8c83-4db9-94ac-dd9aaaa67390).
        To get your phone number’s ID, make the following API call:

        Args:
            waba_id (str): The request template parameter.

        Returns:
            GetPhoneNumberID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{WABA-ID}/phone_numbers')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('WABA-ID')
                            .value(waba_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetPhoneNumberID.from_dictionary)
        ).execute()

    def register_phone_number(self,
                              body,
                              phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/register.

        With your phone number’s ID in hand, you can register it. In the
        registration API call, you perform two actions at the same time:
        1.  Register the phone.
        2.  Enable [two-step
        verification](https://faq.whatsapp.com/general/verification/about-two-s
        tep-verification) by setting a 6-digit registration code — you must
        set this code on your end. Save and memorize this code as it can be
        requested later. **Setting up two-factor authentication is a
        requirement to use the Cloud API.**

        **Embedded Signup Users**
        A phone number **must** be registered within 14 days after going
        through the Embedded Signup flow. If the phone number is not
        registered during that window, the phone number must go through the
        Embedded Signup flow again prior to registration.

        Args:
            body (RegisterPhoneNumberRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            RegisterPhoneNumber: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/register')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(RegisterPhoneNumber.from_dictionary)
        ).execute()

    def send_test_message(self,
                          body,
                          phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        Args:
            body (SendTestMessageRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendTestMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendTestMessage.from_dictionary)
        ).execute()

    def debug_access_token(self,
                           input_token):
        """Does a GET request to /debug_token.

        Args:
            input_token (str): The request query parameter.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/debug_token')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('input_token')
                         .value(input_token))
            .auth(Single('bearer'))
        ).execute()
