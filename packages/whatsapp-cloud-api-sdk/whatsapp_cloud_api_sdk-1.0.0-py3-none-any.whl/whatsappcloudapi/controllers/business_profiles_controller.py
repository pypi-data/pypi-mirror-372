# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from whatsappcloudapi.api_helper import APIHelper
from whatsappcloudapi.configuration import Server
from whatsappcloudapi.utilities.file_wrapper import FileWrapper
from whatsappcloudapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from whatsappcloudapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from whatsappcloudapi.models.resumable_upload_create_an_upload_session import ResumableUploadCreateAnUploadSession
from whatsappcloudapi.models.resumable_upload_upload_file_data import ResumableUploadUploadFileData
from whatsappcloudapi.models.resumable_upload_query_file_upload_status import ResumableUploadQueryFileUploadStatus
from whatsappcloudapi.models.get_business_profile_id import GetBusinessProfileID
from whatsappcloudapi.models.update_business_profile import UpdateBusinessProfile


class BusinessProfilesController(BaseController):

    """A Controller to access Endpoints in the whatsappcloudapi API."""
    def __init__(self, config):
        super(BusinessProfilesController, self).__init__(config)

    def resumable_upload_create_an_upload_session(self,
                                                  file_length,
                                                  file_type,
                                                  file_name,
                                                  authorization):
        """Does a POST request to /app/uploads.

        The Resumable Upload series of requests allow you to upload Profile
        Pictures to Meta so you can receive a handle to update these pictures
        in the Business Profile API. The Resumable Upload requests consist of
        the following:
        * **Resumable Upload - Create an Upload Session**
        * **Resumable Upload - Upload File Data**
        * **Resumable Upload - Query File Upload Status**
        To create a new upload session, make a **POST** call using the
        `/app/uploads` endpoint.
        For more information, see [Create an Upload
        Session](https://developers.facebook.com/docs/graph-api/guides/upload#s
        tep-1--create-a-session).
        **Response**  
        The call returns a server-generated value that includes the session ID
        that you can use in later calls. 
        >Copy this value and Open the **Environment quick look** in Postman
        and paste it in the **CURRENT VALUE** for `Upload-ID`.

        Args:
            file_length (str): **Required**<br/>Specifies the size of your
                file in bytes.
            file_type (str): **Required**<br/>Specifies the MIME type. Values
                are
                <ul><li>`image/jpeg`</li><li>`image/png`</li><li>`video/mp4`</l
                i></ul>
            file_name (str): **Optional**<br/>Specifies the file name you are
                using to create the session.
            authorization (str): The request header parameter.

        Returns:
            ResumableUploadCreateAnUploadSession: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/app/uploads')
            .http_method(HttpMethodEnum.POST)
            .query_param(Parameter()
                         .key('file_length')
                         .value(file_length))
            .query_param(Parameter()
                         .key('file_type')
                         .value(file_type))
            .query_param(Parameter()
                         .key('file_name')
                         .value(file_name))
            .header_param(Parameter()
                          .key('Authorization')
                          .value(authorization))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ResumableUploadCreateAnUploadSession.from_dictionary)
        ).execute()

    def resumable_upload_upload_file_data(self,
                                          file_offset,
                                          authorization,
                                          file,
                                          upload_id):
        """Does a POST request to /{Upload-ID}.

        To upload a profile picture to your business profile, make a **POST**
        call to the named endpoint {{Version}}/{{Upload-ID}}, where
        **Upload-ID** is the value you received from **Resumable Upload -
        Create an Upload Session**. This value should look like the following:
        ``` json
        "upload:MTphdHRhY2htZW50Ojlk2mJiZxUwLWV6MDUtNDIwMy05yTA3LWQ4ZDPmZGFkNTM
        0NT8=?sig=ARZqkGCA_uQMxC8nHKI"
        ```
        The **`file_offset`** parameter **must** be included as an HTTP
        header. It will not work as a query parameter.
        The access token must be included in an Authorization HTTP header. It
        cannot work as a query parameter.
        For more information, see [Initiate Data
        Upload](https://developers.facebook.com/docs/graph-api/guides/upload#st
        ep-2--initiate-upload).
        **Response**  
        The call returns a handle that includes the session ID that you can
        use to update your profile picture using **Update Business Profile**.

        Args:
            file_offset (int): Specifies the offset to start the upload. The
                offset value should always be `0`.
            authorization (str): The request header parameter.
            file (typing.BinaryIO): The request form parameter.
            upload_id (str): The request template parameter.

        Returns:
            ResumableUploadUploadFileData: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Upload-ID}')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('file_offset')
                          .value(file_offset))
            .header_param(Parameter()
                          .key('Authorization')
                          .value(authorization))
            .multipart_param(Parameter()
                             .key('File')
                             .value(file)
                             .default_content_type('application/octet-stream'))
            .template_param(Parameter()
                            .key('Upload-ID')
                            .value(upload_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ResumableUploadUploadFileData.from_dictionary)
        ).execute()

    def resumable_upload_query_file_upload_status(self,
                                                  cache_control,
                                                  authorization,
                                                  upload_id):
        """Does a GET request to /{Upload-ID}.

        You can query the status of an upload session by making a **GET** call
        to an endpoint that is named based on the **`Upload-ID`** that was
        returned through the **Resumable Upload - Create an Upload Session**
        request.
        When uploading data, you **must include the access token as an HTTP
        header.**
        **Example**
        ``` bash
        GET
        https://graph.facebook.com/v14.0/upload:MTphdHRhY2htZW50Ojlk2mJiZxUwLWV
        6MDUtNDIwMy05yTA3LWQ4ZDPmZGFkNTM0NT8=?sig=ARZqkGCA_uQMxC8nHKI HTTP/1.1
        Authorization: OAuth {{USER_ACCESS_TOKEN}}
        ```
        For more information, see [Query File Upload Status after an
        Interruption](https://developers.facebook.com/docs/graph-api/guides/upl
        oad#interruptions).
        **Response**
        The result will be a JSON-encoded ID and offset that looks like the
        following:
        ``` json
        { "id":
        "upload:MTphdHRhY2htZW50Ojlk2mJiZxUwLWV6MDUtNDIwMy05yTA3LWQ4ZDPmZGFkNTM
        0NT8=?sig=ARZqkGCA_uQMxC8nHKI", "file_offset": 0 }
        ```

        Args:
            cache_control (str): The request header parameter.
            authorization (str): The request header parameter.
            upload_id (str): The request template parameter.

        Returns:
            ResumableUploadQueryFileUploadStatus: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Upload-ID}')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('Cache-Control')
                          .value(cache_control))
            .header_param(Parameter()
                          .key('Authorization')
                          .value(authorization))
            .template_param(Parameter()
                            .key('Upload-ID')
                            .value(upload_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ResumableUploadQueryFileUploadStatus.from_dictionary)
        ).execute()

    def get_business_profile(self,
                             phone_number_id):
        """Does a GET request to /{Phone-Number-ID}/whatsapp_business_profile.

        To get information about a business profile, make a **GET** call to
        the **`/{{Phone-Number-ID}}/whatsapp_business_profile`** endpoint.
        Within the **`whatsapp_business_profile`** request, you can specify
        what you want to know from the business. 
        ## Fields
        | Name                    | Description                          |
        |-------------------------|--------------------------------------|
        | **`messaging_product`** | **Required**.<br/>The messaging service
        used for the request. Always set the value to `"whatsapp"` if you are
        using WhatsApp for Business API.|
        | **`address`**           | The address of the business. The maximum
        character limit for the string is 256. |
        | **`description`** |Description of the business. The maximum
        character limit for the string is 256. |
        | **`vertical`** | **Optional**. <br/>The industry type of the
        business. This can be either an empty string or one of the accepted
        values<br/><br/>**Values**: `UNDEFINED`, `OTHER`, `AUTO`, `BEAUTY`,
        `APPAREL`, `EDU`, `ENTERTAIN`, `EVENT_PLAN`, `FINANCE`, `GROCERY`,
        `GOVT`, `HOTEL`, `HEALTH`, `NONPROFIT`, `PROF_SERVICES`, `RETAIL`,
        `TRAVEL`, `RESTAURANT`, or `NOT_A_BIZ`.|
        | **`about`** | **Optional**. <br/>The text to display in business
        profile's About section The max length for the string is 139
        characters. The minimum length for the string is 1
        character.<br/><br/>Rendered emojis are supported however their
        unicode values are not. Emoji unicode values must be Java- or
        JavaScript-escape encoded.|
        | **`email`** | **Optional**. <br/>The contact email address (in valid
        email format) of the business. The maximum character limit for the
        string is 128 characters.|
        | **`websites`** | **Optional**. <br/>The URLs associated with the
        business. For instance, a website, Facebook Page, or Instagram. You
        must include the http:// or https:// portion of the URL. There is a
        maximum of 2 websites with a maximum of 256 characters each. |
        | **`profile_picture_handle`** | **Optional**. <br/>The handle of the
        profile picture generated from a call to the [Resumable Upload
        API](https://developers.facebook.com/docs/graph-api/guides/upload).|
        <!-- grahamp 10262022: Removed table item:
        | **`id`**                | **Required**.<br/>The ID of the business
        profile object. |-->

        Args:
            phone_number_id (str): The request template parameter.

        Returns:
            GetBusinessProfileID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/whatsapp_business_profile')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetBusinessProfileID.from_dictionary)
        ).execute()

    def update_business_profile(self,
                                body,
                                phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/whatsapp_business_profile.

        Update the business profile information such as the business
        description, email or address. To update your profile, make a **POST**
        call to **`/{{Phone-Number-ID}}/whatsapp_business_profile`**. In your
        request, you can include the parameters listed below.
        It is recommended that you use **Resumable Upload - Create an Upload
        Session** to obtain an upload ID. Then use this upload ID in a call to
        **Resumable Upload - Upload File Data** to obtain the picture handle.
        This handle can be used for the **`profile_picture_handle`**.
        ## Request Parameters
        | Name                    | Description                          |
        |-------------------------|--------------------------------------|
        | **`messaging_product`** | **Required**.<br/>The messaging service
        used for the request. Always set the value to `"whatsapp"` if you are
        using WhatsApp for Business API.|
        | **`address`**           | **Optional**.<br/>The address of the
        business. The maximum character limit for the string is 256. |
        | **`description`** | **Optional**.<br/>The description of the
        business. The maximum character limit for the string is 256. |
        | **`vertical`** | **Optional**. <br/>The industry type of the
        business. This can be either an empty string or one of the accepted
        values.<br/><br/>**Values**: `UNDEFINED`, `OTHER`, `AUTO`, `BEAUTY`,
        `APPAREL`, `EDU`, `ENTERTAIN`, `EVENT_PLAN`, `FINANCE`, `GROCERY`,
        `GOVT`, `HOTEL`, `HEALTH`, `NONPROFIT`, `PROF_SERVICES`, `RETAIL`,
        `TRAVEL`, `RESTAURANT`, or `NOT_A_BIZ`.|
        | **`about`** | **Optional**. <br/>The text to display in business
        profile's About section. The max length for the string is 139
        characters. The minimum length for the string is 1 character.
        <br/><br/>Rendered emojis are supported however their unicode values
        are not. Emoji unicode values must be Java- or JavaScript-escape
        encoded.|
        | **`email`** | **Optional**. <br/>The contact email address (in valid
        email format) of the business. The maximum character limit for the
        string is 128 characters.|
        | **`websites`** | **Optional**. <br/>The URLs associated with the
        business. For instance, a website, Facebook Page, or Instagram. You
        must include the http:// or https:// portion of the URL. There is a
        maximum of 2 websites with a maximum of 256 characters each. |
        | **`profile_picture_handle`** | **Optional**. <br/>The handle of the
        profile picture generated from a call to **Resumable Upload - Upload
        File Data**. For more information, see [Resumable Upload
        API](https://developers.facebook.com/docs/graph-api/guides/upload).|
        ## Delete Business Profile
        To delete your business profile, you must [delete your phone
        number](https://developers.facebook.com/docs/whatsapp/phone-numbers#del
        ete-phone-number-from-a-business-account).

        Args:
            body (UpdateBusinessProfileRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            UpdateBusinessProfile: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/whatsapp_business_profile')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(UpdateBusinessProfile.from_dictionary)
        ).execute()
