# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from whatsappcloudapi.api_helper import APIHelper
from whatsappcloudapi.configuration import Server
from whatsappcloudapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from whatsappcloudapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from whatsappcloudapi.models.send_text_message import SendTextMessage
from whatsappcloudapi.models.send_reply_to_text_message import SendReplyToTextMessage
from whatsappcloudapi.models.send_text_message_with_preview_url import SendTextMessageWithPreviewURL
from whatsappcloudapi.models.send_reply_with_reaction_message import SendReplyWithReactionMessage
from whatsappcloudapi.models.send_image_message_by_id import SendImageMessageByID
from whatsappcloudapi.models.send_reply_to_image_message_by_id import SendReplyToImageMessageByID
from whatsappcloudapi.models.send_image_message_by_url import SendImageMessageByURL
from whatsappcloudapi.models.send_reply_to_image_message_by_url import SendReplyToImageMessageByURL
from whatsappcloudapi.models.send_audio_message_by_id import SendAudioMessageByID
from whatsappcloudapi.models.send_reply_to_audio_message_by_id import SendReplyToAudioMessageByID
from whatsappcloudapi.models.send_audio_message_by_url import SendAudioMessageByURL
from whatsappcloudapi.models.send_reply_to_audio_message_by_url import SendReplyToAudioMessageByURL
from whatsappcloudapi.models.send_document_message_by_id import SendDocumentMessageByID
from whatsappcloudapi.models.send_reply_to_document_message_by_id import SendReplyToDocumentMessageByID
from whatsappcloudapi.models.send_document_message_by_url import SendDocumentMessageByURL
from whatsappcloudapi.models.send_reply_to_document_message_by_url import SendReplyToDocumentMessageByURL
from whatsappcloudapi.models.send_sticker_message_by_id import SendStickerMessageByID
from whatsappcloudapi.models.send_reply_to_sticker_message_by_id import SendReplyToStickerMessageByID
from whatsappcloudapi.models.send_sticker_message_by_url import SendStickerMessageByURL
from whatsappcloudapi.models.send_reply_to_sticker_message_by_url import SendReplyToStickerMessageByURL
from whatsappcloudapi.models.send_video_message_by_id import SendVideoMessageByID
from whatsappcloudapi.models.send_reply_to_video_message_by_id import SendReplyToVideoMessageByID
from whatsappcloudapi.models.send_video_message_by_url import SendVideoMessageByURL
from whatsappcloudapi.models.send_reply_to_video_message_by_url import SendReplyToVideoMessageByURL
from whatsappcloudapi.models.send_contact_message import SendContactMessage
from whatsappcloudapi.models.send_reply_to_contact_message import SendReplyToContactMessage
from whatsappcloudapi.models.send_location_messages import SendLocationMessages
from whatsappcloudapi.models.send_reply_to_location_message import SendReplyToLocationMessage
from whatsappcloudapi.models.send_message_template_text import SendMessageTemplateText
from whatsappcloudapi.models.send_message_template_media import SendMessageTemplateMedia
from whatsappcloudapi.models.send_interactive_message_template import SendInteractiveMessageTemplate
from whatsappcloudapi.models.send_list_message import SendListMessage
from whatsappcloudapi.models.send_reply_to_list_message import SendReplyToListMessage
from whatsappcloudapi.models.send_reply_button import SendReplyButton
from whatsappcloudapi.models.mark_message_as_read import MarkMessageAsRead
from whatsappcloudapi.models.send_single_product_message import SendSingleProductMessage
from whatsappcloudapi.models.send_multi_product_message import SendMultiProductMessage
from whatsappcloudapi.models.example_response_2 import ExampleResponse2


class MessagesController(BaseController):

    """A Controller to access Endpoints in the whatsappcloudapi API."""
    def __init__(self, config):
        super(MessagesController, self).__init__(config)

    def send_text_message(self,
                          body,
                          phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a text message, make a **POST** call to
        **`/{{{Phone-Number-ID}}/messages`** and attach a message object with
        `type = "text"`. Then, add a `text object`.
        For more information about the `Text Object` structure, see [Text
        object](#fa59d67b-dc6f-446a-a0fd-f97537afbd2e).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendTextMessageRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendTextMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendTextMessage.from_dictionary)
        ).execute()

    def send_reply_to_text_message(self,
                                   body,
                                   phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a reply-to text message, make a **POST** call to
        **`/{{{Phone-Number-ID}}/messages`** and use the
        **`context.message_id`** field. 
        Context field is used for specifying to which previous message
        (**`context.message_id`**) you are replying to.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Use `"whatsapp"`.
        | **`context.message_id`** | **Required for context
        object**<br/>Specifies the ID of the message being replied to. |
        For more information about the `Text Object` structure, see [Text
        object](#fa59d67b-dc6f-446a-a0fd-f97537afbd2e).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendReplyToTextMessageRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToTextMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToTextMessage.from_dictionary)
        ).execute()

    def send_text_message_with_preview_url(self,
                                           body,
                                           phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        Args:
            body (SendTextMessageWithPreviewURLRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendTextMessageWithPreviewURL: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendTextMessageWithPreviewURL.from_dictionary)
        ).execute()

    def send_reply_with_reaction_message(self,
                                         body,
                                         phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send reaction messages, make a **POST** call to
        `/PHONE_NUMBER_ID/messages` and attach a message object with `type =
        reaction`. Then, add a **`reaction`** object.
        ### Parameters
        | Name | Description |
        | --- | --- |
        | **`messaging_product`** | **Required**.<br/>Always set this value to
        `"whatsapp"`. |
        | **`recipient_type`** | **Optional**.<br/> Currently, you can only
        send messages to individuals. Set this value to `"individual"`.
        <br/><br/>**Default**: `individual` |
        | **`to`** | **Required**. <br/> WhatsApp ID or phone number for the
        person you want to send a message to.<br></br>See [Phone Numbers,
        Formatting](https://developers.facebook.com/docs/whatsapp/cloud-api/ref
        erence/phone-numbers#formatting) for more information. |
        | **`type`** | **Required**.<br/> To send a reply with a reaction, set
        this string value to `"reaction"`. |
        | **`reaction`** | **Required**. <br/> The [reaction
        object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#reaction-object) you are using for your reply. |
        If the previous message is more than 30 days old or doesn't correspond
        to any message in the conversation, the reaction message will not be
        delivered and you will receive a Webhook with the code `131009`.

        Args:
            body (SendReplyWithReactionMessageRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyWithReactionMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyWithReactionMessage.from_dictionary)
        ).execute()

    def send_image_message_by_id(self,
                                 body,
                                 phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a reply to an image message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `image`. Then add a corresponding `image object`.
        Send an image message to your customers using link or media ID
        uploaded from media endpoint.
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendImageMessageByIDRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendImageMessageByID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendImageMessageByID.from_dictionary)
        ).execute()

    def send_reply_to_image_message_by_id(self,
                                          body,
                                          phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a reply-to image message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `image`. Add the `image.id` of the image. 
        Assign **`context.message_id`** the message id of the message you want
        to reply to.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Use `"whatsapp"`.
        | **`context.message_id`** | **Required for context
        object**<br/>Specifies the ID of the message being replied to. |
        | **`type`** | **Required**<br/> Specifies the media type. Use
        "image".|
        | **`image.id`** | Specifies the ID of the image you are replying to. |
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendReplyToImageMessageByIDRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToImageMessageByID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToImageMessageByID.from_dictionary)
        ).execute()

    def send_image_message_by_url(self,
                                  body,
                                  phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a media message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `image`. Then, be sure to include the link to the image.
        Send an audio message to your customers using a link to an image file.
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).

        Args:
            body (SendImageMessageByURLRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendImageMessageByURL: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/json; charset=utf-8'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendImageMessageByURL.from_dictionary)
        ).execute()

    def send_reply_to_image_message_by_url(self,
                                           body,
                                           phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send an image link as a reply to message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a media object with
        type = `image`. Then, be sure to include the link to the image.
        Assign **`context.message_id`** the message ID of the message you want
        to reply to.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Use `"whatsapp"`.
        | **`context.message_id`** | **Required for context
        object**<br/>Specifies the ID of the message being replied to. |
        | **`type`** | **Required**<br/> Specifies the media type. Use
        "image".|
        | **`image.link`** | Specifies the link of the image you are using for
        your reply. |
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendReplyToImageMessageByURLRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToImageMessageByURL: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/json; charset=utf-8'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToImageMessageByURL.from_dictionary)
        ).execute()

    def send_audio_message_by_id(self,
                                 body,
                                 phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a media message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `audio`. Then, add the corresponding `audio object` ID.
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        Send an audio message to your customers using the media ID uploaded
        from media endpoint.
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendAudioMessageByIDRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendAudioMessageByID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendAudioMessageByID.from_dictionary)
        ).execute()

    def send_reply_to_audio_message_by_id(self,
                                          body,
                                          phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a media message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a media object with
        type = `audio`. Then, add the corresponding `audio object` ID.
        Assign **`context.message_id`** the message id of the message you want
        to reply to.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Use `"whatsapp"`.
        | **`context.message_id`** | **Required for context
        object**<br/>Specifies the ID of the message being replied to. |
        | **`type`** | **Required**<br/> Specifies the media type. Use
        "audio".|
        | **`audio.id`** | Specifies the ID of the media object you are
        replying to. |
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendReplyToAudioMessageByIDRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToAudioMessageByID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToAudioMessageByID.from_dictionary)
        ).execute()

    def send_audio_message_by_url(self,
                                  body,
                                  phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a media message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `audio`. Be sure to include the link to the audio.
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        Send an audio message to your customers using link from media endpoint.
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendAudioMessageByURLRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendAudioMessageByURL: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendAudioMessageByURL.from_dictionary)
        ).execute()

    def send_reply_to_audio_message_by_url(self,
                                           body,
                                           phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send an audio link as a reply to message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a media object with
        type = `image`. Then, be sure to include the link to the audio.
        Assign **`context.message_id`** the message ID of the message you want
        to reply to.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Use `"whatsapp"`.
        | **`context.message_id`** | **Required for context
        object**<br/>Specifies the ID of the message you are replying to. |
        | **`type`** | **Required**<br/> Specifies the media type. Use
        "audio".|
        | **`audio.link`** | Specifies the link of the image you are using for
        your reply. |
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendReplyToAudioMessageByURLRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToAudioMessageByURL: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToAudioMessageByURL.from_dictionary)
        ).execute()

    def send_document_message_by_id(self,
                                    body,
                                    phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a media message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `document`. Then, add the corresponding `document object` ID.
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        Send a document message to your customers using media ID uploaded from
        media endpoint.
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendDocumentMessageByIDRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendDocumentMessageByID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendDocumentMessageByID.from_dictionary)
        ).execute()

    def send_reply_to_document_message_by_id(self,
                                             body,
                                             phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a reply to document message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a media object with
        type = `document`. Then, add the corresponding `document object` ID.
        Assign **`context.message_id`** the message id of the message you want
        to reply to.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Use `"whatsapp"`.
        | **`context.message_id`** | **Required for context
        object**<br/>Specifies the ID of the message being replied to. |
        | **`type`** | **Required**<br/> Specifies the media type. Use
        "document".|
        | **`document.id`** | Specifies the ID of the document object you are
        replying to. |
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        Send a document message to your customers using media ID uploaded from
        media endpoint.
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendReplyToDocumentMessageByIDRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToDocumentMessageByID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToDocumentMessageByID.from_dictionary)
        ).execute()

    def send_document_message_by_url(self,
                                     body,
                                     phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a media message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `document`. Then, include the link to the document.
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        Send a document message to your customers using link.
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendDocumentMessageByURLRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendDocumentMessageByURL: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendDocumentMessageByURL.from_dictionary)
        ).execute()

    def send_reply_to_document_message_by_url(self,
                                              body,
                                              phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a document link as a reply to message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a media object with
        type = `document`. Then, be sure to include the link to the document.
        Assign **`context.message_id`** the message ID of the message you want
        to reply to.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Use `"whatsapp"`.
        | **`context.message_id`** | **Required for context
        object**<br/>Specifies the ID of the message you are replying to. |
        | **`type`** | **Required**<br/> Specifies the media type. Use
        "document".|
        | **`document.link`** | Specifies the link of the document you are
        sending for your reply. |
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendReplyToDocumentMessageByURLRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToDocumentMessageByURL: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToDocumentMessageByURL.from_dictionary)
        ).execute()

    def send_sticker_message_by_id(self,
                                   body,
                                   phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a media message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `sticker`. Then, add the corresponding **`sticker`** object ID.
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        Send a sticker message to your customers using the media ID uploaded
        from media endpoint.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Always use `"whatsapp"`.
        | **`type`** | **Required**<br/> Specifies the media type. Use
        `"sticker"`.|
        | **`sticker.id`** | Specifies the ID of the sticker object you are
        sending. |
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendStickerMessageByIDRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendStickerMessageByID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendStickerMessageByID.from_dictionary)
        ).execute()

    def send_reply_to_sticker_message_by_id(self,
                                            body,
                                            phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a reply to sticker message, make a **POST** call to
        **/{{Phone-Number-ID}}/messages** and attach a media object with type
        = sticker. Then, add the corresponding sticker object ID.
        Assign **`context.message_id`** the message id of the message you want
        to reply to.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Use `"whatsapp"`.
        | **`context.message_id`** | **Required for context
        object**<br/>Specifies the ID of the message you are replying to. |
        | **`type`** | **Required**<br/> Specifies the media type. Use
        `"sticker"`.|
        | **`sticker.id`** | Specifies the ID of the sticker object you are
        sending. |
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendReplyToStickerMessageByIDRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToStickerMessageByID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToStickerMessageByID.from_dictionary)
        ).execute()

    def send_sticker_message_by_url(self,
                                    body,
                                    phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a media message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `sticker`. Then, add a link to the corresponding `sticker` file.
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        Send a sticker message to your customers using link.
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendStickerMessageByURLRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendStickerMessageByURL: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendStickerMessageByURL.from_dictionary)
        ).execute()

    def send_reply_to_sticker_message_by_url(self,
                                             body,
                                             phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a sticker link as a reply to message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a media object with
        type = `sticker`. Then, be sure to include the link to the sticker.
        Assign **`context.message_id`** the message ID of the message you want
        to reply to.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Use `"whatsapp"`.
        | **`context.message_id`** | **Required for context
        object**<br/>Specifies the ID of the message you are replying to. |
        | **`type`** | **Required**<br/> Specifies the media type. Use
        "sticker".|
        | **`sticker.link`** | Specifies the link of the sticker you are
        sending for your reply. |
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendReplyToStickerMessageByURLRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToStickerMessageByURL: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToStickerMessageByURL.from_dictionary)
        ).execute()

    def send_video_message_by_id(self,
                                 body,
                                 phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a media message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `video`. Then, add a corresponding `video object` ID.
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        Send a video message to your customers using the media ID uploaded
        from media endpoint.
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendVideoMessageByIDRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendVideoMessageByID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendVideoMessageByID.from_dictionary)
        ).execute()

    def send_reply_to_video_message_by_id(self,
                                          body,
                                          phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a reply to video message, make a **POST** call to
        **/{{Phone-Number-ID}}/messages** and attach a media object with type
        = "video". Then, add the corresponding video object ID.
        Assign **`context.message_id`** the message id of the message you want
        to reply to.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Use `"whatsapp"`.
        | **`context.message_id`** | **Required for context
        object**<br/>Specifies the ID of the message you are replying to. |
        | **`type`** | **Required**<br/> Specifies the media type. Use
        "video".|
        | **`video.id`** | Specifies the ID of the video object you are
        sending. |
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        Sends a video message as a reply to using the media ID uploaded from
        the /media endpoint.
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendReplyToVideoMessageByIDRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToVideoMessageByID: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToVideoMessageByID.from_dictionary)
        ).execute()

    def send_video_message_by_url(self,
                                  body,
                                  phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a media message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `video`. Then, add a link to the video.
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        Send a video message to your customers using a link.
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendVideoMessageByURLRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendVideoMessageByURL: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendVideoMessageByURL.from_dictionary)
        ).execute()

    def send_reply_to_video_message_by_url(self,
                                           body,
                                           phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a video link as a reply to message, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a media object with
        type = `video`. Then, be sure to include the link to the video.
        Assign **`context.message_id`** the message ID of the message you want
        to reply to.
        ## Request Parameters
        | Parameter | Description |
        |---|---|
        | **`messaging_product`** | **Required**<br/>Messaging service used
        for the request. Use `"whatsapp"`.
        | **`context.message_id`** | **Required for context
        object**<br/>Specifies the ID of the message you are replying to. |
        | **`type`** | **Required**<br/> Specifies the media type. Use
        "video".|
        | **`video.link`** | Specifies the link to the video you are sending
        for your reply. |
        For more information about the `Media Object` structure, see [Media
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#media-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**. Use the ID listed after **`wamid`** to track your
        message status.

        Args:
            body (SendReplyToVideoMessageByURLRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToVideoMessageByURL: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToVideoMessageByURL.from_dictionary)
        ).execute()

    def send_contact_message(self,
                             body,
                             phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send contact messages, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type: **`contact`**. Then, add a [contacts
        object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#contacts-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**.

        Args:
            body (SendContactMessageRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendContactMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendContactMessage.from_dictionary)
        ).execute()

    def send_reply_to_contact_message(self,
                                      body,
                                      phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send contact messages, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type: **`contact`**. Then, add a [contacts
        object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#contacts-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**.

        Args:
            body (SendReplyToContactMessageRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToContactMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToContactMessage.from_dictionary)
        ).execute()

    def send_location_message(self,
                              body,
                              phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send location messages, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `location`. Then, add a location object.
        For more information on the structure of `Location Object`, see
        [Location
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#location-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**.

        Args:
            body (SendLocationMessageRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendLocationMessages: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendLocationMessages.from_dictionary)
        ).execute()

    def send_reply_to_location_message(self,
                                       body,
                                       phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send location messages, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `location`. Then, add a location object.
        For more information on the structure of `Location Object`, see
        [Location
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#location-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**.

        Args:
            body (SendReplyToLocationMessageRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToLocationMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToLocationMessage.from_dictionary)
        ).execute()

    def send_message_template_text(self,
                                   body,
                                   phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        You need to create a message template before you can send one. See
        [Create Template Using the WhatsApp
        Manager](https://developers.facebook.com/docs/whatsapp/message-template
        s/creation#step-1--create-template-using-the-whatsapp-manager) for
        more information. If your account is not verified yet, you can use one
        of our pre-approved templates.
        To send a text-based message template, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `template`. Then, add a template object.
        ## Prerequisites
        - You need to create a message template through [WhatsApp
        Manager](https://developers.facebook.com/docs/whatsapp/message-template
        s/creation) or [BM
        API](https://developers.facebook.com/docs/whatsapp/business-management-
        api/message-templates#creating-message-templates)
        - For an unverified account, we have already [pre-created message
        templates](https://www.facebook.com/business/help/722393685250070) for
        you to use.
        ## Message Objects
        Message templates can contain the following `Message Objects`:
        * [Template
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#template-object)
        * [Component
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#components-object)
        * [Parameter
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#parameter-object)
        * [Currency
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#currency-object)
        * [Date_Time
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#date-time-object)
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**.

        Args:
            body (SendMessageTemplateTextRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendMessageTemplateText: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendMessageTemplateText.from_dictionary)
        ).execute()

    def send_message_template_media(self,
                                    body,
                                    phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        Media message templates allow you to send media content as a header
        component beyond text template with parameters in the body component.
        Before sending a message template, you need to create one. See [Create
        Template Using the WhatsApp
        Manager](https://developers.facebook.com/docs/whatsapp/message-template
        s/creation) for more information. If your account is not verified yet,
        you can use one of our pre-approved templates.
        To send a media-based message template, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        type = `template`. Then, add a template object.
        ## Prerequisites
        - You need to create a message template through [WhatsApp
        Manager](https://developers.facebook.com/docs/whatsapp/message-template
        s/creation) or [BM
        API](https://developers.facebook.com/docs/whatsapp/business-management-
        api/message-templates#creating-message-templates)
        - For an unverified account, we have already [pre-created message
        templates](https://www.facebook.com/business/help/722393685250070) for
        you to use.
        ## Message Objects
        Media-Based message templates can contain the following `Message
        Objects`:
        * [Template
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#template-object)
        * [Component
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#components-object)
        * [Parameter
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#parameter-object)
        * [Currency
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#currency-object)
        * [Date_Time
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#date-time-object)
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**.

        Args:
            body (SendMessageTemplateMediaRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendMessageTemplateMedia: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendMessageTemplateMedia.from_dictionary)
        ).execute()

    def send_message_template_interactive(self,
                                          body,
                                          phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        Before sending a message template, you need to create one. See [Create
        Template Using the WhatsApp
        Manager](https://developers.facebook.com/docs/whatsapp/message-template
        s/creation) for more information. If your account is not verified yet,
        you can use one of our [pre-approved
        templates](https://www.facebook.com/business/help/722393685250070).
        To send an interactive message template, make a **POST** call to
        **`/{{Phone-Number-ID}}/messages`** and attach a message object with
        `type=template`. Then, add a template object with your chosen button.
        Interactive message templates expand the content you can send
        recipients beyond the standard message template and media messages
        template types to include interactive buttons using the components
        object. There are two types of predefined buttons offered:
        * Call-to-Action — Allows your customer to call a phone number and
        visit a website.
        * Quick Reply — Allows your customer to return a simple text message.
        These buttons can be attached to text messages or media messages. Once
        your interactive message templates have been created and approved, you
        can use them in notification messages as well as customer service/care
        messages.
        ## Message Objects
        Interactive message templates can contain the following `Message
        Objects`:
        * [Template
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#template-object)
        * [Component
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#components-object)
        * [Parameter
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#parameter-object)
        * [Currency
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#currency-object)
        * [Date_Time
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#date-time-object)
        ## Response
        A successful response includes an object with an identifier prefixed
        with **`wamid`**.

        Args:
            body (SendMessageTemplateInteractiveRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendInteractiveMessageTemplate: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendInteractiveMessageTemplate.from_dictionary)
        ).execute()

    def send_list_message(self,
                          body,
                          phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a list message, make a **POST** call to `/messages` and attach
        a message object with **`type`** = `interactive`. Then, set the
        **`type`** of the `interactive` object = **`list`**. Finally, include
        the corresponding **`interactive`** object.
        For more reference information about **`interactive`** objects, see
        [Interactive
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#interactive-object).

        Args:
            body (SendListMessageRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendListMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendListMessage.from_dictionary)
        ).execute()

    def send_reply_to_list_message(self,
                                   body,
                                   phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a list message, make a **POST** call to `/messages` and attach
        a message object with **`type`** = `interactive`. Then, set the
        **`type`** of the `interactive` object = **`list`**. Finally, include
        the corresponding **`interactive`** object.
        For more reference information about **`interactive`** objects, see
        [Interactive
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#interactive-object).

        Args:
            body (SendReplyToListMessageRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyToListMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyToListMessage.from_dictionary)
        ).execute()

    def send_reply_button(self,
                          body,
                          phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send interactive messages, make a **POST** call to
        `/PHONE_NUMBER_ID/messages`(see [Get Phone
        Number](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/phone-numbers)) and attach a message object with
        **`type`**\=`interactive`. Then, add an **`interactive object`**.
        For more reference information about **`interactive`** objects, see
        [Interactive
        Object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#interactive-object).
        ## Response
        A successful response includes an object with an identifier prefixed
        with wamid. Use the ID listed after wamid to track your message status.

        Args:
            body (SendReplyButtonRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendReplyButton: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendReplyButton.from_dictionary)
        ).execute()

    def mark_message_as_read(self,
                             body,
                             phone_number_id):
        """Does a PUT request to /{Phone-Number-ID}/messages.

        When you receive an incoming message from Webhooks, you could use
        messages endpoint to change the status of it to read.  
        We recommend marking incoming messages as read within 30 days of
        receipt.  
        **Note**: you cannot mark outgoing messages you sent as read.
        You need to obtain the **`message_id`** of the incoming message from
        Webhooks.
        For a more in depth guide for marking messages as read, see [Guide:
        Mark Messages as
        Read](https://developers.facebook.com/docs/whatsapp/cloud-api/guides/ma
        rk-message-as-read).

        Args:
            body (MarkMessageAsReadRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            MarkMessageAsRead: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.PUT)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(MarkMessageAsRead.from_dictionary)
        ).execute()

    def send_single_product_message(self,
                                    body,
                                    phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a single product message, make a **POST** call to the
        **`/{{Version}}/phone_number/messages`** endpoint.
        This request uses an **`interactive`** object and parameter **`type`**
        should be set to `interactive`. The **`interactive`** parameter must
        also be set to the **`interactive`** object associated with the single
        product message. 
        ### Parameters
        | Name | Description |
        | --- | --- |
        | **`messaging_product`** | **Required**.<br/>Always set this value to
        `"whatsapp"`. |
        | **`recipient_type`** | **Optional**.<br/> Currently, you can only
        send messages to individuals. Set this value to `"individual"`.
        <br/><br/>**Default**: `individual` |
        | **`to`** | **Required**. <br/> WhatsApp ID or phone number for the
        person you want to send a message to.<br></br>See [Phone Numbers,
        Formatting](https://developers.facebook.com/docs/whatsapp/cloud-api/ref
        erence/phone-numbers#formatting) for more information. |
        | **`type`** | **Required**.<br/> To send single product messages, set
        this string value to `"interactive"`. |
        | **`interactive`** | **Required**. <br/> The [interactive
        object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#interactive-object) associated with the single product
        message. |
        ### Interactive Object Parameters specific to Single Product Messages
        | Name | Description |
        | --- | --- |
        | **`type`** | **Required**.<br/>Specifies the type of interactive
        object. For single product messages set this value to `"product"`.|
        | **`action`** | **Required**.<br/> |

        Args:
            body (SendSingleProductMessageRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendSingleProductMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendSingleProductMessage.from_dictionary)
        ).execute()

    def send_multi_product_message(self,
                                   body,
                                   phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a multi-product message, make a **POST** call to the
        **`/{{Version}}/phone_number/messages`** endpoint.
        This request uses an **`interactive`** object and parameter **`type`**
        should be set to `interactive`. The **`interactive`** parameter must
        also be set to the **`interactive`** object associated with the single
        product message. 
        ### Parameters
        | Name | Description |
        | --- | --- |
        | **`messaging_product`** | **Required**.<br/>Always set this value to
        `"whatsapp"`. |
        | **`recipient_type`** | **Optional**.<br/> Currently, you can only
        send messages to individuals. Set this value to `"individual"`.
        <br/><br/>**Default**: `individual` |
        | **`to`** | **Required**. <br/> WhatsApp ID or phone number for the
        person you want to send a message to.<br></br>See [Phone Numbers,
        Formatting](https://developers.facebook.com/docs/whatsapp/cloud-api/ref
        erence/phone-numbers#formatting) for more information. |
        | **`type`** | **Required**.<br/> To send single product messages, set
        this string value to `"interactive"`. |
        | **`interactive`** | **Required**. <br/> The [interactive
        object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#interactive-object) associated with the single product
        message. |
        ### Interactive Object Parameters specific to Multi-Product Messages
        | Name | Description |
        | --- | --- |
        | **`type`** | **Required**.<br/>Specifies the type of interactive
        object. For multi-product messages set this value to `"product_list"` |

        Args:
            body (SendMultiProductMessageRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            SendMultiProductMessage: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SendMultiProductMessage.from_dictionary)
        ).execute()

    def send_catalog_message(self,
                             body,
                             phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a single product message, make a **POST** call to the
        **`/{{Version}}/phone_number/messages`** endpoint.
        This request uses an **`interactive`** object and parameter **`type`**
        should be set to `interactive`. The **`interactive`** parameter must
        also be set to the **`interactive`** object associated with the single
        product message. 
        ### Parameters
        | Name | Description |
        | --- | --- |
        | **`messaging_product`** | **Required**.<br/>Always set this value to
        `"whatsapp"`. |
        | **`recipient_type`** | **Optional**.<br/> Currently, you can only
        send messages to individuals. Set this value to `"individual"`.
        <br/><br/>**Default**: `individual` |
        | **`to`** | **Required**. <br/> WhatsApp ID or phone number for the
        person you want to send a message to.<br></br>See [Phone Numbers,
        Formatting](https://developers.facebook.com/docs/whatsapp/cloud-api/ref
        erence/phone-numbers#formatting) for more information. |
        | **`type`** | **Required**.<br/> To send single product messages, set
        this string value to `"interactive"`. |
        | **`interactive`** | **Required**. <br/> The [interactive
        object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#interactive-object) associated with the single product
        message. |
        ### Interactive Object Parameters specific to Single Product Messages
        | Name | Description |
        | --- | --- |
        | **`type`** | **Required**.<br/>Specifies the type of interactive
        object. For single product messages set this value to `"product"`.|
        | **`action`** | **Required**.<br/> |

        Args:
            body (SendCatalogMessageRequest): The request body parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            ExampleResponse2: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ExampleResponse2.from_dictionary)
        ).execute()

    def send_catalog_template_message(self,
                                      body,
                                      phone_number_id):
        """Does a POST request to /{Phone-Number-ID}/messages.

        To send a single product message, make a **POST** call to the
        **`/{{Version}}/phone_number/messages`** endpoint.
        This request uses an **`interactive`** object and parameter **`type`**
        should be set to `interactive`. The **`interactive`** parameter must
        also be set to the **`interactive`** object associated with the single
        product message. 
        ### Parameters
        | Name | Description |
        | --- | --- |
        | **`messaging_product`** | **Required**.<br/>Always set this value to
        `"whatsapp"`. |
        | **`recipient_type`** | **Optional**.<br/> Currently, you can only
        send messages to individuals. Set this value to `"individual"`.
        <br/><br/>**Default**: `individual` |
        | **`to`** | **Required**. <br/> WhatsApp ID or phone number for the
        person you want to send a message to.<br></br>See [Phone Numbers,
        Formatting](https://developers.facebook.com/docs/whatsapp/cloud-api/ref
        erence/phone-numbers#formatting) for more information. |
        | **`type`** | **Required**.<br/> To send single product messages, set
        this string value to `"interactive"`. |
        | **`interactive`** | **Required**. <br/> The [interactive
        object](https://developers.facebook.com/docs/whatsapp/cloud-api/referen
        ce/messages#interactive-object) associated with the single product
        message. |
        ### Interactive Object Parameters specific to Single Product Messages
        | Name | Description |
        | --- | --- |
        | **`type`** | **Required**.<br/>Specifies the type of interactive
        object. For single product messages set this value to `"product"`.|
        | **`action`** | **Required**.<br/> |

        Args:
            body (SendCatalogTemplateMessageRequest): The request body
                parameter.
            phone_number_id (str): The request template parameter.

        Returns:
            ExampleResponse2: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Phone-Number-ID}/messages')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .template_param(Parameter()
                            .key('Phone-Number-ID')
                            .value(phone_number_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ExampleResponse2.from_dictionary)
        ).execute()
