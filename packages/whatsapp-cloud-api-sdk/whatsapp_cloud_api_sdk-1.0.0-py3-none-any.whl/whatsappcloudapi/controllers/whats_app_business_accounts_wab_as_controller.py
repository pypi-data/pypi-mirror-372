# -*- coding: utf-8 -*-

"""
whatsappcloudapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from whatsappcloudapi.api_helper import APIHelper
from whatsappcloudapi.configuration import Server
from whatsappcloudapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from whatsappcloudapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from whatsappcloudapi.models.example_response import ExampleResponse
from whatsappcloudapi.models.example_response_1 import ExampleResponse1
from whatsappcloudapi.models.get_list_of_shared_wab_as import GetListOfSharedWABAs


class WhatsAppBusinessAccountsWABAsController(BaseController):

    """A Controller to access Endpoints in the whatsappcloudapi API."""
    def __init__(self, config):
        super(WhatsAppBusinessAccountsWABAsController, self).__init__(config)

    def get_waba(self,
                 waba_id):
        """Does a GET request to /{WABA-ID}.

        - Endpoint reference: [WhatsApp Business
        Account](https://developers.facebook.com/docs/graph-api/reference/whats
        -app-business-account)

        Args:
            waba_id (str): The request template parameter.

        Returns:
            ExampleResponse: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{WABA-ID}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('WABA-ID')
                            .value(waba_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ExampleResponse.from_dictionary)
        ).execute()

    def get_owned_wab_as(self,
                         business_id):
        """Does a GET request to /{Business-ID}/owned_whatsapp_business_accounts.

        Endpoint reference: [Business > Extended
        Credits](https://developers.facebook.com/docs/marketing-api/reference/b
        usiness/extendedcredits/)

        Args:
            business_id (str): The request template parameter.

        Returns:
            ExampleResponse1: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Business-ID}/owned_whatsapp_business_accounts')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('Business-ID')
                            .value(business_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ExampleResponse1.from_dictionary)
        ).execute()

    def get_shared_wab_as(self,
                          business_id):
        """Does a GET request to /{Business-ID}/client_whatsapp_business_accounts.

        Args:
            business_id (str): The request template parameter.

        Returns:
            GetListOfSharedWABAs: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{Business-ID}/client_whatsapp_business_accounts')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('Business-ID')
                            .value(business_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetListOfSharedWABAs.from_dictionary)
        ).execute()
