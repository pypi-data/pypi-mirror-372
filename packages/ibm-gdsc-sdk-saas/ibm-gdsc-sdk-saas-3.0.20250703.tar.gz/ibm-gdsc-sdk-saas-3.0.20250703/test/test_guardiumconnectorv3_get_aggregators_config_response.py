# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.guardiumconnectorv3_get_aggregators_config_response import Guardiumconnectorv3GetAggregatorsConfigResponse

class TestGuardiumconnectorv3GetAggregatorsConfigResponse(unittest.TestCase):
    """Guardiumconnectorv3GetAggregatorsConfigResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Guardiumconnectorv3GetAggregatorsConfigResponse:
        """Test Guardiumconnectorv3GetAggregatorsConfigResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Guardiumconnectorv3GetAggregatorsConfigResponse`
        """
        model = Guardiumconnectorv3GetAggregatorsConfigResponse()
        if include_optional:
            return Guardiumconnectorv3GetAggregatorsConfigResponse(
                managed_units_config = [
                    ibm_gdsc_sdk_saas.models.guardiumconnectorv3_aggregator_config.guardiumconnectorv3AggregatorConfig(
                        datamart_end_date_aggregator = '', 
                        datamart_start_date_aggregator = '', 
                        host = '', 
                        unit_type = '', )
                    ]
            )
        else:
            return Guardiumconnectorv3GetAggregatorsConfigResponse(
        )
        """

    def testGuardiumconnectorv3GetAggregatorsConfigResponse(self):
        """Test Guardiumconnectorv3GetAggregatorsConfigResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
