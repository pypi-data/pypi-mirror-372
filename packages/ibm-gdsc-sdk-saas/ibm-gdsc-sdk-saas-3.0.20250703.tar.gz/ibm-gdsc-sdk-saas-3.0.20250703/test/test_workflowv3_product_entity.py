# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.workflowv3_product_entity import Workflowv3ProductEntity

class TestWorkflowv3ProductEntity(unittest.TestCase):
    """Workflowv3ProductEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Workflowv3ProductEntity:
        """Test Workflowv3ProductEntity
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Workflowv3ProductEntity`
        """
        model = Workflowv3ProductEntity()
        if include_optional:
            return Workflowv3ProductEntity(
                entity = ibm_gdsc_sdk_saas.models.entity_definition_can_be_grouped_by_the_same_product_id_to_allow_a_filtered_choice_of_entity_id_associated_with_the_product.EntityDefinition can be grouped by the same product_id to allow a filtered choice of entity_id associated with the product(
                    disabled = True, 
                    entity_id = '', 
                    entity_label = '', 
                    feature_flag = '', 
                    prevent_delete = True, 
                    privilege_id = '', 
                    privilege_type = '', 
                    product_id = '', 
                    product_label = '', 
                    template_origin = '', 
                    workflow = ibm_gdsc_sdk_saas.models.workflowv3_product_workflow.workflowv3ProductWorkflow(
                        audit_type = 'UNDEFINED_TYPE', 
                        config_types = [
                            ''
                            ], 
                        workflow_investigation_links = [
                            ibm_gdsc_sdk_saas.models.generic_configuration_item_reference.Generic configuration item reference(
                                display = '', 
                                id = '', 
                                type = '', )
                            ], 
                        workflow_response_template = ibm_gdsc_sdk_saas.models.generic_configuration_item_reference.Generic configuration item reference(
                            display = '', 
                            id = '', 
                            type = '', ), 
                        workflow_unique_fields = [
                            ''
                            ], ), ),
                headers = [
                    ibm_gdsc_sdk_saas.models.entity_header_represents_header_of_a_entity_filed.EntityHeader represents header of a entity filed(
                        choices = [
                            ibm_gdsc_sdk_saas.models.workflowv3_entity_value_choice.workflowv3EntityValueChoice(
                                disabled = True, 
                                label = '', 
                                name = '', )
                            ], 
                        group_type_id = 56, 
                        hide_from_view = True, 
                        key = '', 
                        type = 'STRING', 
                        value = '', )
                    ]
            )
        else:
            return Workflowv3ProductEntity(
        )
        """

    def testWorkflowv3ProductEntity(self):
        """Test Workflowv3ProductEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
