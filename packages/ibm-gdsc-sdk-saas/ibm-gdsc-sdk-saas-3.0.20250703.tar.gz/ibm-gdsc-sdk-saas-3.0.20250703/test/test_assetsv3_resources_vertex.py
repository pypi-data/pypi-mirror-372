# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.assetsv3_resources_vertex import Assetsv3ResourcesVertex

class TestAssetsv3ResourcesVertex(unittest.TestCase):
    """Assetsv3ResourcesVertex unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Assetsv3ResourcesVertex:
        """Test Assetsv3ResourcesVertex
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Assetsv3ResourcesVertex`
        """
        model = Assetsv3ResourcesVertex()
        if include_optional:
            return Assetsv3ResourcesVertex(
                creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                extended_properties = [
                    ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                        data_type = '', 
                        key = '', 
                        value = '', )
                    ],
                location = '',
                name = '',
                resolution_key = '',
                resources_account = [
                    ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                        identifier = '', )
                    ],
                sensitivities = [
                    ibm_gdsc_sdk_saas.models.sensitivity_info___sensitivity_details_for_a_resource,_with_its_category,_name_and_count.SensitivityInfo - Sensitivity details for a resource, with its category, name and count(
                        category = '', 
                        count = 56, 
                        name = '', )
                    ],
                size = '',
                type = ''
            )
        else:
            return Assetsv3ResourcesVertex(
        )
        """

    def testAssetsv3ResourcesVertex(self):
        """Test Assetsv3ResourcesVertex"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
