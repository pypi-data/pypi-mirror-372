# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.add_analyzed_region200_response import AddAnalyzedRegion200Response

class TestAddAnalyzedRegion200Response(unittest.TestCase):
    """AddAnalyzedRegion200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddAnalyzedRegion200Response:
        """Test AddAnalyzedRegion200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddAnalyzedRegion200Response`
        """
        model = AddAnalyzedRegion200Response()
        if include_optional:
            return AddAnalyzedRegion200Response(
                url = '',
                user_data = '',
                image_id = '',
                subnet_id = '',
                vpc_id = '',
                availability_zone = '',
                installation_script = '',
                validation_results = ibm_gdsc_sdk_saas.models.analyzed_region_validation_results.AnalyzedRegionValidationResults(
                    is_valid = True, 
                    error = 'Could not locate any public subnet in this region', 
                    status_code = 202, 
                    is_warning = True, 
                    warning = 'true', )
            )
        else:
            return AddAnalyzedRegion200Response(
        )
        """

    def testAddAnalyzedRegion200Response(self):
        """Test AddAnalyzedRegion200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
