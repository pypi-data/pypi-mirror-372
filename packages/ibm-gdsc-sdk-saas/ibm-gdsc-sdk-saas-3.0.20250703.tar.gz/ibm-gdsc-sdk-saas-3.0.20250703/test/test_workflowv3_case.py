# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.workflowv3_case import Workflowv3Case

class TestWorkflowv3Case(unittest.TestCase):
    """Workflowv3Case unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Workflowv3Case:
        """Test Workflowv3Case
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Workflowv3Case`
        """
        model = Workflowv3Case()
        if include_optional:
            return Workflowv3Case(
                alt_id = '',
                artifacts = [
                    ''
                    ],
                assignments = [
                    ibm_gdsc_sdk_saas.models.workflowv3_entity.workflowv3Entity(
                        label = '', 
                        template_id = '', 
                        type = 'UNDEFINED_ENTITY_TYPE', 
                        value = '', )
                    ],
                case_id = '',
                comments = [
                    ibm_gdsc_sdk_saas.models.workflowv3_comment.workflowv3Comment(
                        what = '', 
                        when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        who = '', )
                    ],
                date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_due = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                full_access = True,
                origin = ibm_gdsc_sdk_saas.models.origininating_job_identification.Origininating job identification(
                    date_next = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    date_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    description = '', 
                    frequency = '', 
                    name = '', 
                    scheduled_job_id = '', ),
                priority = 'UNDEFINED_PRIORITY',
                status = 'UNDEFINED_STATUS',
                tasks = [
                    ibm_gdsc_sdk_saas.models.workflowv3_task.workflowv3Task(
                        alt_id = '', 
                        assignments = [
                            ibm_gdsc_sdk_saas.models.workflowv3_entity.workflowv3Entity(
                                label = '', 
                                template_id = '', 
                                type = 'UNDEFINED_ENTITY_TYPE', 
                                value = '', )
                            ], 
                        case_id = '', 
                        comments = [
                            ibm_gdsc_sdk_saas.models.workflowv3_comment.workflowv3Comment(
                                what = '', 
                                when = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                who = '', )
                            ], 
                        date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        date_due = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        date_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        depends_on = [
                            ''
                            ], 
                        description = '', 
                        investigation_links = [
                            ibm_gdsc_sdk_saas.models.generic_configuration_item_reference.Generic configuration item reference(
                                display = '', 
                                id = '', )
                            ], 
                        justification = '', 
                        number = '', 
                        priority = 'UNDEFINED_PRIORITY', 
                        report_result = ibm_gdsc_sdk_saas.models.workflowv3_report_result.workflowv3ReportResult(
                            headers = [
                                ibm_gdsc_sdk_saas.models.workflowv3_report_result_header.workflowv3ReportResultHeader(
                                    header = '', 
                                    key = '', )
                                ], 
                            rows = [
                                ibm_gdsc_sdk_saas.models.workflowv3_report_result_row.workflowv3ReportResultRow(
                                    row = {
                                        'key' : ''
                                        }, )
                                ], ), 
                        response_template = ibm_gdsc_sdk_saas.models.generic_configuration_item_reference.Generic configuration item reference(
                            display = '', 
                            id = '', ), 
                        review_action = '', 
                        run = ibm_gdsc_sdk_saas.models.workflowv3_report_run.workflowv3ReportRun(
                            date_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            date_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            detail = '', 
                            query_from = '', 
                            query_to = '', 
                            report_filters = ibm_gdsc_sdk_saas.models.reportsv3_report_filter_brackets.reportsv3ReportFilterBrackets(
                                brackets_id = 56, 
                                filter_name = '', 
                                filters_array = [
                                    ibm_gdsc_sdk_saas.models.reportsv3_report_filter.reportsv3ReportFilter(
                                        brackets = ibm_gdsc_sdk_saas.models.reportsv3_report_filter_brackets.reportsv3ReportFilterBrackets(
                                            brackets_id = 56, 
                                            filter_name = '', 
                                            having_array = [
                                                ibm_gdsc_sdk_saas.models.report_agg_filter_represents_a_report_aggregate_filter.ReportAggFilter represents a report aggregate filter(
                                                    condition = ibm_gdsc_sdk_saas.models.reportsv3_report_agg_filter_condition.reportsv3ReportAggFilterCondition(
                                                        aggregation_type = 'UNDEFINED_AGG_TYPE', 
                                                        header_id = '', 
                                                        header_name = '', 
                                                        operator_type = 'UNDEFINED_OPERATOR_TYPE', 
                                                        table_name = '', 
                                                        value = '', ), )
                                                ], 
                                            is_custom = True, 
                                            option_type = 'UNDEFINED_OPTION_TYPE', 
                                            sequence = 56, ), 
                                        condition = ibm_gdsc_sdk_saas.models.reportsv3_report_filter_condition.reportsv3ReportFilterCondition(
                                            case_insensitive = True, 
                                            field_nls_translation_key = '', 
                                            filter_id = 56, 
                                            group_type_id = 56, 
                                            header_id = '', 
                                            header_name = '', 
                                            header_type = 'UNDEFINED_TYPE', 
                                            in_report_date_range = ibm_gdsc_sdk_saas.models.reportsv3_date_range.reportsv3DateRange(
                                                end_date = '', 
                                                end_number = 56, 
                                                end_unit = 'UNDEFINED_UINT_TYPE', 
                                                start_date = '', 
                                                start_number = 56, 
                                                start_unit = 'UNDEFINED_UINT_TYPE', ), 
                                            in_report_field_nls_key = '', 
                                            in_report_header_id = '', 
                                            in_report_header_name = '', 
                                            in_report_id = '', 
                                            in_report_name = '', 
                                            in_report_table_name = '', 
                                            is_tuple = True, 
                                            parameter_type = 'UNDEFINED_PARAM_TYPE', 
                                            schema_name = '', 
                                            sequence = 56, 
                                            table_name = '', 
                                            tuple_type = '', 
                                            values = [
                                                ''
                                                ], ), )
                                    ], 
                                having_array = [
                                    ibm_gdsc_sdk_saas.models.report_agg_filter_represents_a_report_aggregate_filter.ReportAggFilter represents a report aggregate filter()
                                    ], 
                                is_custom = True, 
                                option_type = 'UNDEFINED_OPTION_TYPE', 
                                sequence = 56, ), 
                            report_id = '', 
                            report_name = '', 
                            report_result_file_name = '', 
                            run_id = '', 
                            scheduled_job_id = '', 
                            scheduled_job_name = '', 
                            scheduled_task_id = '', 
                            scheduled_task_type = 'UNDEFINED_JOBTYPE', 
                            status = 56, ), 
                        status = 'UNDEFINED_STATUS', 
                        tags = [
                            ''
                            ], 
                        task_id = '', 
                        title = '', 
                        workflow_type = 'REVIEW_NONE', )
                    ],
                title = ''
            )
        else:
            return Workflowv3Case(
        )
        """

    def testWorkflowv3Case(self):
        """Test Workflowv3Case"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
