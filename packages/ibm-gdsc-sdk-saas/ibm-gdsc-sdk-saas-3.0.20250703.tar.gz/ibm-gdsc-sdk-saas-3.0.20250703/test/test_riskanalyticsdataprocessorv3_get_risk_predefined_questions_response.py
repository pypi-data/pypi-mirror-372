# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.riskanalyticsdataprocessorv3_get_risk_predefined_questions_response import Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse

class TestRiskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse(unittest.TestCase):
    """Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse:
        """Test Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse`
        """
        model = Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse()
        if include_optional:
            return Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse(
                questions = [
                    ibm_gdsc_sdk_saas.models.riskanalyticsdataprocessorv3_question.riskanalyticsdataprocessorv3Question(
                        question = '', 
                        type = '', 
                        value_to_analyst = 56, )
                    ]
            )
        else:
            return Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse(
        )
        """

    def testRiskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse(self):
        """Test Riskanalyticsdataprocessorv3GetRiskPredefinedQuestionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
