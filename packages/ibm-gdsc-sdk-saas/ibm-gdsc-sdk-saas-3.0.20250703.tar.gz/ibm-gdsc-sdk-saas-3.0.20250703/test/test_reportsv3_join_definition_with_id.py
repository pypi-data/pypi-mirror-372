# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.reportsv3_join_definition_with_id import Reportsv3JoinDefinitionWithID

class TestReportsv3JoinDefinitionWithID(unittest.TestCase):
    """Reportsv3JoinDefinitionWithID unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Reportsv3JoinDefinitionWithID:
        """Test Reportsv3JoinDefinitionWithID
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Reportsv3JoinDefinitionWithID`
        """
        model = Reportsv3JoinDefinitionWithID()
        if include_optional:
            return Reportsv3JoinDefinitionWithID(
                category_id = '',
                header_pair_list = [
                    ibm_gdsc_sdk_saas.models.header_pair___pair_of_source_and_target_report_headers_being_joined_on.HeaderPair - pair of source and target report headers being joined on(
                        source_header_id = '', 
                        target_header_id = '', )
                    ],
                join_id = '',
                source_table_name = '',
                target_headers_selected_ids = [
                    ''
                    ],
                target_table_name = ''
            )
        else:
            return Reportsv3JoinDefinitionWithID(
        )
        """

    def testReportsv3JoinDefinitionWithID(self):
        """Test Reportsv3JoinDefinitionWithID"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
