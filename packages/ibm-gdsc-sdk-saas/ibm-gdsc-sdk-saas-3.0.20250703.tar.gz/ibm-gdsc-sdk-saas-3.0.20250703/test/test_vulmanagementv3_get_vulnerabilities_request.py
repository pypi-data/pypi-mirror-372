# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.vulmanagementv3_get_vulnerabilities_request import Vulmanagementv3GetVulnerabilitiesRequest

class TestVulmanagementv3GetVulnerabilitiesRequest(unittest.TestCase):
    """Vulmanagementv3GetVulnerabilitiesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Vulmanagementv3GetVulnerabilitiesRequest:
        """Test Vulmanagementv3GetVulnerabilitiesRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Vulmanagementv3GetVulnerabilitiesRequest`
        """
        model = Vulmanagementv3GetVulnerabilitiesRequest()
        if include_optional:
            return Vulmanagementv3GetVulnerabilitiesRequest(
                filter = [
                    ibm_gdsc_sdk_saas.models.filter_category___selected_filter_category_details_for_appliying_on_vulnerabilities_list_saved_in_template.FilterCategory - Selected Filter Category details for appliying on vulnerabilities list saved in template(
                        category_id = '', 
                        sub_category_ids = [
                            ''
                            ], 
                        sub_category_values = [
                            ''
                            ], )
                    ],
                limit = 56,
                offset = 56,
                search_key = '',
                sort_column = '',
                sort_order = 'ASC'
            )
        else:
            return Vulmanagementv3GetVulnerabilitiesRequest(
        )
        """

    def testVulmanagementv3GetVulnerabilitiesRequest(self):
        """Test Vulmanagementv3GetVulnerabilitiesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
