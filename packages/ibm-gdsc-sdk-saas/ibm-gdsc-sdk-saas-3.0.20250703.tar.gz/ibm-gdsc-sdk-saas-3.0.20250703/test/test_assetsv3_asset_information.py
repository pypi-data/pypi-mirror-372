# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.assetsv3_asset_information import Assetsv3AssetInformation

class TestAssetsv3AssetInformation(unittest.TestCase):
    """Assetsv3AssetInformation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Assetsv3AssetInformation:
        """Test Assetsv3AssetInformation
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Assetsv3AssetInformation`
        """
        model = Assetsv3AssetInformation()
        if include_optional:
            return Assetsv3AssetInformation(
                application = '',
                application_id = '',
                asset_name = '',
                asset_type = '',
                category = '',
                city = '',
                country = '',
                criticality = '',
                data_center = '',
                database = '',
                database_protocol = '',
                database_type = '',
                deployment = '',
                endpoint = '',
                environment = '',
                folder_path = '',
                gdp_data_sources = '',
                has_training_data = True,
                host_name = '',
                last_activity = '',
                last_trained = '',
                mac_address = '',
                model = '',
                os = '',
                owner = '',
                publisher = '',
                region = '',
                risk_level = '',
                var_schema = '',
                server = '',
                service = '',
                size = '',
                state = '',
                storage = '',
                storage_id = ''
            )
        else:
            return Assetsv3AssetInformation(
        )
        """

    def testAssetsv3AssetInformation(self):
        """Test Assetsv3AssetInformation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
