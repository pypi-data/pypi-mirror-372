# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.list_actual_flows200_response import ListActualFlows200Response

class TestListActualFlows200Response(unittest.TestCase):
    """ListActualFlows200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListActualFlows200Response:
        """Test ListActualFlows200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListActualFlows200Response`
        """
        model = ListActualFlows200Response()
        if include_optional:
            return ListActualFlows200Response(
                results = [
                    ibm_gdsc_sdk_saas.models.actual_flow.ActualFlow(
                        id = 'aaede660-6090-479a-b54f-12345678910', 
                        source = ibm_gdsc_sdk_saas.models.flow_node.FlowNode(
                            id = 'arn:aws:ec2:us-east-1:1511931112324:instance/i-097079e7b15331234', 
                            name = 'instance/i-097079e7b15331234', 
                            type = 'ec2-instance', 
                            cloud_account_id = '151193111234', 
                            cloud_region = 'us-east-1', 
                            cloud_provider = 'aws', 
                            resource = ibm_gdsc_sdk_saas.models.flow_node_resource.FlowNode_resource(
                                name = 'polar-corplex', ), 
                            vendor_id = 'abcd1234-ab12-ab12-ab12-1234123abcabc', ), 
                        destination = ibm_gdsc_sdk_saas.models.flow_node.FlowNode(
                            id = 'arn:aws:ec2:us-east-1:1511931112324:instance/i-097079e7b15331234', 
                            name = 'instance/i-097079e7b15331234', 
                            type = 'ec2-instance', 
                            cloud_account_id = '151193111234', 
                            cloud_region = 'us-east-1', 
                            cloud_provider = 'aws', 
                            vendor_id = 'abcd1234-ab12-ab12-ab12-1234123abcabc', ), 
                        access_types = [
                            'READ'
                            ], 
                        last_seen = 1.337, 
                        first_seen = 1.337, )
                    ],
                next_token = ''
            )
        else:
            return ListActualFlows200Response(
                results = [
                    ibm_gdsc_sdk_saas.models.actual_flow.ActualFlow(
                        id = 'aaede660-6090-479a-b54f-12345678910', 
                        source = ibm_gdsc_sdk_saas.models.flow_node.FlowNode(
                            id = 'arn:aws:ec2:us-east-1:1511931112324:instance/i-097079e7b15331234', 
                            name = 'instance/i-097079e7b15331234', 
                            type = 'ec2-instance', 
                            cloud_account_id = '151193111234', 
                            cloud_region = 'us-east-1', 
                            cloud_provider = 'aws', 
                            resource = ibm_gdsc_sdk_saas.models.flow_node_resource.FlowNode_resource(
                                name = 'polar-corplex', ), 
                            vendor_id = 'abcd1234-ab12-ab12-ab12-1234123abcabc', ), 
                        destination = ibm_gdsc_sdk_saas.models.flow_node.FlowNode(
                            id = 'arn:aws:ec2:us-east-1:1511931112324:instance/i-097079e7b15331234', 
                            name = 'instance/i-097079e7b15331234', 
                            type = 'ec2-instance', 
                            cloud_account_id = '151193111234', 
                            cloud_region = 'us-east-1', 
                            cloud_provider = 'aws', 
                            vendor_id = 'abcd1234-ab12-ab12-ab12-1234123abcabc', ), 
                        access_types = [
                            'READ'
                            ], 
                        last_seen = 1.337, 
                        first_seen = 1.337, )
                    ],
                next_token = '',
        )
        """

    def testListActualFlows200Response(self):
        """Test ListActualFlows200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
