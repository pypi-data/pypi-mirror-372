# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.guardiumconnectorv3_stap_object import Guardiumconnectorv3StapObject

class TestGuardiumconnectorv3StapObject(unittest.TestCase):
    """Guardiumconnectorv3StapObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Guardiumconnectorv3StapObject:
        """Test Guardiumconnectorv3StapObject
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Guardiumconnectorv3StapObject`
        """
        model = Guardiumconnectorv3StapObject()
        if include_optional:
            return Guardiumconnectorv3StapObject(
                collector_hostname = '',
                connectivity = 56,
                details = ibm_gdsc_sdk_saas.models.guardiumconnectorv3_stap_details_object.guardiumconnectorv3StapDetailsObject(
                    connectivity_details = ibm_gdsc_sdk_saas.models.guardiumconnectorv3_general_details_object.guardiumconnectorv3GeneralDetailsObject(
                        err_messages = '', ), 
                    general_err_messages = [
                        ''
                        ], 
                    ktap_details = ibm_gdsc_sdk_saas.models.guardiumconnectorv3_general_details_object.guardiumconnectorv3GeneralDetailsObject(
                        err_messages = '', ), 
                    stap_liveliness_info = ibm_gdsc_sdk_saas.models.guardiumconnectorv3_stap_live_info_object.guardiumconnectorv3StapLiveInfoObject(
                        has_event = True, 
                        health_status = 56, 
                        liveliness_state = '', 
                        stap = '', ), 
                    stap_ver_info_list = [
                        ibm_gdsc_sdk_saas.models.guardiumconnectorv3_inspection_engine_details.guardiumconnectorv3InspectionEngineDetails(
                            ie = '', 
                            port = '', 
                            protocol = '', 
                            stap = '', 
                            verification_health = 56, 
                            verification_result = '', 
                            verification_state = '', 
                            version = '', )
                        ], 
                    traffic_details = , ),
                ie_status = 56,
                ie_list = [
                    ibm_gdsc_sdk_saas.models.guardiumconnectorv3_inspection_engine_object.guardiumconnectorv3InspectionEngineObject(
                        ie_status = 56, 
                        inspection_engine = '', )
                    ],
                inspectionengine = 56,
                ktap = 56,
                name = '',
                os_type = '',
                revision = '',
                stap_ip = '',
                status = 56,
                traffic = 56
            )
        else:
            return Guardiumconnectorv3StapObject(
        )
        """

    def testGuardiumconnectorv3StapObject(self):
        """Test Guardiumconnectorv3StapObject"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
