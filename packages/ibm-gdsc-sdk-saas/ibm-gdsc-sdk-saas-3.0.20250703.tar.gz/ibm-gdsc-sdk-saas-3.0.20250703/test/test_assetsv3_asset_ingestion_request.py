# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.assetsv3_asset_ingestion_request import Assetsv3AssetIngestionRequest

class TestAssetsv3AssetIngestionRequest(unittest.TestCase):
    """Assetsv3AssetIngestionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Assetsv3AssetIngestionRequest:
        """Test Assetsv3AssetIngestionRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Assetsv3AssetIngestionRequest`
        """
        model = Assetsv3AssetIngestionRequest()
        if include_optional:
            return Assetsv3AssetIngestionRequest(
                accounts = [
                    ibm_gdsc_sdk_saas.models.account_vertex___account_vertex_with_information_about_account_and_its_connected_vertices.AccountVertex - Account Vertex with information about account and its connected vertices(
                        account_type = '', 
                        description = '', 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        name = '', 
                        resolution_key = '', )
                    ],
                applications = [
                    ibm_gdsc_sdk_saas.models.application_vertex___application_vertex_with_information_about_application_and_its_connected_vertices.ApplicationVertex - Application Vertex with information about application and its connected vertices(
                        app_id = '', 
                        application_database = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        application_endpoint = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        application_host = [
                            
                            ], 
                        application_ip = [
                            
                            ], 
                        application_name = '', 
                        application_storage = [
                            
                            ], 
                        application_sub_type = '', 
                        application_subscription = [
                            
                            ], 
                        application_type = '', 
                        category = '', 
                        criticality = 'LEVEL_UNKNOWN', 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        last_used = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        owner = [
                            ''
                            ], 
                        parent_application = '', 
                        resolution_key = '', 
                        risk_level = 'LEVEL_UNKNOWN', 
                        service_type = '', 
                        version = '', )
                    ],
                databases = [
                    ibm_gdsc_sdk_saas.models.database_vertex___database_vertex_with_information_about_database_and_its_connected_vertices.DatabaseVertex - Database Vertex with information about database and its connected vertices(
                        catalog = '', 
                        criticality = 'LEVEL_UNKNOWN', 
                        database_host = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        database_ip = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        database_name = '', 
                        database_sub_type = '', 
                        database_subscription = [
                            
                            ], 
                        database_type = '', 
                        description = '', 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        owner = [
                            ''
                            ], 
                        resolution_key = '', 
                        risk_level = 'LEVEL_UNKNOWN', 
                        schema_name = '', 
                        service_name = '', )
                    ],
                deployments = [
                    ibm_gdsc_sdk_saas.models.deployment_vertex___deployment_vertex_with_information_about_deployment_and_its_connected_vertices.DeploymentVertex - Deployment Vertex with information about deployment and its connected vertices(
                        city = '', 
                        country = '', 
                        criticality = 'LEVEL_UNKNOWN', 
                        data_center = '', 
                        deployment_account = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        deployment_id = '', 
                        deployment_subscription = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        dns = '', 
                        environment = '', 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        name = '', 
                        region = '', 
                        resolution_key = '', 
                        risk_level = 'LEVEL_UNKNOWN', 
                        service = '', 
                        state = '', 
                        type = '', )
                    ],
                endpoints = [
                    ibm_gdsc_sdk_saas.models.endpoint_vertex___endpoint_vertex_with_information_about_endpoint_and_its_connected_vertices.EndpointVertex - Endpoint Vertex with information about endpoint and its connected vertices(
                        criticality = 'LEVEL_UNKNOWN', 
                        endpoint_host = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        endpoint_ip = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        endpoint_name = '', 
                        endpoint_sub_type = '', 
                        endpoint_type = '', 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        is_access_url = True, 
                        os = '', 
                        owner = [
                            ''
                            ], 
                        resolution_key = '', 
                        risk_level = 'LEVEL_UNKNOWN', )
                    ],
                hosts = [
                    ibm_gdsc_sdk_saas.models.host_vertex___host_vertex_with_information_about_host_and_its_connected_vertices.HostVertex - Host Vertex with information about host and its connected vertices(
                        city = '', 
                        country = '', 
                        data_center = '', 
                        description = '', 
                        dns = '', 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        host_ip = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        host_name = '', 
                        host_port = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        region = '', 
                        resolution_key = '', 
                        state = '', )
                    ],
                ips = [
                    ibm_gdsc_sdk_saas.models.ip_vertex___ip_vertex_with_information_about_ip_and_its_connected_vertices.IPVertex - IP Vertex with information about ip and its connected vertices(
                        city = '', 
                        country = '', 
                        data_center = '', 
                        description = '', 
                        dns = '', 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        ip_address = '', 
                        ip_port = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        mac_address = '', 
                        region = '', 
                        resolution_key = '', 
                        state = '', 
                        version = '', )
                    ],
                models = [
                    ibm_gdsc_sdk_saas.models.model_vertex___model_vertex_with_information_about_model_and_its_connected_vertices.ModelVertex - Model Vertex with information about model and its connected vertices(
                        criticality = 'LEVEL_UNKNOWN', 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        has_training_data = True, 
                        last_trained = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        model_application = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        model_deployment = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        model_id = '', 
                        model_name = '', 
                        model_resources = [
                            
                            ], 
                        model_sub_type = '', 
                        model_type = '', 
                        publisher = '', 
                        resolution_key = '', 
                        risk_level = 'LEVEL_UNKNOWN', 
                        version = '', )
                    ],
                origin = '',
                ports = [
                    ibm_gdsc_sdk_saas.models.port_vertex___port_vertex_with_information_about_port_and_its_connected_vertices.PortVertex - Port Vertex with information about port and its connected vertices(
                        description = '', 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        port_number = '', 
                        protocol = '', 
                        protocol_version = '', 
                        resolution_key = '', )
                    ],
                resources = [
                    ibm_gdsc_sdk_saas.models.resources_vertex___resource_vertex_with_information_about_resource_and_its_connected_vertices.ResourcesVertex - Resource Vertex with information about resource and its connected vertices(
                        creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        location = '', 
                        name = '', 
                        resolution_key = '', 
                        resources_account = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        sensitivities = [
                            ibm_gdsc_sdk_saas.models.sensitivity_info___sensitivity_details_for_a_resource,_with_its_category,_name_and_count.SensitivityInfo - Sensitivity details for a resource, with its category, name and count(
                                category = '', 
                                count = 56, 
                                name = '', )
                            ], 
                        size = '', 
                        type = '', )
                    ],
                storages = [
                    ibm_gdsc_sdk_saas.models.storage_vertex___storage_vertex_with_information_about_storage_and_its_connected_vertices.StorageVertex - Storage Vertex with information about storage and its connected vertices(
                        city = '', 
                        country = '', 
                        criticality = 'LEVEL_UNKNOWN', 
                        data_center = '', 
                        dns = '', 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        folder_path = '', 
                        owner = [
                            ''
                            ], 
                        region = '', 
                        resolution_key = '', 
                        risk_level = 'LEVEL_UNKNOWN', 
                        size = '', 
                        state = '', 
                        storage_account = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        storage_host = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        storage_id = '', 
                        storage_ip = [
                            
                            ], 
                        storage_name = '', 
                        storage_resources = [
                            
                            ], 
                        storage_sub_type = '', 
                        storage_subscription = [
                            
                            ], 
                        storage_type = '', )
                    ],
                subscriptions = [
                    ibm_gdsc_sdk_saas.models.subscription_vertex___subscription_vertex_with_information_about_subscription_and_its_connected_vertices.SubscriptionVertex - Subscription Vertex with information about subscription and its connected vertices(
                        duration = '', 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        extended_properties = [
                            ibm_gdsc_sdk_saas.models.custom_property___custom_property_of_a_vertex_to_be_represnted_as_key_value_pairs.CustomProperty - Custom property of a vertex to be represnted as key value pairs(
                                data_type = '', 
                                key = '', 
                                value = '', )
                            ], 
                        name = '', 
                        resolution_key = '', 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        subscription_account = [
                            ibm_gdsc_sdk_saas.models.connection_edge___connection_edge_defined_from_one_vertex_to_another/_from_source_to_target_with_identifier_as_unqiue_identification.ConnectionEdge - Connection edge defined from one vertex to another. from source to target with identifier as unqiue identification(
                                identifier = '', )
                            ], 
                        subscription_id = '', 
                        type = '', )
                    ]
            )
        else:
            return Assetsv3AssetIngestionRequest(
        )
        """

    def testAssetsv3AssetIngestionRequest(self):
        """Test Assetsv3AssetIngestionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
