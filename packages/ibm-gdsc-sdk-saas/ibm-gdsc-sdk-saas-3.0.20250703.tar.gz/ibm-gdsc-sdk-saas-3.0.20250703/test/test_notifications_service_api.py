# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.api.notifications_service_api import NotificationsServiceApi


class TestNotificationsServiceApi(unittest.TestCase):
    """NotificationsServiceApi unit test stubs"""

    def setUp(self) -> None:
        self.api = NotificationsServiceApi()

    def tearDown(self) -> None:
        pass

    def test_notifications_service_create_ticket(self) -> None:
        """Test case for notifications_service_create_ticket

        Summary: Create ticket Description: Create ticket based on information passed in.
        """
        pass

    def test_notifications_service_get_folders(self) -> None:
        """Test case for notifications_service_get_folders

        Summary: Get folders Description: Get folder for the integration connection provided.
        """
        pass

    def test_notifications_service_get_notification_filename(self) -> None:
        """Test case for notifications_service_get_notification_filename

        Summary: Get notification filename Description: Return filename associated with the notifications record referenced in the associated context record. The notification id is required but may be set in the associated authentication token or explicitly in the request.
        """
        pass

    def test_notifications_service_get_notification_record(self) -> None:
        """Test case for notifications_service_get_notification_record

        Summary: Get notification record Description: Return notifications record with the specified ID.
        """
        pass

    def test_notifications_service_get_notification_records(self) -> None:
        """Test case for notifications_service_get_notification_records

        Summary: Get notification records Description: Return notifications records that match the specified filter.
        """
        pass

    def test_notifications_service_get_ticket_status(self) -> None:
        """Test case for notifications_service_get_ticket_status

        Summary: Get ticket status Description: Get the status of the given ticket
        """
        pass

    def test_notifications_service_post_notification_record(self) -> None:
        """Test case for notifications_service_post_notification_record

        Summary: For PostNotificationRecord notification only Description: Sends notification with recipients and returns a status
        """
        pass

    def test_notifications_service_search_notification_records(self) -> None:
        """Test case for notifications_service_search_notification_records

        Summary: Search notification records Description: Return notification records using pipeline of filters
        """
        pass

    def test_notifications_service_test_integration(self) -> None:
        """Test case for notifications_service_test_integration

        Summary: Test integration Description: Test the integration connection with the arguments passed in the TestIntegrationRequest.  When possible a test message is sent to the integration to ensure it is functional.
        """
        pass

    def test_notifications_service_update_notification_record(self) -> None:
        """Test case for notifications_service_update_notification_record

        Summary: Update notification record Description: Update a notification record with the specified values.  The ID field is required and must match an existing notification. All fields other than the ID are optional. Creation timestamp, user and other administrative fields can not updated.
        """
        pass


if __name__ == '__main__':
    unittest.main()
