# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ibm_gdsc_sdk_saas.models.connectionsv3_get_data_sources_response import Connectionsv3GetDataSourcesResponse

class TestConnectionsv3GetDataSourcesResponse(unittest.TestCase):
    """Connectionsv3GetDataSourcesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Connectionsv3GetDataSourcesResponse:
        """Test Connectionsv3GetDataSourcesResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Connectionsv3GetDataSourcesResponse`
        """
        model = Connectionsv3GetDataSourcesResponse()
        if include_optional:
            return Connectionsv3GetDataSourcesResponse(
                data_sources = [
                    ibm_gdsc_sdk_saas.models.connectionsv3_data_source.connectionsv3DataSource(
                        key = '', 
                        last_used = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        other_types = [
                            ''
                            ], 
                        stream_type = '', 
                        types = [
                            'UNDEFINED_TYPE'
                            ], )
                    ]
            )
        else:
            return Connectionsv3GetDataSourcesResponse(
        )
        """

    def testConnectionsv3GetDataSourcesResponse(self):
        """Test Connectionsv3GetDataSourcesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
