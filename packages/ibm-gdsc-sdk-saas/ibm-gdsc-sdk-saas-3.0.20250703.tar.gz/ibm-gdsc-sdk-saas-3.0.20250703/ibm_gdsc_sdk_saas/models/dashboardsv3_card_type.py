# coding: utf-8

"""
    IBM Guardium Data Security Center

    Use Guardium Data Security Center SDK (application programming interfaces) to interact with other applications, such as Guardium Data Protection, universal connectors, and Guardium Data Security Center reports.

    The version of the OpenAPI document: 3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class Dashboardsv3CardType(str, Enum):
    """
    CardType - available card types.
    """

    """
    allowed enum values
    """
    UNDEFINED_CARD_TYPE = 'UNDEFINED_CARD_TYPE'
    REPORT = 'REPORT'
    DATASOURCES = 'DATASOURCES'
    USER_RISK = 'USER_RISK'
    SEQUENCE_ANOMALIES = 'SEQUENCE_ANOMALIES'
    RECENT_ACTIONS = 'RECENT_ACTIONS'
    CONNECTIONS = 'CONNECTIONS'
    OUTLIERS = 'OUTLIERS'
    FAVOURITE_REPORTS = 'FAVOURITE_REPORTS'
    GDP_HEALTH = 'GDP_HEALTH'
    RECENT_ANOMALY_TABLE = 'RECENT_ANOMALY_TABLE'
    DM_INGEST = 'DM_INGEST'
    DB_USER_RISK = 'DB_USER_RISK'
    OS_USER_RISK = 'OS_USER_RISK'
    GROUP = 'GROUP'
    AUDITS = 'AUDITS'
    COMPLIANCE_REPORTS = 'COMPLIANCE_REPORTS'
    COMPLIANCE_WORKSPACE = 'COMPLIANCE_WORKSPACE'
    TAGGED_REPORTS = 'TAGGED_REPORTS'
    HEALTH_WAREHOUSE_STORAGE_USAGE = 'HEALTH_WAREHOUSE_STORAGE_USAGE'
    HEALTH_WAREHOUSE_STORAGE_OVERTIME = 'HEALTH_WAREHOUSE_STORAGE_OVERTIME'
    HEALTH_WAREHOUSE_STORAGE_BY_SIZE = 'HEALTH_WAREHOUSE_STORAGE_BY_SIZE'
    HEALTH_DATAMART_LANDING_ZONE = 'HEALTH_DATAMART_LANDING_ZONE'
    HEALTH_TOP_DB2_BY_ROW_COUNT = 'HEALTH_TOP_DB2_BY_ROW_COUNT'
    NEWLY_DISCOVERED_ASSETS = 'NEWLY_DISCOVERED_ASSETS'
    DORMANT_ASSETS = 'DORMANT_ASSETS'
    UNMONITORED_ASSETS = 'UNMONITORED_ASSETS'
    QUERY_MONITOR = 'QUERY_MONITOR'
    HEALTH_DIRECT_STREAM_INGESTION_VOLUME = 'HEALTH_DIRECT_STREAM_INGESTION_VOLUME'
    HEALTH_TOP_GDP_COLLECTORS = 'HEALTH_TOP_GDP_COLLECTORS'
    HEALTH_OVERALL_PVC_STORAGE_USAGE = 'HEALTH_OVERALL_PVC_STORAGE_USAGE'
    HEALTH_TOP_PODS_WITH_EXCESSIVE_RESTARTS = 'HEALTH_TOP_PODS_WITH_EXCESSIVE_RESTARTS'
    HEALTH_DATAMART_INGESTION_TYPE = 'HEALTH_DATAMART_INGESTION_TYPE'
    HEALTH_DATAMART_INGESTION_VOLUME = 'HEALTH_DATAMART_INGESTION_VOLUME'
    HEALTH_CERTIFICATES_EXPIRATION_DATE = 'HEALTH_CERTIFICATES_EXPIRATION_DATE'
    ASSETS_UNTAGGED = 'ASSETS_UNTAGGED'
    ASSETS_VULNERABILITY_TREND = 'ASSETS_VULNERABILITY_TREND'
    ASSETS_HIGHEST_TAG_COUNT = 'ASSETS_HIGHEST_TAG_COUNT'
    ASSETS_CLASSIFICATION_SCAN_STATUS = 'ASSETS_CLASSIFICATION_SCAN_STATUS'
    ASSETS_VULNERABILITY_SCANS_STATUS = 'ASSETS_VULNERABILITY_SCANS_STATUS'
    ASSETS_OPEN_VULNERABILITIES = 'ASSETS_OPEN_VULNERABILITIES'
    QSPM_CRYPTOGRAPHIC_LIBRARIES = 'QSPM_CRYPTOGRAPHIC_LIBRARIES'
    QSPM_CIPHERSUITE_STRENGTH = 'QSPM_CIPHERSUITE_STRENGTH'
    QSPM_TLS_VERSIONS = 'QSPM_TLS_VERSIONS'
    QSPM_PROTOCOL_COUNT = 'QSPM_PROTOCOL_COUNT'
    QSPM_ENDPOINTS = 'QSPM_ENDPOINTS'
    QSPM_POLICY_COMPLIANCE = 'QSPM_POLICY_COMPLIANCE'
    QSPM_CERT_SIGN_ALGORITHMS = 'QSPM_CERT_SIGN_ALGORITHMS'
    MULTI_GROUP = 'MULTI_GROUP'
    EDGE_GATEWAY_HEALTH = 'EDGE_GATEWAY_HEALTH'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of Dashboardsv3CardType from a JSON string"""
        return cls(json.loads(json_str))


