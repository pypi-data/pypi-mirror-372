Metadata-Version: 2.4
Name: sed-processor
Version: 1.2.2
Summary: Single Event Data Frame Processor: Backend to handle photoelectron resolved datastreams
Author-email: OpenCOMPES team <sed-processor@mpes.science>
License: MIT License
        
        Copyright (c) 2022-2024 OpenCOMPES
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: repository, https://github.com/OpenCOMPES/sed
Project-URL: documentation, https://opencompes.github.io/sed/
Keywords: sed,mpes,flash,arpes
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: bokeh<3.7.0,>=2.4.2
Requires-Dist: dask<2024.8,>=2021.12.0
Requires-Dist: elabapi-python<5.2,>=5.0
Requires-Dist: fastdtw>=0.3.4
Requires-Dist: h5py>=3.6.0
Requires-Dist: ipympl>=0.9.1
Requires-Dist: ipywidgets>=8.1.5
Requires-Dist: lmfit>=1.0.3
Requires-Dist: matplotlib>=3.5.1
Requires-Dist: natsort>=8.1.0
Requires-Dist: numba>=0.55.1
Requires-Dist: numpy>=1.18
Requires-Dist: pandas>=1.4.1
Requires-Dist: photutils<2.0
Requires-Dist: psutil>=5.9.0
Requires-Dist: pynxtools-mpes>=0.2.5
Requires-Dist: pynxtools>=0.11.1
Requires-Dist: pyyaml>=6.0.0
Requires-Dist: scipy>=1.8.0
Requires-Dist: symmetrize>=0.5.5
Requires-Dist: threadpoolctl>=3.1.0
Requires-Dist: tifffile>=2022.2.9
Requires-Dist: tqdm>=4.62.3
Requires-Dist: xarray>=0.20.2
Requires-Dist: joblib>=1.2.0
Requires-Dist: pyarrow>=14.0.1
Requires-Dist: pydantic>=2.8.2
Provides-Extra: dev
Requires-Dist: pytest>=7.0.1; extra == "dev"
Requires-Dist: pytest-cov>=3.0.0; extra == "dev"
Requires-Dist: pytest-xdist>=2.5.0; extra == "dev"
Requires-Dist: pytest-clarity>=1.0.1; extra == "dev"
Requires-Dist: ruff<0.3.0,>=0.1.7; extra == "dev"
Requires-Dist: mypy<1.10.0,>=1.6.0; extra == "dev"
Requires-Dist: types-pyyaml>=6.0.12.12; extra == "dev"
Requires-Dist: types-requests>=2.31.0.9; extra == "dev"
Requires-Dist: pyfakefs>=5.3.0; extra == "dev"
Requires-Dist: requests-mock>=1.11.0; extra == "dev"
Requires-Dist: pre-commit>=3.0.0; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx>=7.1.2; extra == "docs"
Requires-Dist: tomlkit>=0.12.0; extra == "docs"
Requires-Dist: sphinx-autodoc-typehints>=1.17.0; extra == "docs"
Requires-Dist: nbsphinx>=0.9.3; extra == "docs"
Requires-Dist: myst-parser>=2.0.0; extra == "docs"
Requires-Dist: pydata-sphinx-theme>=0.15.0; extra == "docs"
Provides-Extra: notebook
Requires-Dist: jupyter>=1.0.0; extra == "notebook"
Requires-Dist: ipykernel>=6.9.1; extra == "notebook"
Requires-Dist: jupyterlab>=4.0; extra == "notebook"
Requires-Dist: jupyterlab-h5web>=8.0.0; extra == "notebook"
Provides-Extra: all
Requires-Dist: sed-processor[dev,docs,notebook]; extra == "all"
Dynamic: license-file

<h1 align="center">
<img src="docs/_static/logo.png" width="200">
</h1><br>

[![Documentation Status](https://github.com/OpenCOMPES/sed/actions/workflows/documentation.yml/badge.svg)](https://opencompes.github.io/docs/sed/stable/)
[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)
![](https://github.com/OpenCOMPES/sed/actions/workflows/linting.yml/badge.svg?branch=main)
![](https://github.com/OpenCOMPES/sed/actions/workflows/testing_multiversion.yml/badge.svg?branch=main)
![](https://img.shields.io/pypi/pyversions/sed-processor)
![](https://img.shields.io/pypi/l/sed-processor)
[![](https://img.shields.io/pypi/v/sed-processor)](https://pypi.org/project/sed-processor)
[![Coverage Status](https://coveralls.io/repos/github/OpenCOMPES/sed/badge.svg?branch=main&kill_cache=1)](https://coveralls.io/github/OpenCOMPES/sed?branch=main)

**sed-processor** is a backend to process and bin multidimensional single-event datastreams, with the intended primary use case in multidimensional photoelectron spectroscopy using time-of-flight instruments.

It builds on [Dask](https://www.dask.org/) dataframes, where each column represents a multidimensional "coordinate" such as position, time-of-flight, pump-probe delay etc., and each entry represents one electron. The `SedProcessor` class provides a single user entry point, and provides functions for handling various workflows for coordinate transformation, e.g. corrections and calibrations.

Furthermore, "sed-processor" provides fast and parallelized binning routines to compute multidimensional histograms from the processed dataframes in a delayed fashion, thus reducing requirements on cpu power and memory consumption.

Finally, in contains several export routines, including export into the [NeXus](https://www.nexusformat.org/) format with rich and standardized metadata annotation.

# Installation

## Prerequisites
- Python 3.9+
- pip

## Steps
- Create a new virtual environment using either venv, pyenv, conda, etc. See below for an example.

```bash
python -m venv .sed-venv
```

- Activate your environment:

```bash
# On macOS/Linux
source .sed-venv/bin/activate

# On Windows
.sed-venv\Scripts\activate
```

- Install `sed`, distributed as `sed-processor` on PyPI:

```bash
pip install sed-processor[all]
```

- If you intend to work with Jupyter notebooks, it is helpful to install a Jupyter kernel for your environment. This can be done, once your environment is activated, by typing:

```bash
python -m ipykernel install --user --name=sed_kernel
```

- If you do not use Jupyter Notebook or Jupyter Lab, you can skip the installing those dependencies

```bash
pip install sed-processor
```

# Documentation
Comprehensive documentation including several workflow examples can be found here:
https://opencompes.github.io/docs/sed/stable/


# Contributing
Users are welcome to contribute to the development of **sed-processor**. Information how to contribute, including how to install developer versions can be found in the [documentation](https://opencompes.github.io/docs/sed/stable/misc/contribution.html)

We would like to thank our contributors!

[![Contributors](https://contrib.rocks/image?repo=OpenCOMPES/sed)](https://github.com/OpenCOMPES/sed/graphs/contributors)


## License

sed-processor is licenced under the MIT license

Copyright (c) 2022-2024 OpenCOMPES

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
