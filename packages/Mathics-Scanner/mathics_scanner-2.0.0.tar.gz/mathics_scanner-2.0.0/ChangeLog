2025-08-25  rocky <rb@dustyfeet.com>

	* CHANGES.rst, mathics_scanner/version.py: Bump version; update Bugs
	fixed

2025-07-19  rocky <rb@dustyfeet.com>

	* pyproject.toml: Deal with Python developer harassement

2025-07-19  R. Bernstein <rocky@users.noreply.github.com>

	* CHANGES.rst: Update CHANGES.rst

2025-07-19  R. Bernstein <rocky@users.noreply.github.com>

	* CHANGES.rst: Update CHANGES.rst

2025-07-19  R. Bernstein <rocky@users.noreply.github.com>

	* CHANGES.rst: Update CHANGES.rst

2025-07-19  rocky <rb@dustyfeet.com>

	* CHANGES.rst, ChangeLog-spell-corrected.diff,
	mathics_scanner/version.py: Go over updates since 1.4.1

2025-08-25  rocky <rb@dustyfeet.com>

	* .github/workflows/osx.yml, .github/workflows/ubuntu.yml: No Python
	3.9 allowed!

2025-08-25  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/operators.yml: Properly escape FractionBox
	operator usage field Fixes #136

2025-08-24  rocky <rb@dustyfeet.com>

	* .github/workflows/pyodide.yml: Administrivia

2025-08-24  rocky <rb@dustyfeet.com>

	* pyproject.toml: Remove Python 3.9 support

2025-08-24  rocky <rb@dustyfeet.com>

	* pyproject.toml: More liberal setuptools It might make pyodide happy.

2025-08-24  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/escape_sequences.py, mathics_scanner/feed.py,
	mathics_scanner/mathics3_tokens.py: Syntax message gives full line
	in "sntufn" tag (#137)

2025-08-19  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/operators.yml: Clarify Boxing precedence vs
	Expression Precedence (#135) * Clarify Boxing precedence vs Expression Precedence * Go over spelling * Update operators.yml *Grammarly-inspired changes.

2025-07-24  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/tokeniser.py, test/test_string_tokens.py: Escaped
	braces in String mode is ok. (#134) You can find an example of this in the usage string for
	FCSetPauliSigmaScheme of FeynCalc.

2025-07-24  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/tokeniser.py, test/test_feed.py,
	test/test_tokeniser.py: Treat \ before newline as whitespace. (#132) Note: this was seen in Rubi.m line 215 and FeynCalc FCMain.m line
	362.

2025-07-24  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/mathics.yml: Run Mathic3 full tests using Python
	3.13... (#133) Run tests using Python 3.13 is faster.

2025-07-19  R. Bernstein <rocky@users.noreply.github.com>

	* README.rst: Update README.rst

2025-07-19  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/isort-and-black-checks.yml,
	.github/workflows/mathics.yml, .github/workflows/osx.yml,
	.github/workflows/ubuntu.yml, .github/workflows/windows.yml,
	pyproject.toml: Drop 3.8, Add 3.13. Test using newer Python (#131) * Drop 3.8, Add 3.13. Test using newer Python * No longer need special branch for doctest

2025-07-17  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/mathics.yml,
	mathics_scanner/data/operators.yml, mathics_scanner/tokeniser.py,
	test/test_tokeniser.py: Add \* BoxInputEscape token (#130) * Add \* BoxInputEscape token * CI test with BoxInputEscape branch of mathics-core

2025-07-14  rocky <rb@dustyfeet.com>

	* mathics_scanner/mathics3_tokens.py: Track API change in
	mathics3-tokens

2025-07-12  rocky <rb@dustyfeet.com>

	* .github/workflows/mathics.yml: Sync with mathics-core...  we no longer use position-tracking branch

2025-07-12  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/mathics.yml, mathics_scanner/feed.py,
	mathics_scanner/location.py, test/test_codetokenize.py,
	test/test_feed.py, test/test_string_tokens.py,
	test/test_tokeniser.py: Adjust for non-filename kinds of containers
	(#129) * Adjust for non-filename kinds of containers * Use position-tracking branch of Mathics-core * Start looking at file-based locations * Add get_location_file_line * Minor tweaks Set now not to track locations by default.  * Remove SourceTextPositions And probably source_positions should go later.  * Track stream feeds better...  remove unused code

2025-07-06  R. Bernstein <rocky@users.noreply.github.com>

	* CHANGES.rst, pyproject.toml: Revise for source to include
	operators.yml (#123)

2025-06-03  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/mathics.yml: Go back to using master branch of
	mathics-core (#128) Changes have been merged from branch.

2025-06-03  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/mathics.yml, docs/source/api.rst,
	mathics_scanner/__init__.py,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/errors.py, mathics_scanner/escape_sequences.py,
	mathics_scanner/feed.py, mathics_scanner/mathics3_tokens.py,
	mathics_scanner/prescanner.py, mathics_scanner/tokeniser.py,
	test/test_escape_sequences.py, test/test_prescanner.py,
	test/test_string_tokens.py, test/test_tokeniser.py: Revise escape
	sequence scanning (#126) * Reduce prescanner use Escape sequences other than named characters have been removed from
	the prescanner and put in the scanner.  * Test workarounds.. for now.  * Isolate tokenizing escape sequences * Split out escape_sequence parsing.  * Handle escape sequences outside of strings.  * Remove prescanner and ..  handle syntax errors in mathics3-tokens.  * Rename some variables Tokenizer.code -> Tokenizer.source_text Tokenizer.incomplete ->
	Tokenizer.get_more_input * Bang more on mathics3-tokens Start to show syntax errors.  * Start going over error messages...  In particular errors with octal digits and incomplete named errors.
	Go over docstrings in escape_sequences.py * Improve error handling...  and add more tests.  * Improve scanner...  named-characters.yml: \[Mu] is letterlike tokeniser.py: Correct
	identifier or pattern for those having letterlike escape sequences * Handle EscapSequence errors better * Handle embedded escape sequences in Symbols...  and also add Theta to the list of letterlike symbols * WIP - bang on Symbol tokenization with backslash Replace .format() with f-strings. Add comments around Symbol
	pattern.  sntx_message() Exception now saves name, tag, and args * Be able to whether we are in a RowBox * Handle no-meaning operators Not sure how this worked before, but it did.  * WIP misc fixes...  * "$\" is a thing * Correct EscapeSyntaxError error message * Better Symbol tokenization for things like a\[Mu]1. More in next   commit though.  * Better Symbol-name extension test...  for things like \.78\.79 Improve comments around DRYing identifier/symbol_name extension * WIP - small tweaks before moving master forward This PR has gotten out of hand in size, we'll break it up into
	smaller chunks.  * Small bugs related to escape-character handling NamedChracterSyntax should be a new-style TranslateError self.code
	-> self.source_text misc sntx_message() fixes. Document better.  * Use git branch for testing Mathics * Revise Scanner error exception class TranslateError, TranslateErrorNew, ScanError now become ScannerError * Let's use 3.12 in CI testing it should be just a little bit faster (and it is more modern) * Small tidying changes to comments * ScannerError -> SyntaxError Use more direct and simpler error class name that is is more like
	its other subclassed errors.  * More tests * One more escape test * Allow escape space "\ " +  more string tests * Start unit test for comments * Fix a doc spelling typo + minor doc tweak * invalid escape sequences inside strings...  An invalid escape sequence inside a string, like "\(a \+\)" is not
	an error. Instead the sequence the same, e.g "\(a \+\)".  * Escape sequences in strings, yet again...  If the escape sequenced in a string can be a boxing construct, then
	this is not an error in the escape sequence. Otherwise, it is.  For example "\(" is not an error in a string while "\g" is.  Yes, this a bit involved. But that's the way WA works.  * Add LineSeparator, and \* Also, flatten values in box operators for BOXING_CONSTRUCT_SUFFIXES * Remove duplicate test

2025-05-25  rocky <rb@dustyfeet.com>

	* .github/workflows/mathics.yml: Administrivia - adjust for merged
	branches

2025-05-25  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/mathics.yml, mathics_scanner/__init__.py,
	mathics_scanner/characters.py,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/errors.py, mathics_scanner/mathics3_tokens.py,
	mathics_scanner/prescanner.py, mathics_scanner/tokeniser.py:
	Preparatory changes for prescanner removal (#127) To handle escape sequences better, such as ignoring them in
	comments, branch revise-escape-sequence-scanning was started as more
	major refactor.  However, that has become too large and is too hard to get right.
	This PR splits the non-escape sequence portion of the changes. After
	this, the remaining escape sequence changes will be added back.  As a result, this code does have a few forward-looking changes and
	do not have any use or benefit in the current code base.  *.github/workflows/mathics.yml : Adjust testing to work on the
	 "mini-tweaks" branch of mathics-core * scanner_scanner/errors.yml: revise TranslateError classes so that
	they capture more information about the error that was raised. In
	particular, save the error name, tag, and arguments. This allows
	exception handlers more flexibility in how to handle error
	exceptions. For example, a handler should now have enough
	information to call the message() routine to display the error.  Or
	do this only in certain situations. It also makes debugging easier,
	since uncaught errors have more information.  Temporarily, there is TranslateErrorNew() in addition to
	TranslateError(). We may decide to replace all occurrences of
	TranslateError() with TranslateErrorNe,w(), but that decision and
	work is left for later.  * mathics3-tokens.py: add error handlers for problems in
	tokenization.  * mathics_scanner/precanner.py: incomplete() ->   get_more_input(). "incomplete" is an adjective, not a verb;   functions generally should be verbs or actions. "Incomplete" is a
	  property about a situation as (e.g., reading the line of input is not done yet) as opposed to a   statement about what should be or needs to be done: we need to
	  read another line of input.  * mathics_scanner/tokeniser.py: replace .format() with f-string.
	  Comment more extensively. self.code -> self.source_text. Self.code
	  is vague (and as someone who works with Python bytecode) often   misleading to me.  "code" would also fit S-expression code, Python
	  source code, Python bytecode, some tag-like "code" that you might
	  find in an enumeration, something else? * Add property: Token.is_inside_box. This is not used yet here, but
	  will be in the next refactor. It is used for the parser to the
	  tokenizer whether we are inside \( ... \). When this happens,
	  certain *additional* escape sequences are allowed like \%.  * match -> pattern_match. GNU Emacs seems to think match from
	  `re.match` is a reserved word.

2025-05-15  rocky <rb@dustyfeet.com>

	* mathics_scanner/version.py: Bump version

2025-05-15  rocky <rb@dustyfeet.com>

	* .gitignore, mathics_scanner/version.py: Administrivia * Bump to dev version * ignore spell-corrected Changelog

2025-05-15  rocky <rb@dustyfeet.com>

	* mathics_scanner/tokeniser.py: Save position in scan error

2025-02-12  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py: Correct field name in
	table generation (#124) * Correct field name in table generation.  * Start adding comments regarding character uses.  * For now, make operator-to-amslatex be an alias for
	unicode-to-amslatex

2025-01-26  rocky <rb@dustyfeet.com>

	* CHANGES.rst: Small grammar tweaks

2025-01-26  rocky <rb@dustyfeet.com>

	* admin-tools/check-versions.sh: Administrivia

2025-01-26  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/pyodide.yml, .github/workflows/ubuntu.yml,
	.gitignore, .pre-commit-config.yaml, CHANGES.rst,
	ChangeLog-spell-corrected.diff, Makefile, README.rst,
	mathics_scanner/version.py: Get ready for release 1.4.0 (#122) Release 1.4.0 * Update version and README.rst * Test on ubuntu 3.12 and pyoidide; * Update precommit confifgurations.

2025-01-23  R. Bernstein <rocky@users.noreply.github.com>

	* FUTURE.rst, MANIFEST.in, pyproject.toml, setup.py: Release stuff
	(#121) * Add FUTURE.rst for future plans * Remove warning found via "pyodide build"

2025-01-23  Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

	* mathics_scanner/data/operators.yml,
	test/test_mathics_precedence.py: Precedence UpTee RoundImplies
	(#101) * Ignore tokens better (but not completely) inside comments.
	Partially fixes #94.  * Add precedence tests via mathics testing * Change precedences for `UpTee` and `RoundImplies` * add `Precedence-Function` field in `UpTee`

2025-01-19  Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

	* mathics_scanner/data/named-characters.yml: More amslatex (#120) * more amslatex

2025-01-19  Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

	* mathics_scanner/data/named-characters.yml: more amslatex (#119)

2025-01-18  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/mathics3_tokens.py, mathics_scanner/tokeniser.py,
	pyproject.toml, test/test_codetokenize.py, test/test_tokeniser.py:
	Add mathics tokens cli (#115) * command-line routine showing Mathics3 tokenization * Add --CodeTokenize option . Option --CodeTokenize (-C) on
	mathics3-tokens shows tokens more like it is shown in CodeParser's
	CodeTokenize.  * Remove line number in In[] and Out[]. We don't have a % retrieval
	in this program

2025-01-15  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/named-characters.yml: amslatex(Vertical) ->
	\smallmid. more unicod refs.. (#118) Remove note 5 which is was wrong, and probably comes from the days
	when I was combining operators with character symbols which is
	wrong.  Possibly in the future, this will be reworked so Operators (like
	Put) are removed. But this needs to be done in conjunction with the
	scanner.

2025-01-14  Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: Complete more amslatex fields
	(#116) * More amslatex fields

2025-01-14  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/generate/build_tables.py,
	test/test_character_table_consistency.py,
	test/{test_unicode_equivalent.py => test_unicode.py}: Add
	unicode-to-amslatex table... (#117) And test ASCII-ness in tables that need to be ASCII

2025-01-08  rocky <rb@dustyfeet.com>

	* mathics_scanner/generate/build_operator_tables.py:
	operator-precedence -> operator-precedences Note: Mathics-core will be broken until this is synchronized.

2025-01-08  rocky <rb@dustyfeet.com>

	* mathics_scanner/generate/build_tables.py: Add one more table
	option for recent change

2025-01-08  R. Bernstein <rocky@users.noreply.github.com>

	* admin-tools/{make-tables.sh => make-JSON-tables.sh},
	mathics_scanner/data/.gitignore,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_operator_tables.py,
	mathics_scanner/generate/build_tables.py,
	test/{test_table_consistency.py =>
	test_character_table_consistency.py},
	test/test_general_yaml_sanity.py, test/test_operators.py: Add
	operator-to-amslatex and builtin-constants... (#114) operator-to-amslatex gives the AMSLaTeX string for unicode operator
	builtin-constants tags characters which are Builtin Symbols that act
	as nullary operators.

2025-01-05  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/operators.yml, mathics_scanner/tokeniser.py:
	Correct FractionBox and other small changes (#113)

2025-01-03  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/feed.py, mathics_scanner/tokeniser.py: Small
	changes remaining from PR #107 (#112) * Small changes remaining from PR #107 * Add FIXME note

2024-12-30  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/data/operators-additional.yml,
	mathics_scanner/data/operators.yml,
	mathics_scanner/generate/build_operator_tables.py,
	mathics_scanner/tokeniser.py: Operator refactor part1.5 (#111) * Tag the list of box operators and operator-to-string. These can be
	used in the scanner and parser * Handle boxing ternary operators. They list two operators. We just
	need the first of these in "tokens".  * Note ASCIIness of "Or"  and add AMSLaTeX symbol for it too * add more "NOT" sign information

2024-12-13  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/feed.py, mathics_scanner/tokeniser.py,
	test/test_string_tokens.py, test/test_tokeniser.py: Lint portion of
	PR #108 (#110) feed.py: lint and fix types test/test_string_tokens.py: Split out string token test from other
	test_tokeniser.py which is getting large. Add more string token
	tests.

2024-12-11  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/feed.py, mathics_scanner/prescanner.py,
	mathics_scanner/tokeniser.py, test/test_string_tokens.py,
	test/test_tokeniser.py: Revert "String tokenization fix (#108)"
	(#109) This reverts commit e26f5bc3f02600c2cec237b77c97af62186d95f1.

2024-12-11  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/feed.py, mathics_scanner/prescanner.py,
	mathics_scanner/tokeniser.py, test/test_string_tokens.py,
	test/test_tokeniser.py: String tokenization fix (#108) Handle backslash better...  * handle escape-characters \n, \t, \r, but not \X * feed.py: lint and fix types * Split out string token test from other test_tokeniser.py which is
	rather large.  * Add more test and tests for new stuff

2024-12-03  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/data/operators.yml, test/test_mathics_precedence.py:
	operator tests yet again; update YAML comments... (#106) * Test_mathics_precedence needs not to fail work when mathics is   installed. Tweak failure messages * Update comments in character and operators YAML files.  * Remove Parse field in operators YML.

2024-12-03  Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

	* mathics_scanner/data/operators.yml,
	test/test_mathics_precedence.py: Precedence for Directed and
	Undirected Edge (#103) * fix precedence for Directed and Undirected Edge * add operational tests for bugs in mathics-core parsing

2024-11-30  Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

	* test/testprecedence.m: Add precedence test tool (#104) * add a WL module with functions to test relative precedences of
	operators.  * begin and end package * longer explanation

2024-11-30  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/mathics.yml: Go back to testing using Mathics
	core master (#102)

2024-11-29  Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

	* Makefile, mathics_scanner/data/named-characters.yml,
	mathics_scanner/data/operators.yml, test/mathics_helper.py,
	test/test_mathics_precedence.py: Precedences for Del, DifferentialD
	and CapitalDifferentialD (#100) * Fixes #94 * Run precedence tests using mathics-core * change precedence for DifferentialD and CapitalDifferentialD to
	the WMA values

2024-11-27  R. Bernstein <rocky@users.noreply.github.com>

	* .gitignore, .pre-commit-config.yaml, Makefile,
	admin-tools/make-tables.sh, docs/source/implementation.rst,
	mathics_scanner/characters.py, mathics_scanner/data/README.rst,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/data/operators-intro.yml,
	mathics_scanner/data/operators.yml,
	mathics_scanner/generate/build_operator_tables.py,
	mathics_scanner/generate/build_tables.py, mathics_scanner/load.py,
	pyproject.toml, test/test_operators.py: Another pass over operator
	data (#98) mathics_scanner/characters.py: * Clarify "associativity" field. Check validity of field in htestgs * Remove a"actual-precedence" field Change name: characters.json -> character_tables.json to match what
	it is in Mathics3 Makefile: force mathics_scanner/data/operators.json build more often
	by including it as a dependency of "build".

2024-11-25  Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

	* mathics_scanner/tokeniser.py: Avoid trying to interpret escape
	sequences inside comments.  (#95) * fix #94

2024-11-25  rocky <rb@dustyfeet.com>

	* .github/ISSUE_TEMPLATE/bug_report.md: .. -> ... in issue template

2024-11-25  rocky <rb@dustyfeet.com>

	* .github/ISSUE_TEMPLATE/bug_report.md,
	.github/ISSUE_TEMPLATE/feature_request.md: Add standard
	issue/feature templates

2024-11-24  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/mathics.yml, .github/workflows/windows.yml,
	admin-tools/make-tables.sh, mathics_scanner/__init__.py,
	mathics_scanner/data/OperatorTable.csv,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/data/operators.yml,
	mathics_scanner/generate/operator_csv_to_yml.py,
	mathics_scanner/tokeniser.py: tokenizer gets no-meaning infix ops
	from JSON (#87) * tokenizer gets no-meaning infix ops from JSON * Temporally test from operator-info-from-JSON branch * Function unicode change so as not to conflict with RightTeeArrow.
	Function unicode is a long arrow.  * Remove CSV to YML stuff. CSV is beyond hope of keeping in sync.  * Remove tokeniser import from __init__.py. Workaround for now. We
	need this so we can create operator JSON without needing the JSON
	table to be previously around.  * Split typing changing variables like tokens and literal_tokens
	intoseparate variables for each type they can hold.  * Scanner uses operators json mm (#88, #89) * Change initialization of the tokenizer --------- Co-authored-by: Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

2024-11-23  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/operators.yml: Add Definition "?" operator

2024-11-23  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/data/operators.yml,
	mathics_scanner/generate/build_operator_tables.py: More operator
	tables (#86) * PRECEDENCE is needed in no-meaning operators info * More operator tables we can use in Mathics-core * Use Mathics3 precedence; add misc_op table...  * Start to go over and uncomment some "usage"-field strings. TODO:
	more work would be nice * Start to use "Infix" as a field name when that's what it is. TODO:
	go over and adjust more ---- Some will have to be FIXME's until we get everything merged in and
	we can start a 2nd round of testing/adjusting This can now be used with upcoming code to Mathics-core which will
	replace some of the operator-codedinformation in Python files.

2024-11-21  rocky <rb@dustyfeet.com>

	* mathics_scanner/tokeniser.py: WIP - towards getting operators
	sorted out

2024-11-19  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/operators.yml,
	mathics_scanner/generate/build_operator_tables.py,
	test/test_operators.py: Include no-meaning operators in JSON op
	extraction (#85) Include no-meaning operators in JSON op extraction, separated by
	affix: Infix, Postfix, or Prefix.  Also, update "meaningful" field comment at the top of the YAML file.  Add a unit test for operator-table consistency.

2024-11-18  R. Bernstein <rocky@users.noreply.github.com>

	* .pre-commit-config.yaml, mathics_scanner/data/OperatorTable.csv,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/data/operators.yml,
	mathics_scanner/generate/build_operator_tables.py: Move forward in
	going over operator examples (#84) Add a more-realistic "usage" field.  However, it is commented out until it is completed.  Next up is operators without any meaning, one of which Star is used
	in Rubi.

2024-11-12  rocky <rb@dustyfeet.com>

	* mathics_scanner/feed.py: Correct the placement of the trace
	function check

2024-10-29  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/OperatorTable.csv,
	mathics_scanner/data/operators-intro.yml,
	mathics_scanner/data/operators.yml: Start going over "usage" field
	(#83)

2024-09-23  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py, test/test_urls.py: Start adding
	Unicode references (#80)

2024-09-23  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/feed.py: split arguments in trace_fn() (#81)

2024-09-19  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py, test/test_urls.py: Add WL Named
	Character URLs (#79) * Add WL reference URLs...  and add a (slow) test program to retrieve and check these.  * Tolerate Python < 3.11

2024-09-17  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/data/operators.yml: Add rljacobson's heuristic on
	Unicode (#78) * Add rljacobson's heuristic on Unicode * Some small corrections

2024-09-09  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/OperatorTable.csv,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/data/operators-additional.yml,
	mathics_scanner/data/operators-intro.yml,
	mathics_scanner/data/operators.yml, test/test_ascii.py,
	test/test_general_yaml_sanity.py: Go over operator characters...
	(#71) * Go over operator characters...  and add more information in operators YAML * Go over Integrals...  their arity, and operatorness.  Also fix spelling mistakes caught by mmatera

2024-09-08  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py: Add unicode minus: U+2122
	(#72)

2024-09-07  rocky <rb@dustyfeet.com>

	* mathics_scanner/feed.py: Add one tiny parameter annotation

2024-09-02  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/README.rst,
	mathics_scanner/data/operators-additional.yml,
	mathics_scanner/data/operators-intro.yml,
	mathics_scanner/data/operators.yml,
	mathics_scanner/generate/build_operator_tables.py,
	mathics_scanner/generate/operator_csv_to_yml.py: Remove "name" field
	from YAML... (#70) * Remove "name" field from YAML...  It is duplicated, and can lead to inconsistency * Add comment JSON use

2024-08-30  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/mathics.yml, admin-tools/make-tables.sh,
	mathics_scanner/data/OperatorTable.csv,
	mathics_scanner/data/operators-additional.yml,
	mathics_scanner/data/operators-intro.yml,
	mathics_scanner/data/operators.yml,
	mathics_scanner/generate/operator_csv_to_yml.py: Operator tables
	redux (#69) * Redo operator tables and processing...  We now create operators.yml from operators-intro.yml and CSV file
	and operators-additional.yml.  * Add operators.yml to table creation * More operator information * "corrected" Deriviate info doesn't work for us * Adjust CI - mathics-core branch got merged into master * Go over comments.

2024-08-29  rocky <rb@dustyfeet.com>

	* mathics_scanner/generate/build_operator_tables.py,
	mathics_scanner/generate/build_tables.py: Use UTF-8 in reading...  This effects operator and character table creation in mathics-core

2024-08-29  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/OperatorTable.csv,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/data/operators.yml,
	mathics_scanner/generate/build_operator_tables.py,
	mathics_scanner/generate/build_tables.py,
	mathics_scanner/generate/operator_csv_to_yml.py: Simplify YAML (#68) * Simplify YAML * Cross check named-characters.yml vs. operators.yml * Note relation and differences between operators and characters * Convert "None" and "Non" to null

2024-08-29  R. Bernstein <rocky@users.noreply.github.com>

	* .github/workflows/mathics.yml, .gitignore, Makefile, README.rst,
	admin-tools/check-versions.sh, admin-tools/make-dist.sh,
	admin-tools/make-tables.sh, mathics_scanner/data/OperatorTable.csv,
	mathics_scanner/data/README.rst,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/data/operators.yml,
	mathics_scanner/generate/build_operator_tables.py,
	mathics_scanner/generate/operator_csv_to_yml.py,
	mathics_scanner/version.py, pyproject.toml: Add operator tables
	(#67) * Administrivia and bump version * First cut at creating an operator table * Comment out fields that don't YAML parse easily (yet) * Add program to convert operator CSV to YAML * Spelling corrections * Add program to create operator table from YAML * Need to use special branch to test... And we'll have to remove
	this later when it gets merged to master. Sigh.  * CI woes * Another attempt at packaging

2024-08-09  rocky <rb@dustyfeet.com>

	* mathics_scanner/version.py: Bump version after release

2024-08-09  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #66 from Mathics3/release-1.3.1 Release 1.3.1

2024-08-08  rocky <rb@dustyfeet.com>

	* .pre-commit-config.yaml, CHANGES.rst,
	ChangeLog-spell-corrected.diff, Makefile, pyproject.toml: Hook in a
	way to fix spelling mistakes in ChangeLog

2024-08-08  rocky <rb@dustyfeet.com>

	* mathics_scanner/version.py: Get ready for release 1.3.1

2024-08-08  rocky <rb@dustyfeet.com>

	* .github/workflows/osx.yml: Administrivia: Bump workflows versions

2024-08-07  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #65 from Mathics3/workflows-administrivia Sync with other Mathics3 workflows

2024-07-29  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #64 from Mathics3/addess-CVE-2024-38335 CVE-2024-38335 recommends ~> 70.0.0...

2024-07-29  rocky <rb@dustyfeet.com>

	* pyproject.toml: CVE-2024-38335 recommends ~> 70.0.0...  and classifies this the severity as "High severity"

2024-07-26  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #63 from
	Mathics3/remove-3.12-deprecation-warning Remove 3.12 deprecation warning...

2024-07-25  rocky <rb@dustyfeet.com>

	* mathics_scanner/characters.py: Remove 3.12 deprecation warning...  regarding the use of pkgdata

2024-07-25  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #60 from mkoeppe/setup_py_cleanup setup.py cleanup

2024-02-24  rocky <rb@dustyfeet.com>

	* .github/workflows/autoblack.yml: Give up on getting isort and
	black working in CI

2024-02-24  rocky <rb@dustyfeet.com>

	* .pre-commit-config.yaml: isort/black wars...  See https://github.com/PyCQA/isort/issues/1518

2024-02-24  rocky <rb@dustyfeet.com>

	* .pre-commit-config.yaml: black and isort mess

2024-02-24  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #61 from mkoeppe/pre-commit-autoupdate .pre-commit-config.yaml: Update using 'pre-commit autoupdate'

2024-02-20  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* pyproject.toml, setup.py: setup.py: Remove INSTALL_REQUIRES,
	already in pyproject.toml

2024-02-20  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* setup.py: setup.py: Remove unused definitions

2024-02-20  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* pyproject.toml, setup.py: pyproject.toml: Move packages,
	package_data here from setup.py

2024-02-20  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #59 from Mathics3/bump-testing-versions Bump testing versions

2024-02-20  rocky <rb@dustyfeet.com>

	* setup.py: Fix spelling errors

2024-02-20  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #58 from mkoeppe/pyproject_metadata Modernize Python metadata

2024-02-19  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* mathics_scanner/generate/build_tables.py, pyproject.toml,
	setup.py: setup.py: Use custom egg_info command class for building
	tables

2024-02-19  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* pyproject.toml: pyproject.toml: Make version 'dynamic'

2024-02-18  Matthias Koeppe <mkoeppe@math.ucdavis.edu>

	* pyproject.toml, setup.cfg, setup.py: pyproject.toml: Move metadata
	here from setup.py

2024-02-19  rocky <rb@dustyfeet.com>

	* .github/workflows/osx.yml, .github/workflows/ubuntu.yml: Remove
	3.7 testing. Add 3.11 testing

2023-12-17  rocky <rb@dustyfeet.com>

	* admin-tools/pyenv-versions,
	mathics_scanner/data/named-characters.yml, test/test_tokeniser.py:
	Administrivia: typos and bump versions

2023-08-23  rocky <rb@dustyfeet.com>

	* .readthedocs.yaml: Add required .readthedocs.yaml

2023-07-16  rocky <rb@dustyfeet.com>

	* mathics_scanner/prescanner.py, mathics_scanner/tokeniser.py: Misc
	lint stuff

2023-03-26  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #57 from Mathics3/code-modernization Administrivia:

2023-03-19  rocky <rb@dustyfeet.com>

	* .github/workflows/osx.yml, setup.py: Remove 3.6 support...  3.6 re doesn't have a "Match" and we use this in our type annotation

2023-03-19  rocky <rb@dustyfeet.com>

	* mathics_scanner/tokeniser.py: More type annotations and
	modernization Go over docstrings and order functions

2023-03-19  rocky <rb@dustyfeet.com>

	* .pre-commit-config.yaml,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/errors.py, mathics_scanner/feed.py,
	mathics_scanner/tokeniser.py: Administrivia: * add isort hook and use it * run codespell over code * start adding more annotation types

2023-02-25  rocky <rb@dustyfeet.com>

	* Makefile, admin-tools/pyenv-versions: Admnistrivia: * Bump local testing versions * adjust the way we call pytest

2023-02-25  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #55 from Mathics3/release-1.3.0 Release 1.3.0

2023-02-25  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/feed.py, mathics_scanner/generate/build_tables.py,
	mathics_scanner/generate/rl_inputrc.py,
	mathics_scanner/tokeniser.py: Correct spelling mistakes

2023-02-25  rocky <rb@dustyfeet.com>

	* CHANGES.rst, mathics_scanner/data/named-characters.yml,
	mathics_scanner/version.py, setup.py: Get ready for release 1.3.0

2023-01-07  rocky <rb@dustyfeet.com>

	* .github/workflows/ubuntu.yml: Remove Ubuntu 3.6 testing

2023-01-07  rocky <rb@dustyfeet.com>

	* setup.py: List characters.json explicitly...  and do not rely on *.json. characters.json specifically needed.

2022-10-11  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #53 from Mathics3/ascii-op-to-unicode Revise to add ascii operator tables

2022-10-11  rocky <rb@dustyfeet.com>

	* mathics_scanner/generate/build_tables.py: Remove unused tables Based on recent mathics-core work, reduce the number of tables we
	output.  We keep in some of the code in case we need it in the future.

2022-10-09  rocky <rb@dustyfeet.com>

	* admin-tools/make-tables.sh,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py, test/test_ascii.py: Add
	prefix operators, revise tables named-characgters.yml: Add DifferentialD and Integrate even though
	we don't have a full set of prefix operators.  Add "ascii" entry for DifferentialD Add admin-tools script to build all tables.

2022-10-02  rocky <rb@dustyfeet.com>

	* setup.py: For building JSON tables when running setup

2022-10-01  rocky <rb@dustyfeet.com>

	* mathics_scanner/tokeniser.py, mathics_scanner/version.py: Bump
	minior version for mathics-scanner

2022-10-01  rocky <rb@dustyfeet.com>

	* mathics_scanner/generate/build_tables.py: Revise to add ascii
	operator tables

2022-09-18  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #51 from Mathics3/amstext+WL-unicode-convert Amstext+wl unicode convert

2022-09-17  rocky <rb@dustyfeet.com>

	* mathics_scanner/characters.py,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py,
	test/test_general_yaml_sanity.py,
	test/test_has_unicode_inverse_sanity.py,
	test/test_table_consistency.py, test/test_unicode_equivalent.py: Go
	over character tables * Separate entries with a blank line * Remove "unicode-equivalent" when it is the same as "ascii" Because if this wl_to_unicode() needs to pick use "ascii" when
	"unicode-equivalent" there is no unicode-equivalent, but
	has-unicode-inverse is set.  * Add test that unicode-equivalent isn't the same things as ascii

2022-09-17  rocky <rb@dustyfeet.com>

	* mathics_scanner/characters.py,
	mathics_scanner/generate/build_tables.py,
	mathics_scanner/tokeniser.py, test/test_tokeniser.py,
	test/test_translation_regressions.py: add wl-to-amslatex conversion
	table...  revise Differential symbol; allow two versions: \u1d451 | \uf74c

2022-09-05  rocky <rb@dustyfeet.com>

	* .pre-commit-config.yaml, Makefile, setup.py: More administrivia Go over precommit configuration Remove anachronistic python3 ->
	python Note 3.10 category in packaging

2022-09-04  rocky <rb@dustyfeet.com>

	* mathics_scanner/prescanner.py: code -> input_line; remove
	mpypy/flake8 warnings

2022-09-04  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #50 from Mathics3/comment-prescanner Comment and (type) annotate "prescanning" module.

2022-09-04  rocky <rb@dustyfeet.com>

	* mathics_scanner/prescanner.py, test/test_prescanner.py: One more
	round of tidying...  and being more clear about the meanings of variables

2022-09-04  rocky <rb@dustyfeet.com>

	* mathics_scanner/prescanner.py, mathics_scanner/tokeniser.py,
	test/test_prescanner.py: scan() -> replace_escape_sequences() ...  Convert a unit test to pytest. In the year 2022, unit tests like
	this are deprecated - pytest wins.

2022-09-04  rocky <rb@dustyfeet.com>

	* mathics_scanner/prescanner.py, test/test_prescanner.py: Comment
	and (type) annotate "prescanning" module.  Reduce the use of "self" variables as for local temporary variables.
	Make private private functions.

2022-09-04  rocky <rb@dustyfeet.com>

	* CHANGES.rst: Administrivia

2022-09-04  Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

	* mathics_scanner/prescanner.py, test/test_prescanner.py: support
	for 32 bits unicode characters (#48)

2022-09-04  Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

	* mathics_scanner/prescanner.py, test/test_prescanner.py: improves
	how \ is handled in the prescanner (#49) * improves how \ is handled in the prescanner * fixup: Format Python code with Black * add a comment. simplifying the logic.  * comment rewording by Rocky * adding length tests Co-authored-by: autoblack <rocky@users.noreply.github.com>

2022-08-30  Juan Mauricio Matera <matera@fisica.unlp.edu.ar>

	* mathics_scanner/data/named-characters.yml: fix Tilde and RawTilde
	(#45) \[Tilde] is a character associated to the unicode \u223c instead of
	~ \[Tilde] is an operator which is not Infix but Tilde, with
	precedence 290.  \[Tilde] has a wl-unicode-name TILDE OPERATOR ~ is
	not a valid ASCII representation for this operator (otherwise, the
	conversion get broken) \[RawTilde] is the (ASCII) character ~, and
	it is associated to Infix, and is associated to the wl-unicode
	character ~ and wl-unicode-name TILDE

2022-06-19  rocky <rb@dustyfeet.com>

	* .github/workflows/autoblack.yml, .pre-commit-config.yaml: update
	black to 22.3.0

2022-03-20  Tiago Cavalcante Trindade <tiagotrindade111@gmail.com>

	* : Merge pull request #41 from Mathics3/add-more-precedence Add precedence to the operators ==, != and //

2022-03-19  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #40 from Mathics3/transpose-and-conjugate Corrections/additions to Transpose and Conjugate

2022-03-19  rocky <rb@dustyfeet.com>

	* .github/workflows/mathics.yml: The git protocol no longer
	supported in workflows

2022-03-18  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/tokeniser.py: Corrections/additions to Transpose and
	Conjugate * tokeniser.py: include unicode value in addition to WL custom value * named-characters.yml: note Transpose, Conjugate, and
	  ConjugateTranspose are operators In the future though we want to break out *what* kind of operator,
	e.g postfix, prefix, infix

2022-02-21  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #39 from Mathics3/code-of-conduct Create CODE_OF_CONDUCT.md

2021-12-11  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #38 from
	Mathics3/revert-37-add-more-precedence Revert "Add precedence to all operators"

2021-12-05  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #37 from Mathics3/add-more-precedence Add precedence to all operators

2021-11-28  Tiago Cavalcante Trindade <tiagotrindade111@gmail.com>

	* : Merge pull request #36 from Mathics3/accept-function-symbol Accept \u21A6 as symbol for Function.

2021-11-20  Tiago Cavalcante Trindade <tiagotrindade111@gmail.com>

	* : Merge pull request #35 from Mathics3/change-letter-like Change more symbols to letter-like

2021-09-28  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: Clarification of
	precedence.  * Make more explicit the two aspects of precedence, especially the
	  one for in ASCII symbols.  * Describe what "higher" precedence means * Give some indication for |-> why its precedence is what it is, in
	  case it needs to change * Keep YAML fields sorted

2021-09-27  Tiago Cavalcante Trindade <tiagotrindade111@gmail.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/tokeniser.py: Change the precedence of `|->`
	(`Function` symbol) to 800 so it isn't interpreted as a `|` followed
	by `->`

2021-09-27  rocky <rb@dustyfeet.com>

	* mathics_scanner/tokeniser.py: typo in assert message

2021-09-27  rocky <rb@dustyfeet.com>

	* mathics_scanner/tokeniser.py: Accept \u21A6 as symbol for
	Function.

2021-09-26  Tiago Cavalcante Trindade <tiagotrindade111@gmail.com>

	* mathics_scanner/data/named-characters.yml: Change more symbols to
	letter-like

2021-09-11  rocky <rb@dustyfeet.com>

	* .github/workflows/mathics.yml: Move mathics-core testing to
	Mathics3 In workflow actions, adjust to test from Mathics3/mathics-core

2021-09-04  rocky <rb@dustyfeet.com>

	* .github/workflows/mathics.yml, test/test_tokeniser.py: Revise
	test_integral for DifferentialD

2021-09-04  rocky <rb@dustyfeet.com>

	* .github/workflows/mathics.yml, mathics_scanner/tokeniser.py: In
	CI, use custom  Mathics branch This is somewhat temporary

2021-09-04  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py,
	test/test_letterlikes_sanity.py: More letter-like work

2021-09-04  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py: ScriptN yet again

2021-09-04  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py: Use unicode-equivalent
	over wl-unicode

2021-09-04  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: Correct a number of is-letter-like
	entries About 300 more still need to be fixed.

2021-09-02  rocky <rb@dustyfeet.com>

	* : commit 66d584d917f18ca05df78b0fb929859b6bcb5999 Author: rocky
	<rb@dustyfeet.com> Date:   Thu Sep 2 14:07:58 2021 -0400

2021-09-02  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: Correct Unicode for
	ScriptCaptialN

2021-07-31  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #34 from susnux/master Fix shbang of rl_inputrc.py

2021-07-10  rocky <rb@dustyfeet.com>

	* README.rst, mathics_scanner/version.py: Bump to dev version

2021-07-10  rocky <rb@dustyfeet.com>

	* : commit d11abae2a1f3aede3eb2b4751f744d9741f78087 Author: rocky
	<rb@dustyfeet.com> Date:   Sat Jul 10 19:09:58 2021 -0400

2021-07-10  rocky <rb@dustyfeet.com>

	* CHANGES.rst, admin-tools/pyenv-versions,
	mathics_scanner/version.py: Get ready for release 1.2.4

2021-07-10  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #33 from Mathics3/add-amstex-symbols Add more AMSLaTeX symbols

2021-07-10  rocky <rb@dustyfeet.com>

	* : commit 9e81430f2c3720da1cc7eb2ad7016b1ffeac41c1 Author: rocky
	<rb@dustyfeet.com> Date:   Sat Jul 10 18:27:37 2021 -0400

2021-07-10  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #31 from susnux/master Update setup.py: Use SPDX identifier for license

2021-06-29  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py, test/test_table_consistency.py:
	Appease current checker...  The checker may change in the future.

2021-06-29  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: We now have one more source

2021-06-29  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py: Add ApplyTo and reqularize
	unicode-equivalent Also adjust Tilde

2021-06-28  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: Tweak Factorial and...  note what's up with unicode-equivalent.

2021-06-28  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #30 from
	TiagoCavalcanteTrindade/add-factorial2-to-named-characters Add 'Factorial2' to named-characters.yml

2021-06-27  rocky <rb@dustyfeet.com>

	* .pre-commit-config.yaml: Administrivia: pre-config configuration

2021-06-27  rocky <rb@dustyfeet.com>

	* .pre-commit-config.yaml, mathics_scanner/version.py: Black files

2021-06-27  rocky <rb@dustyfeet.com>

	* CHANGES.rst, MANIFEST.in, mathics_scanner/version.py, setup.py:
	Get ready for release 1.2.3

2021-06-26  rocky <rb@dustyfeet.com>

	* mathics_scanner/version.py, requirements-full.txt: Bump to dev
	version

2021-06-26  rocky <rb@dustyfeet.com>

	* .github/workflows/osx.yml, .github/workflows/ubuntu.yml,
	.github/workflows/windows.yml, CHANGES.rst,
	mathics_scanner/data/characters.json, mathics_scanner/version.py,
	requirements-extra.txt, setup.py: Get ready for release 1.2.2

2021-06-26  rocky <rb@dustyfeet.com>

	* mathics_scanner/version.py, setup.py: Bump to dev version

2021-06-26  rocky <rb@dustyfeet.com>

	* CHANGES.rst, README.rst, mathics_scanner/data/characters.json,
	mathics_scanner/version.py, setup.py: Get ready for release 1.2.1

2021-06-26  rocky <rb@dustyfeet.com>

	* mathics_scanner/characters.py,
	mathics_scanner/data/characters.json,
	mathics_scanner/generate/build_tables.py,
	mathics_scanner/version.py: Add operator-to-precedence table version.py: make sure black doesn't reformat characters.py: tolerate
	an empty characters.json for now.

2021-06-25  rocky <rb@dustyfeet.com>

	* : commit 5ab7b8eb2efe37786bcc9d53a7b42584da5facce Author: rocky
	<rb@dustyfeet.com> Date:   Wed Jun 23 12:08:09 2021 -0400

2021-06-23  rocky <rb@dustyfeet.com>

	* setup.cfg: Clean up setup.cfg

2021-06-23  rocky <rb@dustyfeet.com>

	* .pre-commit-config.yaml: Ignore json reformatting

2021-06-23  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #28 from Mathics3/add-precedence More operators

2021-06-22  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #27 from Mathics3/flake8 Make flake8 clean

2021-06-22  rocky <rb@dustyfeet.com>

	* docs/source/conf.py, mathics_scanner/__init__.py,
	mathics_scanner/prescanner.py, setup.cfg, setup.py,
	test/test_table_consistency.py: Make flake8 clean

2021-06-22  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #26 from Mathics3/type-annotations Add some type annotations and format strings

2021-06-22  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #25 from Mathics3/revise-tests Go over unit tests

2021-06-22  rocky <rb@dustyfeet.com>

	* .github/workflows/mathics.yml, .github/workflows/{osx.yaml =>
	osx.yml}, .github/workflows/{ubuntu.yaml => ubuntu.yml}: Add
	Mathics3 full test

2021-06-21  rocky <rb@dustyfeet.com>

	* .github/workflows/autoblack.yml: automatically run black on PRs

2021-06-21  rocky <rb@dustyfeet.com>

	* Makefile: Add makefile target to run Mathics core tests

2021-06-21  rocky <rb@dustyfeet.com>

	* docs/source/conf.py, mathics_scanner/__init__.py,
	mathics_scanner/characters.py,
	mathics_scanner/generate/build_tables.py,
	mathics_scanner/generate/rl_inputrc.py, mathics_scanner/load.py,
	mathics_scanner/tokeniser.py, mathics_scanner/version.py, setup.py,
	test/test_has_unicode_inverse_sanity.py,
	test/test_letterlikes_sanity.py, test/test_table_consistency.py,
	test/test_translation_regressions.py, test/test_wl_to_ascii.py:
	Blacken files

2021-06-21  rocky <rb@dustyfeet.com>

	* .editorconfig, .pre-commit-config.yaml: Add editor style and
	pre-commit hook

2021-06-15  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: Start adding operator precedence

2021-06-15  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: Add amslatex sanity test

2021-06-11  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #19 from Mathics3/add-amstex-symbols Start adding AMSLaTeX symbols

2021-06-10  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: Start adding AMSLaTeX symbols

2021-06-01  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py: Correct standard unicode
	for Implies

2021-05-29  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #18 from Mathics3/optional-ujson Optional ujson

2021-05-21  rocky <rb@dustyfeet.com>

	* .github/workflows/osx.yaml, .github/workflows/ubuntu.yaml,
	.github/workflows/windows.yml, mathics_scanner/characters.py,
	mathics_scanner/version.py, requirements-dev.txt, setup.py:
	Administrivia & make ujson optional * It's not clear that pyston-2.2 support ujson so make it optional * In github workflows use requirements-dev.txt * revise requirement-dev to remove click (in setup.py) and add ujson * setup.py make ujson optional * version.py: bump to dev

2021-05-14  rocky <rb@dustyfeet.com>

	* CHANGES.rst, admin-tools/pyenv-versions,
	mathics_scanner/version.py, setup.cfg: Get ready for release 1.2.0

2021-05-13  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: More Degree commane
	verbiage...  Mention ambiuity in Degree where 186 can appear, while 176 is the
	correct unicode and wl value.

2021-05-13  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #17 from Mathics3/tables-for-pygments Tables for pygments

2021-05-13  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: Fix sanity test. Add ESC for
	AliasDelimiter

2021-05-13  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: The last of the unicode
	operator fixes

2021-05-13  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: Clarify Degree
	letterlike-ness.

2021-05-12  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: Finish most of the
	Unicode operators

2021-05-12  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: Clarify letter-like and
	Degree

2021-05-12  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: Degree weirdness.  Is it really letterlike?

2021-05-11  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: Not weirdness with
	Degree

2021-05-10  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: Add more operators. Go over sanity
	tests.

2021-05-08  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py, requirements-dev.txt: Add
	code to generate operators

2021-05-08  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/.gitignore,
	mathics_scanner/generate/build_tables.py: Start table for
	mathics-pygments...  And add a few operators

2021-05-11  rocky <rb@dustyfeet.com>

	* : commit c27649d919c5f38d398f4c0ca639119df1082e59 Author: rocky
	<rb@dustyfeet.com> Date:   Tue May 11 08:37:23 2021 -0400

2021-05-06  R. Bernstein <rocky@users.noreply.github.com>

	* mathics_scanner/data/named-characters.yml: Update
	named-characters.yml

2021-04-08  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/version.py: Leave out unicode for Number Sign Fixes https://github.com/Mathics3/mathicsscript/issues/27

2021-04-04  rocky <rb@dustyfeet.com>

	* CHANGES.rst, mathics_scanner/data/named-characters.yml,
	mathics_scanner/version.py: Get ready for release 1.1.2

2021-04-04  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/version.py: Bit by interaction in Function name and
	Unicode...  If an operator name like "Function" has unicode associated with it,
	then the YAML key *has* to be the operator name.  This is because we are doing weird Function-name to unicode
	translation in *input* If there is an ASCII version of it like "&" for the function, then
	the YAML name doesn't have to match (since there is no auto unicode
	translation going on).

2021-04-04  rocky <rb@dustyfeet.com>

	* test/test_tokeniser.py: Modernize test_tokens before we expand it.

2021-04-04  rocky <rb@dustyfeet.com>

	* CHANGES.rst, admin-tools/check-versions.sh,
	admin-tools/make-dist.sh, admin-tools/pyenv-versions,
	mathics_scanner/version.py: Get ready for release 1.1.1

2021-04-04  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: Finished adding all WL operators! (I think/hope.)

2021-04-04  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: More operators Have to adjust expectations since there can be more than one ascii
	sequence ofr an operator, e.g. Function Ascii Operators don't need to have unicode equivalents

2021-04-03  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/tokeniser.py: Start RightComposition...  /* - still need to complete tokenizer and parser, and operator parts

2021-04-03  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_table_consistency.py: More operators

2021-04-03  rocky <rb@dustyfeet.com>

	* mathics_scanner/generate/rl_inputrc.py: Special-case hack
	inputrc-unicode and "\n"..  (The alias is nl). We will probably add more down the line and
	generalize this.  Also needed is a test.

2021-03-28  rocky <rb@dustyfeet.com>

	* mathics_scanner/version.py: Bump to dev version

2021-03-28  rocky <rb@dustyfeet.com>

	* CHANGES.rst, README.rst, admin-tools/pyenv-versions,
	mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py,
	mathics_scanner/version.py: Get ready for release 1.1.0

2021-03-28  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: Adding operator testing

2021-03-28  rb@dustyfeet.conf <rocky>

	* .gitignore, mathics_scanner/generate/rl_inputrc.py: Windows
	tolerance for missing unicode in rl_inputrc.py

2021-03-28  rb@dustyfeet.conf <rocky>

	* mathics_scanner/generate/rl_inputrc.py: rl_inputrc.py tweaks: * Show usage on invocation error * Don't try to create unicode if system isn't unicode aware.

2021-03-28  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #14 from Mathics3/add-operators Start tagging operators

2021-03-28  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml,
	mathics_scanner/generate/build_tables.py,
	test/test_general_yaml_sanity.py,
	test/test_has_unicode_inverse_sanity.py,
	test/test_table_consistency.py, test/test_wl_to_ascii.py: Add more
	whitespace codes and operators * whitespace codes: IndentingNewLine, RawReturn * "ascii" YAML field
	  for operators gives the ASCII equivalent for an operator.  note that
	  there might not be unicode equivalents for them, e.g.  "**" or "===" * blacken some Python code * adjust tests for new regime

2021-03-27  rocky <rb@dustyfeet.com>

	* .github/workflows/osx.yaml: CI name Typo

2021-03-27  rocky <rb@dustyfeet.com>

	* README.rst: Add more badges

2021-03-27  rocky <rb@dustyfeet.com>

	* : commit 8eab7fb86a2b55f97319b515f6787f4265e27c55 Author: rocky
	<rb@dustyfeet.com> Date:   Sat Mar 27 09:26:24 2021 -0400

2021-03-14  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #13 from Mathics3/fix-documentation Fix the documentation

2021-02-28  rocky <rb@dustyfeet.com>

	* .github/workflows/osx.yaml, Makefile,
	mathics_scanner/data/named-characters.yml, setup.py,
	test/test_general_yaml_sanity.py, test/test_table_consistency.py:
	Start tagging operators Note: use WL name when there is no conflict for name of symbol.  A number of other small corrections: - Mark some symbols which are invertable when they are. However   this should be redone and invertability should be detected   automatically.  - small correction in macos CI - AUTHORS.txt reduced to those who worked in this, rather than
	  Mathics in general - in tests prefer top-level tests when that is possible (i.e. test
	  is not parameterized) - use relative import as "test" can be ambiguous and lead to
	namespace problems

2021-02-27  rocky <rb@dustyfeet.com>

	* Makefile: Update Makefile .PHONY targets

2021-02-08  rocky <rb@dustyfeet.com>

	* Makefile: Small Makefile changes * doc apparently depends on the generated JSON.  * Use remake-style comment.

2021-02-08  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* docs/source/usage.rst: Minor changes to the docs

2021-02-08  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* docs/source/api.rst, mathics_scanner/__init__.py: Improved some
	sections of documentation

2021-02-08  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* Makefile, docs/Makefile, docs/make.bat, docs/source/api.rst,
	docs/source/conf.py, implementation.rst =>
	docs/source/implementation.rst, docs/source/index.rst,
	docs/source/usage.rst, mathics_scanner/__init__.py,
	mathics_scanner/characters.py,
	mathics_scanner/generate/rl_inputrc.py,
	mathics_scanner/tokeniser.py: Moved the documentation to a dedicated
	Sphinx directory

2021-02-08  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/characters.py, mathics_scanner/feed.py,
	mathics_scanner/tokeniser.py: Fixed parameter declarations

2021-02-08  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* implementation.rst, mathics_scanner/tokeniser.py: Included notes
	about the tokeniser in the documentation

2021-02-06  rocky <rb@dustyfeet.com>

	* AUTHORS.txt, CHANGES.rst, COPYING.txt, Makefile, README.rst,
	admin-tools/make-dist.sh, mathics_scanner/characters.py,
	mathics_scanner/prescanner.py, mathics_scanner/tokeniser.py,
	mathics_scanner/version.py: Get ready for release 1.0.0

2021-02-06  rocky <rb@dustyfeet.com>

	* mathics_scanner/errors.py, mathics_scanner/feed.py: Small changes blacken buffers, go over docstrings

2021-02-06  rocky <rb@dustyfeet.com>

	* : commit 83f430ff040da7fcc2aaf9b177a45029a99665eb Merge: 656a7cc
	707e165 Author: R. Bernstein <rocky@users.noreply.github.com> Date:
	Sat Feb 6 05:11:34 2021 -0500

2021-02-06  rocky <rb@dustyfeet.com>

	* : commit 656a7ccc46f43a7126f95130681c24702288c2f8 Merge: 295fe97
	dbae4b3 Author: R. Bernstein <rocky@users.noreply.github.com> Date:
	Sat Feb 6 05:01:33 2021 -0500

2021-02-06  rocky <rb@dustyfeet.com>

	* mathics_scanner/generate/build_tables.py, test/{test_roundtrip.py
	=> test_table_consistency.py}: Update docstring; add some table
	consistency tests

2021-02-01  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_general_yaml_sanity.py,
	test/test_has_unicode_inverse_sanity.py,
	test/test_letterlikes_sanity.py, test/test_roundtrip.py,
	test/test_wl_to_ascii.py: Fixed import issues

2021-02-01  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_general_yaml_sanity.py,
	test/test_has_unicode_inverse_sanity.py,
	test/test_letterlikes_sanity.py, test/test_roundtrip.py,
	test/test_wl_to_ascii.py, test/util.py: Extracted the code that
	loads the data from disk to a separate module

2021-01-31  Gark Garcia <37553739+GarkGarcia@users.noreply.github.com>

	* implementation.rst, test/test_translation_regressions.py: Fixed
	minor errors in the internal documentation on
	`mathics_scanner.characters`

2021-02-01  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_translation_regressions.py: Added checks for decisions
	about the translation that are documented in YAML table

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* README.rst, implementation.rst, mathics_scanner/characters.py:
	Added an awful lot of documentation

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/generate/rl_inputrc.py: Fix errors in the inputrc
	generation routines I removed the part of the code that printed header comments because
	it's better for users in general to have control over that (they can
	write their own header if they want to)

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: Fixed the general sanity tests and
	errors in YAML

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_general_yaml_sanity.py: Fixed syntax error

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* .github/workflows/osx.yaml, .github/workflows/ubuntu.yaml,
	mathics_scanner/data/named-characters.yml,
	test/test_general_yaml_sanity.py: Fixed errors in the YAML table Fixed the general sanity tests

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* .github/workflows/osx.yaml, .github/workflows/ubuntu.yaml: Updated
	the workflows

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/named-characters.yml, test/test_roundtrip.py:
	Fixed another errors in the YAML table

2021-02-02  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/tokeniser.py: Marked adtional methods of Tokenise
	as private This methods are only useful internally and are not used by core
	anywhere

2021-02-02  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/feed.py: Documented the feeders

2021-02-02  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/errors.py: Fixed typo

2021-02-01  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/tokeniser.py: Fixed typos

2021-02-01  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/errors.py, mathics_scanner/tokeniser.py:
	Documented stuff used by Mathics

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* : commit 8fb9905826e052d12e649e1bfdc9cee615941ccf Author: Pablo
	Emilio Escobar Gaviria <pablo-escobar@riseup.net> Date:   Sun Jan 31
	17:54:18 2021 +0000

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/named-characters.yml: Fixed error in the YAML
	table

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_general_yaml_sanity.py: Fixed typos

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_general_yaml_sanity.py, test/test_letterlikes_sanity.py:
	Improved the general tests for YAML

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_letterlikes_sanity.py: Fixed the sanity tests for
	letter-like characters

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_general_yaml_sanity.py: Added general sanity tests for
	the YAML table

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_letterlikes_sanity.py: Added sanity checks for
	letter-like character

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_wl_to_ascii.py: Fixed typo

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_wl_to_ascii.py: Added sanity checks for the WL-to-ASCII
	conversions

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_has_unicode_inverse_sanity.py, test/test_roundtrip.py:
	Fixed typos

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_has_unicode_inverse_sanity.py, test/test_roundtrip.py:
	Improved the sanity checks for has-unicode-inverse

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_has_unicode_inverse_sanity.py, test/test_roundtrip.py:
	Fixed and improved the roundtrip tests

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_has_unicode_inverse_sanity.py, test/test_roundtrip.py:
	Added sanity check for has-unicode-inverse and fixed the reound trip
	tests

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* test/test_roundtrip.py: Fixed the roundtrip test

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/characters.py,
	mathics_scanner/generate/build_tables.py: Added a comment explaining
	the optimization

2021-01-30  rocky <rb@dustyfeet.com>

	* .gitignore, Makefile, mathics_scanner/data/README.rst,
	mathics_scanner/generate/README.rst, mathics_scanner/{ =>
	generate}/build_tables.py, mathics_scanner/generate/rl_inputrc.py,
	setup.py, test/test_roundtrip.py: Misc tweaks: * Start a character table roundtrip test.  * Document what is in the various directories * Add code to generate GNU Readline inputrc's * Split off generate code into its own directory.

2021-01-30  rocky <rb@dustyfeet.com>

	* : Merge github.com:Mathics3/mathics-scanner

2021-01-30  Gark Garcia <37553739+GarkGarcia@users.noreply.github.com>

	* README.rst: Update README.rst

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/build_tables.py: Added some comments

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/build_tables.py: Added extra checks for duplicates

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/named-characters.yml: Fixed minor error

2021-01-31  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/named-characters.yml: Added mappings for
	invisible characters

2021-01-26  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #7 from kxxt/patch-1 Fix path separator.

2021-01-27  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/build_tables.py: Improved the algorithm that
	resolves the appropriate plain-text representation of a given
	character

2021-01-27  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/named-characters.yml: Minor enhancement in
	the translation tables

2021-01-27  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/named-characters.yml: Fixed some ESC
	sequences

2021-01-27  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/named-characters.yml: Minor enhancement in
	the translation tables

2021-01-26  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/named-characters.yml: Fixed #18

2021-01-24  rocky <rb@dustyfeet.com>

	* : commit d76c53f0c72868cfbb6db3061aae4986db0c3c0a Merge: c335c53
	ba518b3 Author: rocky <rb@dustyfeet.com> Date:   Sat Jan 23 18:24:20
	2021 -0500

2021-01-23  rocky <rb@dustyfeet.com>

	* mathics_scanner/__init__.py: More exports

2021-01-23  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #1 from Mathics3/character-selection-comments Start indicating why we chose what we chose.

2021-01-22  rocky <rb@dustyfeet.com>

	* .github/workflows/osx.yaml, .github/workflows/ubuntu.yaml,
	admin-tools/release.sh: Administrivia

2021-01-22  rocky <rb@dustyfeet.com>

	* setup.py: Administriva: compatible package name

2021-01-22  R. Bernstein <rocky@users.noreply.github.com>

	* : Merge pull request #6 from Mathics3/mathics-scanner-import Automatically handle characters.json

2021-01-22  rocky <rb@dustyfeet.com>

	* .github/workflows/compile-translation-tables.yml,
	.github/workflows/{osx.yml => osx.yaml},
	.github/workflows/{ubuntu.yml => ubuntu.yaml}: Administrivia -
	github workflows

2021-01-22  rocky <rb@dustyfeet.com>

	* Makefile: Correct the Makefile "clean" target

2021-01-20  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/characters.json: Compiled the JSON file
	locally

2021-01-20  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/named-characters.yml: Added missing unicode
	equivalents for characters of the form \[Raw...]

2021-01-20  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* .github/workflows/compile-translation-tables.yml: Cleaned the
	GitHub action code

2021-01-20  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* .github/workflows/compile-translation-tables.yml: Added additional
	pulling step to GitHub action

2021-01-20  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* .github/workflows/compile-translation-tables.yml: Log stuff to
	GitHub actions

2021-01-20  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* .github/workflows/compile-translation-tables.yml: Log stuff to
	GitHub actions

2021-01-20  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* .github/workflows/compile-translation-tables.yml: Fixed syntax
	error in GitHub action (again)

2021-01-20  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* .github/workflows/compile-translation-tables.yml: Fixed syntax
	error in GitHub action (again)

2021-01-20  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* .github/workflows/compile-translation-tables.yml: Fixed syntax
	error in GitHub action

2021-01-20  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* : Merge https://github.com/Mathics3/mathics-scanner

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/data/named-characters.yml: Fixed typo

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* README.rst: Added notes on the implementation of
	mathics_scanner.characters

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* : commit de8e51537ca84a27747fc8588d8d79235d91673d Author: Pablo
	Emilio Escobar Gaviria <pablo-escobar@riseup.net> Date:   Tue Jan 19
	22:34:50 2021 +1000

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* Makefile: Fixed the Makefile

2021-01-19  R. Bernstein <rocky@users.noreply.github.com>

	* README.rst: Update README.rst

2021-01-19  rocky <rb@dustyfeet.com>

	* : commit 8958e4d44443a3d257cfb213a258723ac5e47359 Author: rocky
	<rb@dustyfeet.com> Date:   Tue Jan 19 03:32:38 2021 -0500

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* Makefile: Added PyYAML back to Makefile

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* .github/workflows/compile-translation-tables.yml, .gitignore,
	Makefile, admin-tools/compile-translation-tables.py,
	mathics_scanner/data/characters.json, setup.py: Added a GitHub
	action to compile the translation tables for us at every commit to
	master

2021-01-19  Gark Garcia <37553739+GarkGarcia@users.noreply.github.com>

	* : Merge pull request #3 from Mathics3/named-characters-optimize Named characters optimization

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* setup.py: Tried to fix the installation script

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* Makefile, setup.py: Tried to fix CI

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* setup.py: Tried to fix the installation errors

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* setup.py: Fixed installation path

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* setup.py: Fixed the installation script

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* setup.py: Fixed re_from_keys

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* .gitignore, mathics_scanner/data/characters.json: Removed
	unnecessary file from the repo

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/characters.py,
	mathics_scanner/data/characters.json, setup.py: Transferred the
	installation code to setup.py

2021-01-19  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* mathics_scanner/__init__.py, mathics_scanner/characters.py,
	mathics_scanner/tokeniser.py: Copied some core from core to here This will allow us to avoid exporting
	mathics.core.characters.{letters,letterlikes}

2021-01-18  rocky <rb@dustyfeet.com>

	* mathics_scanner/data/named-characters.yml: Start indicating why we
	chose what we chose.

2021-01-18  rocky <rb@dustyfeet.com>

	* admin-tools/make-dist.sh, admin-tools/release.sh: packaging
	administrivia

2021-01-18  rocky <rb@dustyfeet.com>

	* Makefile, test/test_tokeniser.py: Blacken/modnerize test (a
	little)

2021-01-18  rocky <rb@dustyfeet.com>

	* README.rst, tmp/README.rst: Administrivia: Add CI status badge and remove tmp dir

2021-01-18  rocky <rb@dustyfeet.com>

	* setup.py: Administrivia: update dependencies

2021-01-18  rocky <rb@dustyfeet.com>

	* .github/workflows/osx.yml, .github/workflows/{basic.yml =>
	ubuntu.yml}, .gitignore, AUTHORS.txt, CHANGES.rst, FUTURE.rst,
	MANIFEST.in, Makefile, README.rst,
	admin-tools/time-mathmp-sympy-fns.py,
	examples/symbolic_logic/gries_schneider/GS1.m,
	examples/symbolic_logic/gries_schneider/GS2.m,
	examples/symbolic_logic/gries_schneider/GS3.m,
	examples/symbolic_logic/gries_schneider/test_gs.py,
	examples/test_driver.m, mathics/Makefile, mathics/__init__.py,
	mathics/algorithm/__init__.py, mathics/algorithm/clusters.py,
	mathics/algorithm/introselect.py,
	mathics/autoload/formats/Base64/Export.m,
	mathics/autoload/formats/Base64/Import.m,
	mathics/autoload/formats/CSV/Export.m,
	mathics/autoload/formats/CSV/Import.m,
	mathics/autoload/formats/Image/Export.m,
	mathics/autoload/formats/Image/Import.m,
	mathics/autoload/formats/JSON/Import.m,
	mathics/autoload/formats/PACKAGE/Import.m,
	mathics/autoload/formats/SVG/Export.m,
	mathics/autoload/formats/Text/Export.m,
	mathics/autoload/formats/Text/Import.m,
	mathics/autoload/formats/XML/Import.m, mathics/autoload/settings.m,
	mathics/benchmark.py, mathics/builtin/__init__.py,
	mathics/builtin/algebra.py, mathics/builtin/arithmetic.py,
	mathics/builtin/assignment.py, mathics/builtin/attributes.py,
	mathics/builtin/base.py, mathics/builtin/calculus.py,
	mathics/builtin/codetables.py, mathics/builtin/colors.py,
	mathics/builtin/combinatorial.py, mathics/builtin/comparison.py,
	mathics/builtin/compilation.py,
	mathics/builtin/compile/__init__.py,
	mathics/builtin/compile/base.py,
	mathics/builtin/compile/compile.py, mathics/builtin/compile/ir.py,
	mathics/builtin/compile/types.py, mathics/builtin/compile/utils.py,
	mathics/builtin/control.py, mathics/builtin/datentime.py,
	mathics/builtin/diffeqns.py, mathics/builtin/evaluation.py,
	mathics/builtin/exptrig.py, mathics/builtin/files.py,
	mathics/builtin/formatting.py, mathics/builtin/functional.py,
	mathics/builtin/graphics.py, mathics/builtin/graphics3d.py,
	mathics/builtin/image.py, mathics/builtin/importexport.py,
	mathics/builtin/inout.py, mathics/builtin/integer.py,
	mathics/builtin/iohooks.py, mathics/builtin/linalg.py,
	mathics/builtin/lists.py, mathics/builtin/logic.py,
	mathics/builtin/manipulate.py, mathics/builtin/numbertheory.py,
	mathics/builtin/numeric.py,
	mathics/builtin/numpy_utils/__init__.py,
	mathics/builtin/numpy_utils/with_numpy.py,
	mathics/builtin/numpy_utils/without_numpy.py,
	mathics/builtin/optimization.py, mathics/builtin/options.py,
	mathics/builtin/patterns.py, mathics/builtin/physchemdata.py,
	mathics/builtin/plot.py, mathics/builtin/pymimesniffer/__init__.py,
	mathics/builtin/pymimesniffer/magic.py,
	mathics/builtin/pymimesniffer/mimetypes.xml,
	mathics/builtin/pympler/__init__.py,
	mathics/builtin/pympler/asizeof.py, mathics/builtin/quantities.py,
	mathics/builtin/randomnumbers.py, mathics/builtin/recurrence.py,
	mathics/builtin/scoping.py, mathics/builtin/specialfunctions.py,
	mathics/builtin/strings.py, mathics/builtin/structure.py,
	mathics/builtin/system.py, mathics/builtin/tensors.py,
	mathics/builtin/xmlformat.py, mathics/core/__init__.py,
	mathics/core/characters.py, mathics/core/convert.py,
	mathics/core/definitions.py, mathics/core/evaluation.py,
	mathics/core/expression.py, mathics/core/numbers.py,
	mathics/core/parser/README.md, mathics/core/parser/__init__.py,
	mathics/core/parser/ast.py, mathics/core/parser/convert.py,
	mathics/core/parser/operators.py, mathics/core/parser/parser.py,
	mathics/core/parser/util.py, mathics/core/pattern.py,
	mathics/core/rules.py, mathics/core/util.py,
	mathics/data/ExampleData/BloodToilTearsSweat.txt,
	mathics/data/ExampleData/EinsteinSzilLetter.txt,
	mathics/data/ExampleData/ExampleData.txt,
	mathics/data/ExampleData/InventionNo1.xml,
	mathics/data/ExampleData/Middlemarch.txt,
	mathics/data/ExampleData/Namespaces.xml,
	mathics/data/ExampleData/Testosterone.svg,
	mathics/data/ExampleData/benzene.xyz,
	mathics/data/ExampleData/colors.json,
	mathics/data/ExampleData/copyright.csv,
	mathics/data/ExampleData/numberdata.csv, mathics/doc/Makefile,
	mathics/doc/__init__.py, mathics/doc/doc.py,
	mathics/doc/documentation/1-Manual.mdoc,
	mathics/doc/documentation/A-License.mdoc,
	mathics/doc/documentation/images/classes.eps,
	mathics/doc/images.sh, mathics/doc/images/logo-heptatom.svg,
	mathics/doc/images/logo-text-nodrop.svg,
	mathics/doc/images/logo-text.svg, mathics/doc/tex/Makefile,
	mathics/doc/tex/latexmkrc, mathics/doc/tex/logo.pdf,
	mathics/doc/tex/mathics.tex, mathics/doc/utils.py, mathics/main.py,
	mathics/packages/DiscreteMath/CombinatoricaV0.6.m,
	mathics/packages/DiscreteMath/CombinatoricaV0.9.m,
	mathics/packages/DiscreteMath/Kernel/init.m,
	mathics/packages/DiscreteMath/RSolve.m,
	mathics/packages/VectorAnalysis/Kernel/init.m,
	mathics/packages/VectorAnalysis/VectorAnalysis.m,
	mathics/profile_mathics.py, mathics/session.py,
	mathics/settings.py, mathics/test.py, mathics_scanner/__init__.py,
	mathics_scanner/characters.py, {mathics =>
	mathics_scanner}/data/element.csv, {mathics =>
	mathics_scanner}/data/element.txt, {mathics =>
	mathics_scanner}/data/named-characters.yml, {mathics/core/parser =>
	mathics_scanner}/errors.py, {mathics/core/parser =>
	mathics_scanner}/feed.py, {mathics/core/parser =>
	mathics_scanner}/prescanner.py, {mathics/core/parser =>
	mathics_scanner}/tokeniser.py, {mathics =>
	mathics_scanner}/version.py, script/dmathics,
	script/dmathicsscript, script/dmathicsserver, setup.py,
	test/__init__.py, test/helper.py, test/test_arithmetic.py,
	test/test_color.py, test/test_combinatorial.py,
	test/test_combinatorica.py, test/test_compile.py,
	test/test_control.py, test/test_convert.py, test/test_datentime.py,
	test/test_deletecases.py, test/test_evaluation.py,
	test/test_feed.py, test/test_file.py, test/test_hash.py,
	test/test_numpy_utils.py, test/test_parser/__init__.py,
	test/test_parser/test_convert.py, test/test_parser/test_feed.py,
	test/test_parser/test_parser.py,
	test/test_parser/test_prescanner.py, test/test_parser/test_util.py,
	test/test_prescanner.py, test/test_to_python.py, test/{test_parser
	=> }/test_tokeniser.py, travis.py: Split scanner and conversion
	tables from Mathics

2021-01-18  Pablo Emilio Escobar Gaviria <pablo-escobar@riseup.net>

	* Removed unnecessary comments (the old code was commented)
