"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from .duckyaierror import DuckyAiError
from typing import TYPE_CHECKING
from importlib import import_module
import builtins
import sys

if TYPE_CHECKING:
    from .apierror import APIError
    from .askindexop import AskIndexRequest1, AskIndexRequest1TypedDict
    from .askindexrequest import AskIndexRequest, AskIndexRequestTypedDict
    from .askindexresponse import AskIndexResponse, AskIndexResponseTypedDict
    from .askindexresponsesource import (
        AskIndexResponseSource,
        AskIndexResponseSourceTypedDict,
    )
    from .batchindextextrequest import (
        BatchIndexTextRequest,
        BatchIndexTextRequestTypedDict,
    )
    from .createindexrequest import CreateIndexRequest, CreateIndexRequestTypedDict
    from .createindexresponse import CreateIndexResponse, CreateIndexResponseTypedDict
    from .deletedocumentop import DeleteDocumentRequest, DeleteDocumentRequestTypedDict
    from .deleteindexop import DeleteIndexRequest, DeleteIndexRequestTypedDict
    from .document import Document, DocumentTypedDict
    from .documentindexedresponse import (
        DocumentIndexedResponse,
        DocumentIndexedResponseTypedDict,
    )
    from .documentretrievedresponse import (
        DocumentRetrievedResponse,
        DocumentRetrievedResponseTypedDict,
    )
    from .errorresponse import ErrorResponse, ErrorResponseData
    from .getdocumentop import GetDocumentRequest, GetDocumentRequestTypedDict
    from .getindexop import GetIndexRequest, GetIndexRequestTypedDict
    from .getindexresponse import GetIndexResponse, GetIndexResponseTypedDict
    from .index import Index, IndexTypedDict
    from .indexfile_request import (
        File,
        FileTypedDict,
        IndexFileRequest,
        IndexFileRequestTypedDict,
    )
    from .indexmultimodalrequest import (
        IndexMultimodalRequest,
        IndexMultimodalRequestTypedDict,
    )
    from .indexmultimodalrequestimage import (
        IndexMultimodalRequestImage,
        IndexMultimodalRequestImageTypedDict,
    )
    from .indextextrequest import IndexTextRequest, IndexTextRequestTypedDict
    from .listdocument import ListDocument, ListDocumentTypedDict
    from .listdocumentsop import ListDocumentsRequest, ListDocumentsRequestTypedDict
    from .listindexesresponse import ListIndexesResponse, ListIndexesResponseTypedDict
    from .listpaginateddocumentsresponse import (
        ListPaginatedDocumentsResponse,
        ListPaginatedDocumentsResponseTypedDict,
    )
    from .no_response_error import NoResponseError
    from .responsevalidationerror import ResponseValidationError
    from .retrievedocumentsrequest import (
        RetrieveDocumentsRequest,
        RetrieveDocumentsRequestTypedDict,
    )
    from .retrievedocumentsresponse import (
        RetrieveDocumentsResponse,
        RetrieveDocumentsResponseTypedDict,
    )
    from .retrievesimilardocumentsrequest import (
        RetrieveSimilarDocumentsRequest,
        RetrieveSimilarDocumentsRequestTypedDict,
    )
    from .security import Security, SecurityTypedDict

__all__ = [
    "APIError",
    "AskIndexRequest",
    "AskIndexRequest1",
    "AskIndexRequest1TypedDict",
    "AskIndexRequestTypedDict",
    "AskIndexResponse",
    "AskIndexResponseSource",
    "AskIndexResponseSourceTypedDict",
    "AskIndexResponseTypedDict",
    "BatchIndexTextRequest",
    "BatchIndexTextRequestTypedDict",
    "CreateIndexRequest",
    "CreateIndexRequestTypedDict",
    "CreateIndexResponse",
    "CreateIndexResponseTypedDict",
    "DeleteDocumentRequest",
    "DeleteDocumentRequestTypedDict",
    "DeleteIndexRequest",
    "DeleteIndexRequestTypedDict",
    "Document",
    "DocumentIndexedResponse",
    "DocumentIndexedResponseTypedDict",
    "DocumentRetrievedResponse",
    "DocumentRetrievedResponseTypedDict",
    "DocumentTypedDict",
    "DuckyAiError",
    "ErrorResponse",
    "ErrorResponseData",
    "File",
    "FileTypedDict",
    "GetDocumentRequest",
    "GetDocumentRequestTypedDict",
    "GetIndexRequest",
    "GetIndexRequestTypedDict",
    "GetIndexResponse",
    "GetIndexResponseTypedDict",
    "Index",
    "IndexFileRequest",
    "IndexFileRequestTypedDict",
    "IndexMultimodalRequest",
    "IndexMultimodalRequestImage",
    "IndexMultimodalRequestImageTypedDict",
    "IndexMultimodalRequestTypedDict",
    "IndexTextRequest",
    "IndexTextRequestTypedDict",
    "IndexTypedDict",
    "ListDocument",
    "ListDocumentTypedDict",
    "ListDocumentsRequest",
    "ListDocumentsRequestTypedDict",
    "ListIndexesResponse",
    "ListIndexesResponseTypedDict",
    "ListPaginatedDocumentsResponse",
    "ListPaginatedDocumentsResponseTypedDict",
    "NoResponseError",
    "ResponseValidationError",
    "RetrieveDocumentsRequest",
    "RetrieveDocumentsRequestTypedDict",
    "RetrieveDocumentsResponse",
    "RetrieveDocumentsResponseTypedDict",
    "RetrieveSimilarDocumentsRequest",
    "RetrieveSimilarDocumentsRequestTypedDict",
    "Security",
    "SecurityTypedDict",
]

_dynamic_imports: dict[str, str] = {
    "APIError": ".apierror",
    "AskIndexRequest1": ".askindexop",
    "AskIndexRequest1TypedDict": ".askindexop",
    "AskIndexRequest": ".askindexrequest",
    "AskIndexRequestTypedDict": ".askindexrequest",
    "AskIndexResponse": ".askindexresponse",
    "AskIndexResponseTypedDict": ".askindexresponse",
    "AskIndexResponseSource": ".askindexresponsesource",
    "AskIndexResponseSourceTypedDict": ".askindexresponsesource",
    "BatchIndexTextRequest": ".batchindextextrequest",
    "BatchIndexTextRequestTypedDict": ".batchindextextrequest",
    "CreateIndexRequest": ".createindexrequest",
    "CreateIndexRequestTypedDict": ".createindexrequest",
    "CreateIndexResponse": ".createindexresponse",
    "CreateIndexResponseTypedDict": ".createindexresponse",
    "DeleteDocumentRequest": ".deletedocumentop",
    "DeleteDocumentRequestTypedDict": ".deletedocumentop",
    "DeleteIndexRequest": ".deleteindexop",
    "DeleteIndexRequestTypedDict": ".deleteindexop",
    "Document": ".document",
    "DocumentTypedDict": ".document",
    "DocumentIndexedResponse": ".documentindexedresponse",
    "DocumentIndexedResponseTypedDict": ".documentindexedresponse",
    "DocumentRetrievedResponse": ".documentretrievedresponse",
    "DocumentRetrievedResponseTypedDict": ".documentretrievedresponse",
    "ErrorResponse": ".errorresponse",
    "ErrorResponseData": ".errorresponse",
    "GetDocumentRequest": ".getdocumentop",
    "GetDocumentRequestTypedDict": ".getdocumentop",
    "GetIndexRequest": ".getindexop",
    "GetIndexRequestTypedDict": ".getindexop",
    "GetIndexResponse": ".getindexresponse",
    "GetIndexResponseTypedDict": ".getindexresponse",
    "Index": ".index",
    "IndexTypedDict": ".index",
    "File": ".indexfile_request",
    "FileTypedDict": ".indexfile_request",
    "IndexFileRequest": ".indexfile_request",
    "IndexFileRequestTypedDict": ".indexfile_request",
    "IndexMultimodalRequest": ".indexmultimodalrequest",
    "IndexMultimodalRequestTypedDict": ".indexmultimodalrequest",
    "IndexMultimodalRequestImage": ".indexmultimodalrequestimage",
    "IndexMultimodalRequestImageTypedDict": ".indexmultimodalrequestimage",
    "IndexTextRequest": ".indextextrequest",
    "IndexTextRequestTypedDict": ".indextextrequest",
    "ListDocument": ".listdocument",
    "ListDocumentTypedDict": ".listdocument",
    "ListDocumentsRequest": ".listdocumentsop",
    "ListDocumentsRequestTypedDict": ".listdocumentsop",
    "ListIndexesResponse": ".listindexesresponse",
    "ListIndexesResponseTypedDict": ".listindexesresponse",
    "ListPaginatedDocumentsResponse": ".listpaginateddocumentsresponse",
    "ListPaginatedDocumentsResponseTypedDict": ".listpaginateddocumentsresponse",
    "NoResponseError": ".no_response_error",
    "ResponseValidationError": ".responsevalidationerror",
    "RetrieveDocumentsRequest": ".retrievedocumentsrequest",
    "RetrieveDocumentsRequestTypedDict": ".retrievedocumentsrequest",
    "RetrieveDocumentsResponse": ".retrievedocumentsresponse",
    "RetrieveDocumentsResponseTypedDict": ".retrievedocumentsresponse",
    "RetrieveSimilarDocumentsRequest": ".retrievesimilardocumentsrequest",
    "RetrieveSimilarDocumentsRequestTypedDict": ".retrievesimilardocumentsrequest",
    "Security": ".security",
    "SecurityTypedDict": ".security",
}


def dynamic_import(modname, retries=3):
    for attempt in range(retries):
        try:
            return import_module(modname, __package__)
        except KeyError:
            # Clear any half-initialized module and retry
            sys.modules.pop(modname, None)
            if attempt == retries - 1:
                break
    raise KeyError(f"Failed to import module '{modname}' after {retries} attempts")


def __getattr__(attr_name: str) -> object:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(
            f"No {attr_name} found in _dynamic_imports for module name -> {__name__} "
        )

    try:
        module = dynamic_import(module_name)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(
            f"Failed to import {attr_name} from {module_name}: {e}"
        ) from e
    except AttributeError as e:
        raise AttributeError(
            f"Failed to get {attr_name} from {module_name}: {e}"
        ) from e


def __dir__():
    lazy_attrs = builtins.list(_dynamic_imports.keys())
    return builtins.sorted(lazy_attrs)
