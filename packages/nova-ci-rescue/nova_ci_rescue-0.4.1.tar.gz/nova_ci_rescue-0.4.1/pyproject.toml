requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nova-ci-rescue"
version = "0.4.1"
description = "Nova CI-Rescue: automated test fixing agent (MVP)"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "NovaSolve", email = "dev@novasolve.ai" }]
keywords = ["LLM", "LangGraph", "CI", "pytest", "agent", "automation"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
]

dependencies = [
    "langgraph>=0.2.0",
    "langchain>=0.2.0",
    "typer>=0.9.0",
    "pydantic>=2.5.0",
    "unidiff>=0.7.5",
    "httpx>=0.24.0",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
    "PyYAML>=6.0.0",
    "pytest>=7.0.0",
    "pytest-json-report>=1.5.0",
    "tomli>=2.0.0;python_version<'3.11'",
    "openai>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/novasolve/ci-auto-rescue"
Repository = "https://github.com/novasolve/ci-auto-rescue"
Issues = "https://github.com/novasolve/ci-auto-rescue/issues"

[project.scripts]
# Ensure you have: src/nova/cli.py with a Typer app named `app`
nova = "nova.cli:app"

[tool.setuptools]
# If you ship non-Python files referenced at runtime (e.g., templates),
# set this true and/or use MANIFEST.in if needed.
include-package-data = true
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
# If you want to exclude tests from the wheel:
# exclude = ["tests*", "test*"]

# Optional: pytest config lives here so `pytest` works consistently.
# Delete if you keep a separate pytest.ini/pyproject section elsewhere.
[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
