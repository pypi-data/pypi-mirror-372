# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/qgear',
                'doc_host': 'https://gzquse.github.io',
                'git_url': 'https://github.com/gzquse/qgear',
                'lib_path': 'qgear'},
  'syms': { 'qgear.cli': {'qgear.cli.welcome': ('cli.html#welcome', 'qgear/cli.py')},
            'qgear.core': { 'qgear.core.generate_random_gateList': ('core.html#generate_random_gatelist', 'qgear/core.py'),
                            'qgear.core.get_gpu_info': ('core.html#get_gpu_info', 'qgear/core.py'),
                            'qgear.core.random_qubit_pairs': ('core.html#random_qubit_pairs', 'qgear/core.py'),
                            'qgear.core.save_gateList': ('core.html#save_gatelist', 'qgear/core.py'),
                            'qgear.core.show_CX_block': ('core.html#show_cx_block', 'qgear/core.py')},
            'qgear.datacircuits.frqi': {},
            'qgear.datacircuits.neqr': {},
            'qgear.datacircuits.qcrank': {},
            'qgear.image': { 'qgear.image.build_meta_canned_image': ('image.html#build_meta_canned_image', 'qgear/image.py'),
                             'qgear.image.create_img': ('image.html#create_img', 'qgear/image.py'),
                             'qgear.image.ehands_input_to_qcrank_input': ('image.html#ehands_input_to_qcrank_input', 'qgear/image.py'),
                             'qgear.image.import_image': ('image.html#import_image', 'qgear/image.py'),
                             'qgear.image.load_builtin_image': ('image.html#load_builtin_image', 'qgear/image.py'),
                             'qgear.image.prep_image_qcrank_input': ('image.html#prep_image_qcrank_input', 'qgear/image.py')},
            'qgear.plotter': { 'qgear.plotter.MetricsPlotter': ('plotter.html#metricsplotter', 'qgear/plotter.py'),
                               'qgear.plotter.MetricsPlotter.__init__': ('plotter.html#metricsplotter.__init__', 'qgear/plotter.py'),
                               'qgear.plotter.MetricsPlotter.compute_time': ( 'plotter.html#metricsplotter.compute_time',
                                                                              'qgear/plotter.py'),
                               'qgear.plotter.extract_date_from_path': ('plotter.html#extract_date_from_path', 'qgear/plotter.py'),
                               'qgear.plotter.find_yaml_files': ('plotter.html#find_yaml_files', 'qgear/plotter.py'),
                               'qgear.plotter.metrics_plot': ('plotter.html#metrics_plot', 'qgear/plotter.py'),
                               'qgear.plotter.postproc_qcrank': ('plotter.html#postproc_qcrank', 'qgear/plotter.py'),
                               'qgear.plotter.process_qcrank_experiment': ('plotter.html#process_qcrank_experiment', 'qgear/plotter.py'),
                               'qgear.plotter.readOne': ('plotter.html#readone', 'qgear/plotter.py'),
                               'qgear.plotter.residual_analysis': ('plotter.html#residual_analysis', 'qgear/plotter.py'),
                               'qgear.plotter.restore_canned_image': ('plotter.html#restore_canned_image', 'qgear/plotter.py'),
                               'qgear.plotter.sort_end_lists': ('plotter.html#sort_end_lists', 'qgear/plotter.py')},
            'qgear.runner': { 'qgear.runner.canned_qcrank_inp': ('runner.html#canned_qcrank_inp', 'qgear/runner.py'),
                              'qgear.runner.expect_cudaq': ('runner.html#expect_cudaq', 'qgear/runner.py'),
                              'qgear.runner.generate_random_run': ('runner.html#generate_random_run', 'qgear/runner.py'),
                              'qgear.runner.harvest_cudaq_backRun_submitMeta': ( 'runner.html#harvest_cudaq_backrun_submitmeta',
                                                                                 'qgear/runner.py'),
                              'qgear.runner.input_shard': ('runner.html#input_shard', 'qgear/runner.py'),
                              'qgear.runner.make_qcrank': ('runner.html#make_qcrank', 'qgear/runner.py'),
                              'qgear.runner.rank_print': ('runner.html#rank_print', 'qgear/runner.py'),
                              'qgear.runner.run_cudaq': ('runner.html#run_cudaq', 'qgear/runner.py'),
                              'qgear.runner.run_cudaqft': ('runner.html#run_cudaqft', 'qgear/runner.py'),
                              'qgear.runner.run_gate_job': ('runner.html#run_gate_job', 'qgear/runner.py'),
                              'qgear.runner.run_qcrank': ('runner.html#run_qcrank', 'qgear/runner.py'),
                              'qgear.runner.run_qiskit_aer': ('runner.html#run_qiskit_aer', 'qgear/runner.py')},
            'qgear.toolbox.PlotterBackbone': {},
            'qgear.toolbox.PlotterQCrank': {},
            'qgear.toolbox.Util_CudaQ': {},
            'qgear.toolbox.Util_H5io4': {},
            'qgear.toolbox.Util_IOfunc': {},
            'qgear.toolbox.Util_Qiskit': {},
            'qgear.toolbox.Util_ibm': {}}}
