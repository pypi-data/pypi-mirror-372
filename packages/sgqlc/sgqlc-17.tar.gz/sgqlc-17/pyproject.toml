[tool.black]
line-length = 79
skip-string-normalization = true
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', 'py313']
force-exclude = '/(doc/|examples/.*(schema|operations)[.]py)'

[tool.pytest.ini_options]
addopts = '--import-mode=importlib --doctest-modules --cov=sgqlc --cov-fail-under=100 --cov-report=term-missing --cov-report=xml --cov-report=html:cover'
asyncio_mode = 'auto'
asyncio_default_fixture_loop_scope = 'function'
python_files = ['test-*.py', 'test_*.py']
testpaths = [
    'sgqlc',
    'tests',
]
norecursedirs = [
    '.eggs',
    '.git',
    '.github',
    '.venv',
    '*.egg-info',
    'build',
    'cover',
    'dist',
    'doc',
    'examples',
    'utils',
]

[project]
name = 'sgqlc'
version = '17'
description = 'Simple GraphQL Client'
readme = 'README.rst'
authors = [
    { name = 'Gustavo Sverzut Barbieri', email = 'barbieri@profusion.mobi' },
]
license = 'ISCL'
keywords = ['graphql', 'client', 'http', 'endpoint']
classifiers=[
    'Development Status :: 4 - Beta',
    'Environment :: Console',
    'Environment :: Web Environment',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: ISC License (ISCL)',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Topic :: Utilities',
]
requires-python = '>=3.8,<4'
dependencies = [
    'graphql-core~=3.2.6'
]

[tool.poetry]
packages = [{ include = 'sgqlc' }]
include = [
    { path = 'AUTHORS', format = 'sdist' },
    { path = 'doc/source', format = 'sdist' },
    { path = 'tests', format = 'sdist' },
]

[project.urls]
Homepage = 'http://github.com/profusion/sgqlc'
Repository = 'http://github.com/profusion/sgqlc'
Documentation = 'https://sgqlc.readthedocs.io/'

[project.scripts]
sgqlc-codegen = 'sgqlc.codegen:main'

[project.optional-dependencies]
websocket = ['websocket-client']
requests = ['requests']
httpx = ['httpx']

[tool.poetry.group.dev.dependencies]
pytest = '*'
pytest-cov = '*'
pytest-asyncio = '*'
sphinx = '*'
sphinx-argparse = '*'
websocket-client = '*'
requests = '*'
httpx = '*'
respx = '*'

[tool.poetry.group.docs.dependencies]
sphinx = '*'
sphinx-argparse = '*'

[build-system]
requires = ['poetry-core']
build-backend = 'poetry.core.masonry.api'
