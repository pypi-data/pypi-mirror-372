version: v1

id_policy:
  kind: uuid
  field: id

defaults:
  vector:
    metric: cosine
    normalize: true
  timestamps:
    auto_create: true
    auto_update: true

entities:
  - name: memo # base entity - all other entities are derived from this
    description: "Base memory unit"
    fields:
      id:          { type: string, required: true, system: true } # uuid
      user_id:     { type: string, required: true, system: true } # any string
      statement:   { type: string, required: true, max_length: 8000 }
      created_at:  { type: datetime, required: true, system: true }
      updated_at:  { type: datetime, system: true }
      vector:      { type: vector, anchored_to: statement, system: true }
    relations:
      - name: memo_related
        description: "Generic relation between memos"
        directed: true
        predicates: [RELATED_TO]
        source: memo
        target: memo

  - name: note
    parent: memo
    description: "General note or observation to memorize"
    fields:
      project: { type: string }  # Optional project namespace for filtering
      origin: { type: enum, choices: [system, user], default: system } # source of the note - optional
    relations:
      - name: note_document
        description: "Note providing context to a document"
        directed: true
        predicates: [ANNOTATES]
        source: note
        target: document

  - name: document
    parent: memo
    description: "Document-like memo with extended content"
    fields:
      project: { type: string }  # Optional project namespace for filtering
      details: { type: string, required: true }
      url:     { type: string }  # Reference URL for external docs
    relations:
      - name: document_note
        description: "Document referenced by a note"
        directed: true
        predicates: [REFERENCED_BY]
        source: document
        target: note
      - name: task_document
        description: "Document providing details or requirements for a task"
        directed: true
        predicates: [SUPPORTS]
        source: document
        target: task

  - name: task
    parent: memo
    description: "Development task or work item"
    fields:
      project:     { type: string }  # Optional project namespace for filtering
      details:     { type: string }
      status:      { type: enum, choices: [backlog, todo, in_progress, in_review, done, cancelled], default: backlog }
      priority:    { type: enum, choices: [low, medium, high, critical], default: medium }
      due_date:    { type: datetime }
    relations:
      - name: task_note
        description: "Note associated with a task"
        directed: true
        predicates: [ANNOTATES]
        source: note
        target: task
      - name: task_blocks
        description: "Task blocking another task"
        directed: true
        predicates: [BLOCKS]
        source: task
        target: task

  - name: bug
    parent: memo
    description: "Bug report or issue"
    fields:
      project:      { type: string }  # Optional project namespace for filtering
      details:      { type: string, required: true }
      severity:     { type: enum, choices: [low, medium, high, critical], default: medium }
      status:       { type: enum, choices: [open, in_progress, resolved], default: open }
      file_path:    { type: string }  # File where bug occurs
      reference:    { type: string }  # main reference where bug occurs, such as function or class name
    relations:
      - name: bug_task
        description: "Task created to fix a bug"
        directed: true
        predicates: [ADDRESSES]
        source: task
        target: bug

  - name: solution
    parent: memo
    description: "Solution, fix, or implementation approach"
    fields:
      project:      { type: string }  # Optional project namespace for filtering
      details:      { type: string }
      file_path:    { type: string }  # File being modified
      test_status:  { type: enum, choices: [untested, manual_test, unit_test, integration_test], default: untested }
    relations:
      - name: solution_bug
        description: "Solution addressing a bug"
        directed: true
        predicates: [FIXES]
        source: solution
        target: bug
      - name: solution_task
        description: "Solution implementing a task"
        directed: true
        predicates: [IMPLEMENTS]
        source: solution
        target: task
