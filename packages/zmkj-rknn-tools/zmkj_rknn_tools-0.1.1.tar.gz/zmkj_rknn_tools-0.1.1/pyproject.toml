[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "zmkj-rknn-tools"
version = "0.1.1"
description = "瑞芯微端侧的辅助快速验证工具"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "壹世朱名", email = "nx740@qq.com"}
]
maintainers = [
    {name = "壹世朱名", email = "nx740@qq.com"}
]
keywords = ["rknn", "rockchip", "yolov8", "object detection", "edge computing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "opencv-python>=4.5.0",
    "pillow>=8.0.0",
    "tqdm>=4.60.0",
]

[project.optional-dependencies]
# 核心 RKNN 功能
rknn = [
    "rknn-toolkit2>=1.4.0",
    "rknn-toolkit-lite2>=1.4.0",
]

# YOLOv8 模型支持
yolo = [
    "zmkj-rknn-yolov8>=0.1.0",
    "ultralytics>=8.0.0",
]

# 可视化功能
viz = [
    "supervision>=0.15.0",
    "matplotlib>=3.5.0",
]

# 开发工具
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]

# 文档生成
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

# 示例数据文件（大文件）
examples-data = [
    "zmkj-rknn-examples-data>=0.1.0",
]

# 完整安装（包含所有功能）
all = [
    "zmkj-rknn-tools[rknn,yolo,viz]",
]

# 完整开发环境（包含示例数据）
full = [
    "zmkj-rknn-tools[all,dev,docs,examples-data]",
]

[project.urls]
Homepage = "https://github.com/xuntee/rknn-tools"
Repository = "https://github.com/xuntee/rknn-tools"
Documentation = "https://github.com/xuntee/rknn-tools#readme"
"Bug Tracker" = "https://github.com/xuntee/rknn-tools/issues"
Changelog = "https://github.com/xuntee/rknn-tools/blob/main/CHANGELOG.md"

[project.scripts]
rknn-convert = "zmkj_rknn_tools.cli:convert_main"
rknn-detect = "zmkj_rknn_tools.cli:detect_main"
rknn-verify = "zmkj_rknn_tools.cli:verify_main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["zmkj_rknn_tools"]

[tool.setuptools.package-data]
zmkj_rknn_tools = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["zmkj_rknn_tools"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["zmkj_rknn_tools"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]