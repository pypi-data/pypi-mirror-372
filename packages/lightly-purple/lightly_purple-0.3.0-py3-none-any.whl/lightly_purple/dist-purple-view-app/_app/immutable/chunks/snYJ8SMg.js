import{c as w}from"./BzArsHZA.js";import{c as _}from"./dEoPsUJ9.js";const y=new Map,S=(r,e,s)=>{const{dataset_id:o,offset:n,limit:i,annotationLabelIds:c,tagIds:d,min_width:l,max_width:m,min_height:p,max_height:h,metadataValues:a}=r;return JSON.stringify({dataset_id:o,offset:n,limit:i,annotationLabelIds:c,tagIds:d,min_width:l,max_width:m,min_height:p,max_height:h,metadataValues:a,textEmbedding:e,sampleIds:s})},O=async({dataset_id:r,offset:e=0,limit:s=10,annotationLabelIds:o,tagIds:n,min_width:i,max_width:c,min_height:d,max_height:l,textEmbedding:m=[],sampleIds:p=[],metadataValues:h={}})=>{const a={data:[],error:void 0},f=S({dataset_id:r,offset:e,limit:s,annotationLabelIds:o,tagIds:n,min_width:i,max_width:c,min_height:d,max_height:l,metadataValues:h},m,p),g=y.get(f);if(g)return g;const u=_(h);try{const t=await w.POST("/api/datasets/{dataset_id}/samples/list",{params:{path:{dataset_id:r}},body:{filters:{annotation_label_ids:o,tag_ids:n,width:{min:i,max:c},height:{min:d,max:l},metadata_filters:u},text_embedding:m,sample_ids:p,pagination:{offset:e,limit:s}}});if(t.error)throw new Error(JSON.stringify(t.error,null,2));if(!t.data)throw new Error("No data");a.data=t.data,y.set(f,a)}catch(t){a.error="Error loading samples: "+String(t)}return a};export{O as l};
