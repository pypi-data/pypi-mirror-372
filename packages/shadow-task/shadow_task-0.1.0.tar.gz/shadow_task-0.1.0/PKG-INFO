Metadata-Version: 2.4
Name: shadow-task
Version: 0.1.0
Summary: distributed background task system for python functions
Project-URL: Homepage, https://github.com/SRSWTI/shadows
Project-URL: Bug Tracker, https://github.com/SRSWTI/shadows/issues
Author-email: SRSWTI Research Labs <team@srswti.com>
License: MIT License
        
        Copyright (c) 2024 SRSWTI Research Labs
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE. 
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Typing :: Typed
Requires-Python: >=3.12
Requires-Dist: cloudpickle>=3.1.1
Requires-Dist: opentelemetry-api>=1.30.0
Requires-Dist: opentelemetry-exporter-prometheus>=0.51b0
Requires-Dist: prometheus-client>=0.21.1
Requires-Dist: python-json-logger>=3.2.1
Requires-Dist: redis>=4.6
Requires-Dist: rich>=13.9.4
Requires-Dist: typer>=0.15.1
Requires-Dist: uuid7>=0.1.0
Description-Content-Type: text/markdown

Shadow is a distributed background task system for Python functions with a focus
on the scheduling of future work as seamlessly and efficiently as immediate work.

[![PyPI - Version](https://img.shields.io/pypi/v/shadows)](https://pypi.org/project/shadows/)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/shadows)](https://pypi.org/project/shadows/)
[![GitHub main checks](https://img.shields.io/github/check-runs/SRSWTI/shadows/main)](https://github.com/SRSWTI/shadows/actions/workflows/ci.yml)
[![Codecov](https://img.shields.io/codecov/c/github/SRSWTI/shadows)](https://app.codecov.io/gh/SRSWTI/shadows)
[![PyPI - License](https://img.shields.io/pypi/l/shadows)](https://github.com/SRSWTI/shadows/blob/main/LICENSE)
[![Documentation](https://img.shields.io/badge/docs-latest-blue.svg)](https://SRSWTI.github.io/shadows/)

## At a glance

```python
from datetime import datetime, timedelta, timezone

from shadows import Shadow


async def greet(name: str, greeting="Hello") -> None:
    print(f"{greeting}, {name} at {datetime.now()}!")


async with Shadow() as shadows:
    await shadows.add(greet)("Jane")

    now = datetime.now(timezone.utc)
    soon = now + timedelta(seconds=3)
    await shadows.add(greet, when=soon)("John", greeting="Howdy")
```

```python
from shadows import Shadow, Worker

async with Shadow() as shadows:
    async with Worker(shadows) as worker:
        await worker.run_until_finished()
```

```
Hello, Jane at 2025-03-05 13:58:21.552644!
Howdy, John at 2025-03-05 13:58:24.550773!
```

Check out our docs for more [details](http://SRSWTI.github.io/shadows/),
[examples](https://SRSWTI.github.io/shadows/getting-started/), and the [API
reference](https://SRSWTI.github.io/shadows/api-reference/).

## Why `shadows`?

‚ö°Ô∏è Snappy one-way background task processing without any bloat

üìÖ Schedule immediate or future work seamlessly with the same interface

‚è≠Ô∏è Skip problematic tasks or parameters without redeploying

üåä Purpose-built for Redis streams

üß© Fully type-complete and type-aware for your background task functions

üíâ Dependency injection like FastAPI, Typer, and FastMCP for reusable resources

## Installing `shadows`

Shadow is [available on PyPI](https://pypi.org/project/shadows/) under the package name
`shadow-task`. It targets Python 3.12 or above.

With [`uv`](https://docs.astral.sh/uv/):

```bash
uv pip install shadows

or

uv add shadows
```

With `pip`:

```bash
pip install shadows
```

Shadow requires a [Redis](http://redis.io/) server with Streams support (which was
introduced in Redis 5.0.0). Shadow is tested with Redis 6 and 7.

# Hacking on `shadows`

We use [`uv`](https://docs.astral.sh/uv/) for project management, so getting set up
should be as simple as cloning the repo and running:

```bash
uv sync
```

The to run the test suite:

```bash
pytest
```

We aim to maintain 100% test coverage, which is required for all PRs to `shadows`. We
believe that `shadows` should stay small, simple, understandable, and reliable, and that
begins with testing all the dusty branches and corners. This will give us the
confidence to upgrade dependencies quickly and to adapt to new versions of Redis over
time.
