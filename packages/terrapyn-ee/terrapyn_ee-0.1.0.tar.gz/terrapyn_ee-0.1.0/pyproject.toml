[project]
name = "terrapyn-ee"
version = "0.1.0"
description = "Earth Engine module for terrapyn toolkit."
authors = [{name = "Colin Hill", email = "colinalastairhill@gmail.com"}]
readme = "README.md"
license = {file = "LICENSE.md"}
requires-python = ">=3.10"
classifiers = [
	"Development Status :: 5 - Production/Stable",
	"Intended Audience :: Developers",
	"License :: OSI Approved :: BSD License",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13",
]
dependencies = [
	"terrapyn>=0.3.0",
	"earthengine-api>=1.6.4",
	"geemap>=0.36.1",
]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build]
include = [
	"terrapyn/ee/**/*.py",
]

[tool.hatch.build.targets.wheel]
packages = ["terrapyn"]

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/docs",
]

[tool.hatch.version]
path = "pyproject.toml"

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple/"
publish-url = "https://upload.pypi.org/legacy/"
explicit = true

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[tool.ruff]
line-length = 120
target-version = "py312"
extend-exclude = [
    ".venv",
]

[tool.ruff.lint]
select = [
  "B",    # flake8-bugbear
  "E",    # pycodestyle errors
  "F",    # pyflakes
  "UP",   # pyupgrade
  "D",    # pydocstyle
  "I",    # isort
  "PD",   # pandas-vet
  "SIM",  # flake8-simplify
  "NPY",  # numpy-specific
]
ignore = [
	"D1",
	"D2",
	"D4",
	"TID",
    "D400", # Period at the end of the first line of a docstring
	"PD901", # generic variable name `df` for DataFrames
]

[tool.ruff.format]
indent-style = "tab"

[dependency-groups]
dev = [
    "hatch>=1.14.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "ruff>=0.12.10",
]

[tool.ruff.lint.pydocstyle]
convention = "google"
