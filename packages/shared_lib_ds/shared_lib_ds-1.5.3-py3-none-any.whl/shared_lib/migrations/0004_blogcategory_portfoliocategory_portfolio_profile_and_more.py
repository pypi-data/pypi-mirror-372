# Generated by Django 5.1.2 on 2024-10-19 22:15

import django.db.models.deletion
import markdownx.models
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shared_lib', '0003_calendar_event'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter', models.CharField(max_length=20, verbose_name='블로그 카테고리')),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter', models.CharField(max_length=20, verbose_name='포트폴리오 카테고리')),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20, verbose_name='제목')),
                ('subtitle', models.CharField(max_length=40, verbose_name='부제목')),
                ('description', models.TextField(blank=True, null=True, verbose_name='세부 설명')),
                ('image1', models.ImageField(help_text='각 이미지 비율이(3x5) 동일한 것이 보기 좋습니다.', null=True, upload_to='images/portfolio/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='images/portfolio/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='images/portfolio/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='images/portfolio/')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='images/portfolio/')),
                ('client', models.CharField(blank=True, max_length=20, verbose_name='Client')),
                ('reg_time', models.DateTimeField(auto_now_add=True)),
                ('url', models.URLField(blank=True, help_text='공란 가능', max_length=500, null=True, verbose_name='참고링크')),
                ('filter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='portfolio_category', to='shared_lib.portfoliocategory')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='default_profile.jpg', upload_to='profile_pics')),
                ('name', models.CharField(default='default', max_length=40, verbose_name='name')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='desc')),
                ('sns', models.URLField(blank=True, help_text='공란 가능', max_length=500, null=True, verbose_name='sns')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(allow_unicode=True, blank=True, unique=True)),
                ('thumbnail', models.ImageField(default='default_thumbnail.jpg', upload_to='thumbnails')),
                ('content', markdownx.models.MarkdownxField(verbose_name='Content {: .img-fluid} ')),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Publish')], default=0)),
                ('remarkable', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='blog_category', to='shared_lib.blogcategory')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_author', to='shared_lib.profile')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
    ]
