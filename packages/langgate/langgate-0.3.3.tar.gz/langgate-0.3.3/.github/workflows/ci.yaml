name: CI

on: push

env:
  PRE_COMMIT_COLOR: "always"

jobs:
  pre-commit-hooks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: ./.github/actions/setup-python

      - name: Setup Hadolint
        uses: ./.github/actions/setup-hadolint

      - name: Setup Shellcheck
        uses: ./.github/actions/setup-shellcheck

      - name: Mypy Static Type Check
        run: make mypy

      - name: Pre-commit Checks
        run: make pre-commit-run

  tests:
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: ./.github/actions/setup-python

      - name: Run Tests
        run: make test

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage_report

  test-charts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Helm
        id: setup-helm
        uses: azure/setup-helm@v4.3.0
        with:
          version: v3.17.0

      - name: Helm Lint
        run: |
          cd deployment/k8s && make helm-lint

      - name: Helm Test
        run: |
          cd deployment/k8s && make helm-test

      - name: Helm Test with Config
        run: |
          cd deployment/k8s && make helm-test-config

      - name: Helm Unit Test
        run: |
          cd deployment/k8s && make helm-unittest

  deploy-docs:
    needs: tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: ./.github/actions/setup-python

      - name: Download Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage_report

      - name: Generate Badges
        run: |
          make gen-coverage-badge
          make gen-test-count-badge

      - name: Deploy badges to GitHub Pages
        run: |
          git clone --depth 1 --branch gh-pages --single-branch https://github.com/${{ github.repository }} /tmp/gh-pages || \
          (echo "gh-pages branch not found, creating it." && \
            mkdir -p /tmp/gh-pages && \
            cd /tmp/gh-pages && \
            git init && \
            git remote add origin https://github.com/${{ github.repository }} && \
            git checkout -b gh-pages && \
            # Create a minimal index.html for the root if it doesn't exist
            echo "<html><head><title>LangGate AI Gateway</title></head><body><h1>LangGate AI Gateway</h1><p>See <a href='coverage/'>coverage reports</a>.</p><p>Helm charts are available in the <a href='charts/'>charts directory</a>.</p></body></html>" > index.html && \
            git add index.html && \
            git commit -m "Initial commit for gh-pages with index.html")

          cd /tmp/gh-pages
          mkdir -p coverage
          cp -a ${{ github.workspace }}/coverage_report/* coverage/

          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

          git add coverage/*
          if git diff --staged --quiet; then
            echo "No changes to commit to gh-pages coverage."
          else
            git commit -m "Update coverage badges and report [skip ci]"
            git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages
          fi
