# LangGate Helm Chart Configuration

# Global configuration
global:
  imageRegistry: ghcr.io/tanantor
  imagePullSecrets: []
  imagePullPolicy: IfNotPresent
  namespace: default
  env:
    APP_ENV: "k8s:prod"
    LOG_LEVEL: "info"

# LangGate Envoy Proxy
langgate_envoy:
  enabled: true
  name: langgate-envoy
  replicaCount: 1

  image:
    repository: langgate-envoy
    # tag: "" # Defaults to chart appVersion

  service:
    type: ClusterIP
    port: 10000
    adminPort: 9901
    annotations: {}

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  env:
    DEBUG: "0"

  nodeSelector: {}
  tolerations: []
  affinity: {}

# LangGate Processor
langgate_processor:
  enabled: true
  name: langgate-processor
  replicaCount: 1

  image:
    repository: langgate-processor
    # tag: "" # Defaults to chart appVersion

  service:
    type: ClusterIP
    port: 50051
    annotations: {}

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  env:
    LANGGATE_PROC_PORT: "50051"

  nodeSelector: {}
  tolerations: []
  affinity: {}

  probes:
    livenessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 30
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10

# LangGate Server
langgate_server:
  enabled: true
  name: langgate-server
  replicaCount: 1

  image:
    repository: langgate-server
    # tag: "" # Defaults to chart appVersion

  service:
    type: ClusterIP
    port: 4000
    annotations: {}

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  env:
    HOST: "0.0.0.0"
    PORT: "4000"

  nodeSelector: {}
  tolerations: []
  affinity: {}

  probes:
    livenessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 30
      path: /api/v1/health
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      path: /api/v1/health

# Configurations
config:
  # There are four ways to configure LangGate:
  #
  # 1. Use package defaults (no action needed)
  #    Leave config.data.langgate_config and config.data.langgate_models empty
  #
  # 2. Use an existing ConfigMap:
  #    kubectl create configmap langgate-config --from-file=langgate_config.yaml --from-file=langgate_models.json
  #    Then set: config.existingConfigMap = "langgate-config"
  #
  # 3. Provide inline configuration in values.yaml:
  #    config.data.langgate_config: |
  #      default_params:
  #        temperature: 0.7
  #
  # 4. Use --set-file during helm install:
  #    helm install langgate ... --set-file config.data.langgate_config=./my-config.yaml --set-file config.data.langgate_models=./my-models.json

  # Option 2: Reference an existing ConfigMap
  existingConfigMap: ""

  # Options 1,3,4: Create a new ConfigMap
  name: langgate-config
  data:

    langgate_config: ""
    langgate_models: ""

# Secrets
secrets:
  # Either specify existing Secret:
  existingSecret: ""

  # Or create new Secret:
  name: langgate-secrets
  # Data for the Secret (will be base64 encoded)
  data: {}
