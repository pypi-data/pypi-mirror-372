[tool.poetry]
name = "hand2text"
version = "0.1.2"
description = "Convert handwritten PDF notes to text using OCR and LLM"
authors = ["ali askar <26202651+alihaskar@users.noreply.github.com>"]
readme = "README.md"
packages = [{include = "hand2text"}]
homepage = "https://github.com/alihaskar/hand2text"
repository = "https://github.com/alihaskar/hand2text"
keywords = ["ocr", "handwriting", "pdf", "text-extraction", "ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.10"
pymupdf = "^1.25.5"
pillow = "^11.2.1"
pytesseract = "^0.3.13"
openai = "^1.76.0"
python-dotenv = "^1.1.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.9"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
types-pillow = "^10.1.0"

[tool.poetry.scripts]
hand2text = "hand2text.cli:run"

# Ruff configuration
[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by formatter
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["fitz", "pytesseract"]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
