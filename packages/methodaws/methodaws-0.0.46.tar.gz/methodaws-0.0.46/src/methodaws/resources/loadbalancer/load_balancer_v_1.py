# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import datetime as dt
import pydantic
import typing
from .target import Target
from .listener import Listener
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class LoadBalancerV1(UniversalBaseModel):
    name: str
    region: str
    created_time: dt.datetime = pydantic.Field(alias="createdTime")
    dns_name: str = pydantic.Field(alias="dnsName")
    security_group_ids: typing.Optional[typing.List[str]] = pydantic.Field(alias="securityGroupIds", default=None)
    vpc_id: typing.Optional[str] = pydantic.Field(alias="vpcId", default=None)
    subnet_ids: typing.Optional[typing.List[str]] = pydantic.Field(alias="subnetIds", default=None)
    hosted_zone_id: typing.Optional[str] = pydantic.Field(alias="hostedZoneId", default=None)
    targets: typing.Optional[typing.List[Target]] = None
    listeners: typing.Optional[typing.List[Listener]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
