openapi: 3.0.0
paths:
  /v1/hubs:
    get:
      operationId: HubController_getAll
      parameters:
        - &a1
          name: x-org-slug
          in: header
          required: true
          schema:
            type: string
        - name: include
          required: false
          in: query
          description: Include additional hub fields
          example:
            - status
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubsResponse'
      tags: &a2
        - Hubs
      security: &a3
        - ts-auth-token: []
    post:
      operationId: HubController_create
      parameters:
        - *a1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHubRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDetailsDto'
      tags: *a2
      security: *a3
  '/v1/hubs/{id}':
    get:
      operationId: HubController_getById
      parameters:
        - *a1
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: include
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDetailsDto'
      tags: *a2
      security: *a3
    delete:
      operationId: HubController_delete
      parameters:
        - *a1
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags: *a2
      security: *a3
    put:
      operationId: HubController_update
      parameters:
        - *a1
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHubRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDetailsDto'
      tags: *a2
      security: *a3
  '/v1/hubs/{id}/installer':
    get:
      operationId: HubController_getInstaller
      parameters:
        - *a1
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *a2
      security: *a3
  '/v1/hubs/{id}/status':
    put:
      operationId: HubController_updateStatus
      parameters:
        - *a1
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHubStatusRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHubStatusResponse'
      tags: *a2
      security: *a3
  '/v1/hubs/{id}/sync':
    post:
      operationId: HubController_sync
      parameters:
        - *a1
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags: *a2
      security: *a3
  /v1/errors:
    get:
      operationId: TransactionErrorController_getAll
      parameters:
        - name: x-org-slug
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionErrorsResponse'
      tags:
        - Errors
      security:
        - ts-auth-token: []
  '/v1/artifacts/{type}':
    get:
      operationId: ArtifactController_getById
      parameters:
        - &a4
          name: x-org-slug
          in: header
          required: true
          schema:
            type: string
        - name: type
          required: true
          in: path
          description: Artifact type
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactDetailsDto'
      tags: &a5
        - Artifacts
      security: &a6
        - ts-auth-token: []
  /v1/artifacts:
    get:
      operationId: ArtifactController_getAll
      parameters:
        - *a4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactsResponse'
      tags: *a5
      security: *a6
  /v1/connectors:
    get:
      operationId: ConnectorController_getAll
      parameters:
        - &a7
          name: x-org-slug
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorsResponse'
      tags: &a8
        - Connectors
      security: &a9
        - ts-auth-token: []
    post:
      operationId: ConnectorController_create
      parameters:
        - *a7
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectorRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDetailsDto'
      tags: *a8
      security: *a9
    delete:
      operationId: ConnectorController_deleteAll
      parameters:
        - *a7
      responses:
        '204':
          description: ''
      tags: *a8
      security: *a9
  '/v1/connectors/{id}':
    get:
      operationId: ConnectorController_getById
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: resolveSecrets
          required: false
          in: query
          schema:
            type: boolean
        - name: include
          required: false
          in: query
          description: Include additional connector fields
          example:
            - config
            - artifact
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDetailsDto'
      tags: *a8
      security: *a9
    put:
      operationId: ConnectorController_update
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectorRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDetailsDto'
      tags: *a8
      security: *a9
    delete:
      operationId: ConnectorController_delete
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/health':
    put:
      operationId: ConnectorController_updateHealth
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectorHealthRequest'
      responses:
        '204':
          description: ''
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/status':
    put:
      operationId: ConnectorController_updateStatus
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectorStatusRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateConnectorStatusResponse'
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/credentials':
    get:
      operationId: ConnectorController_getCredentials
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectorCredentialsDto'
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/config/{version}':
    get:
      operationId: ConnectorController_getConfig
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: version
          required: true
          in: path
          description: Config version
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/config':
    put:
      operationId: ConnectorController_updateConfig
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConnectorConfigCommand'
      responses:
        '200':
          description: ''
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/data':
    get:
      operationId: ConnectorController_getData
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
        - required: false
          name: keys
          in: query
          schema:
            type: string
        - required: false
          description:
            If true interpret dots in value keys as fields used to index the
            value object
          name: useObjectNotation
          in: query
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDataResponse'
      tags: *a8
      security: *a9
    put:
      operationId: ConnectorController_saveData
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveConnectorDataRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDataResponse'
      tags: *a8
      security: *a9
    delete:
      operationId: ConnectorController_deleteData
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: keys
          required: true
          in: query
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/files':
    get:
      operationId: ConnectorController_getFiles
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: fileIds
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: excludeFileIds
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: uniqueExternalIds
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: excludeUniqueExternalIds
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: statuses
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - PENDING
                - PROCESSING
                - SKIPPED
                - SUCCESS
                - ERROR
        - name: maxErrors
          required: false
          in: query
          schema:
            type: number
        - name: createdBefore
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - name: createdAfter
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - name: updatedBefore
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - name: updatedAfter
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - name: orderBy
          required: false
          in: query
          schema:
            type: string
        - name: orderDirection
          required: false
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: take
          required: false
          in: query
          schema:
            type: number
        - name: skip
          required: false
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorFilesResponse'
      tags: *a8
      security: *a9
    put:
      operationId: ConnectorController_updateFiles
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveConnectorFilesRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveConnectorFilesResponse'
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/files/stats':
    get:
      operationId: ConnectorController_getFileStats
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectorFileStatsDto'
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/metrics':
    get:
      operationId: ConnectorController_getFileMetrics
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectorMetricsDto'
      tags: *a8
      security: *a9
    post:
      operationId: ConnectorController_reportMetrics
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportMetricsRequest'
      responses:
        '201':
          description: ''
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/heartbeat':
    post:
      operationId: ConnectorController_heartbeat
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/config-check':
    post:
      operationId: ConnectorController_checkConfig
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckConnectorConfigResponse'
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/sync':
    post:
      operationId: ConnectorController_sync
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/installer':
    get:
      operationId: ConnectorController_getInstallScript
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *a8
      security: *a9
  '/v1/connectors/{id}/token':
    put:
      operationId: ConnectorController_rotateConnectorToken
      parameters:
        - *a7
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *a8
      security: *a9
  /v1/internal/telemetry/connectors:
    get:
      operationId: TelemetryController_getAllConnectors
      parameters: []
      responses:
        '200':
          description: ''
      tags: &a10
        - Phone Home Telemetry
  /v1/internal/telemetry/hubs:
    get:
      operationId: TelemetryController_getAllHubs
      parameters: []
      responses:
        '200':
          description: ''
      tags: *a10
  /status:
    get:
      operationId: StatusController_getStatus
      parameters: []
      responses:
        '200':
          description: ''
        '503':
          description: May return 503 status code if database connection is unhealthy.
      tags:
        - Status
  /v1/data-apps:
    get:
      operationId: DataAppController_getAll
      parameters:
        - &a11
          name: x-org-slug
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAppsResponse'
      tags: &a12
        - DataApps
      security: &a13
        - ts-auth-token: []
    post:
      operationId: DataAppController_create
      parameters:
        - *a11
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataAppRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAppDetailsDto'
      tags: *a12
      security: *a13
  '/v1/data-apps/{id}':
    get:
      operationId: DataAppController_getById
      parameters:
        - *a11
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: resolveSecrets
          required: false
          in: query
          schema:
            type: boolean
        - name: include
          required: false
          in: query
          description: Include additional connector fields
          example:
            - config
            - artifact
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAppDetailsDto'
      tags: *a12
      security: *a13
    delete:
      operationId: DataAppController_delete
      parameters:
        - *a11
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags: *a12
      security: *a13
info:
  title: Connectors API
  description: TetraScience Pluggable Connectors API
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    ts-auth-token:
      name: ts-auth-token
      type: apiKey
      in: header
  schemas:
    HubStatusDto:
      type: object
      properties:
        network:
          type: string
        lastSeen:
          type: object
        proxies:
          type: object
        metrics:
          type: array
          items:
            type: string
        health:
          type: object
      required:
        - network
        - lastSeen
    HubHostDto:
      type: object
      properties:
        ipAddress:
          type: string
        hostName:
          type: string
        platformName:
          type: string
        platformVersion:
          type: string
    HubDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        orgSlug:
          type: string
        description:
          type: string
        httpProxyHost:
          type: string
        httpProxyPort:
          type: number
        httpProxyUsername:
          type: string
        httpsProxyHost:
          type: string
        httpsProxyPort:
          type: number
        httpsProxyUsername:
          type: string
        noProxy:
          type: string
        l7ProxyForwardPort:
          type: number
        l7ProxyReverseHttpPort:
          type: number
        l7ProxyReverseHttpsPort:
          type: number
        l7ProxySocatPort:
          type: number
        l7ProxyReverseMqttPort:
          type: number
        l7ProxySocatMqttPort:
          type: number
        l7ProxyLocalnets:
          type: string
        l7ProxyDnsNameservers:
          type: string
        l7ProxyWhitelist:
          type: string
        l7ProxyMaximumMemoryMb:
          type: number
        enabled:
          type: boolean
        status:
          $ref: '#/components/schemas/HubStatusDto'
        host:
          $ref: '#/components/schemas/HubHostDto'
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        activationExpiresAt:
          format: date-time
          type: string
        ssmInstanceId:
          type: string
        ecsContainerInstanceArn:
          type: string
      required:
        - id
        - name
        - orgSlug
        - httpProxyHost
        - httpProxyPort
        - httpProxyUsername
        - httpsProxyHost
        - httpsProxyPort
        - httpsProxyUsername
        - noProxy
        - l7ProxyForwardPort
        - l7ProxyReverseHttpPort
        - l7ProxyReverseHttpsPort
        - l7ProxySocatPort
        - l7ProxyReverseMqttPort
        - l7ProxySocatMqttPort
        - l7ProxyLocalnets
        - l7ProxyDnsNameservers
        - l7ProxyWhitelist
        - l7ProxyMaximumMemoryMb
        - enabled
        - updatedAt
        - createdAt
        - activationExpiresAt
        - ssmInstanceId
        - ecsContainerInstanceArn
    HubListItemDto:
      type: object
      properties:
        hub:
          $ref: '#/components/schemas/HubDto'
        status:
          type: object
      required:
        - hub
        - status
    HubsResponse:
      type: object
      properties:
        hubs:
          type: array
          items:
            $ref: '#/components/schemas/HubListItemDto'
      required:
        - hubs
    ArtifactDto:
      type: object
      properties:
        namespace:
          type: string
        slug:
          type: string
        version:
          type: string
        manifest:
          type: object
      required:
        - namespace
        - slug
        - version
    HubConnectorDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        artifact:
          $ref: '#/components/schemas/ArtifactDto'
        hostType:
          type: string
          enum:
            - cloud
            - hub
            - local
            - standalone
        health:
          type: string
        healthErrorCode:
          type: string
        operatingStatus:
          type: string
        networkStatus:
          type: string
        lastSeenAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        serviceDiscoveryName:
          type: string
      required:
        - id
        - name
        - artifact
        - hostType
        - health
        - operatingStatus
        - networkStatus
        - updatedAt
        - createdAt
    HubDetailsDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        orgSlug:
          type: string
        description:
          type: string
        httpProxyHost:
          type: string
        httpProxyPort:
          type: number
        httpProxyUsername:
          type: string
        httpsProxyHost:
          type: string
        httpsProxyPort:
          type: number
        httpsProxyUsername:
          type: string
        noProxy:
          type: string
        l7ProxyForwardPort:
          type: number
        l7ProxyReverseHttpPort:
          type: number
        l7ProxyReverseHttpsPort:
          type: number
        l7ProxySocatPort:
          type: number
        l7ProxyReverseMqttPort:
          type: number
        l7ProxySocatMqttPort:
          type: number
        l7ProxyLocalnets:
          type: string
        l7ProxyDnsNameservers:
          type: string
        l7ProxyWhitelist:
          type: string
        l7ProxyMaximumMemoryMb:
          type: number
        enabled:
          type: boolean
        status:
          $ref: '#/components/schemas/HubStatusDto'
        host:
          $ref: '#/components/schemas/HubHostDto'
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        activationExpiresAt:
          format: date-time
          type: string
        ssmInstanceId:
          type: string
        ecsContainerInstanceArn:
          type: string
        connectors:
          type: array
          items:
            $ref: '#/components/schemas/HubConnectorDto'
      required:
        - id
        - name
        - orgSlug
        - httpProxyHost
        - httpProxyPort
        - httpProxyUsername
        - httpsProxyHost
        - httpsProxyPort
        - httpsProxyUsername
        - noProxy
        - l7ProxyForwardPort
        - l7ProxyReverseHttpPort
        - l7ProxyReverseHttpsPort
        - l7ProxySocatPort
        - l7ProxyReverseMqttPort
        - l7ProxySocatMqttPort
        - l7ProxyLocalnets
        - l7ProxyDnsNameservers
        - l7ProxyWhitelist
        - l7ProxyMaximumMemoryMb
        - enabled
        - updatedAt
        - createdAt
        - activationExpiresAt
        - ssmInstanceId
        - ecsContainerInstanceArn
    CreateHubRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        l7ProxyForwardPort:
          type: number
        l7ProxyReverseHttpPort:
          type: number
        l7ProxyReverseHttpsPort:
          type: number
        l7ProxySocatPort:
          type: number
        l7ProxyReverseMqttPort:
          type: number
        l7ProxySocatMqttPort:
          type: number
        l7ProxyLocalnets:
          type: string
        l7ProxyDnsNameservers:
          type: string
        l7ProxyWhitelist:
          type: string
        l7ProxyConfigOverride:
          type: string
        l7ProxyMaximumMemoryMb:
          type: number
      required:
        - name
        - l7ProxyForwardPort
        - l7ProxyReverseHttpPort
        - l7ProxyReverseHttpsPort
        - l7ProxySocatPort
        - l7ProxyLocalnets
        - l7ProxyDnsNameservers
    UpdateHubRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        l7ProxyForwardPort:
          type: number
        l7ProxyReverseHttpPort:
          type: number
        l7ProxyReverseHttpsPort:
          type: number
        l7ProxySocatPort:
          type: number
        l7ProxyReverseMqttPort:
          type: number
        l7ProxySocatMqttPort:
          type: number
        l7ProxyLocalnets:
          type: string
        l7ProxyDnsNameservers:
          type: string
        l7ProxyWhitelist:
          type: string
        l7ProxyConfigOverride:
          type: string
        l7ProxyMaximumMemoryMb:
          type: number
        resetHubMigrationStatus:
          type: boolean
      required:
        - name
        - l7ProxyForwardPort
        - l7ProxyReverseHttpPort
        - l7ProxyReverseHttpsPort
        - l7ProxySocatPort
        - l7ProxyLocalnets
        - l7ProxyDnsNameservers
    UpdateHubStatusRequest:
      type: object
      properties:
        enabled:
          type: boolean
      required:
        - enabled
    UpdateHubStatusResponse:
      type: object
      properties:
        enabled:
          type: boolean
      required:
        - enabled
    TransactionErrorDto:
      type: object
      properties:
        id:
          type: string
        orgSlug:
          type: string
        entityType:
          type: string
          enum:
            - connector
            - hub
        entityId:
          type: string
        action:
          type: string
        metadata:
          type: object
        error:
          type: string
        createdAt:
          format: date-time
          type: string
      required:
        - id
        - orgSlug
        - entityType
        - entityId
        - action
        - metadata
        - error
        - createdAt
    TransactionErrorsResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TransactionErrorDto'
      required:
        - errors
    ConnectorGeneratedConfigUiComponentDto:
      type: object
      properties:
        type:
          type: string
          enum:
            - generated
        trigger:
          type: string
          enum:
            - configuration
        config:
          type: array
          items:
            type: string
      required:
        - type
        - trigger
        - config
    ConnectorCustomConfigUiComponentDto:
      type: object
      properties:
        type:
          type: string
          enum:
            - custom
        trigger:
          type: string
          enum:
            - configuration
        component:
          type: string
      required:
        - type
        - trigger
        - component
    ConnectorCustomRouteUiComponentDto:
      type: object
      properties:
        type:
          type: string
          enum:
            - custom
        trigger:
          type: string
          enum:
            - route
        route:
          type: string
        component:
          type: string
      required:
        - type
        - trigger
        - route
        - component
    ConnectorUiDto:
      type: object
      properties:
        components:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ConnectorGeneratedConfigUiComponentDto'
              - $ref: '#/components/schemas/ConnectorCustomConfigUiComponentDto'
              - $ref: '#/components/schemas/ConnectorCustomRouteUiComponentDto'
      required:
        - components
    ArtifactDetailsDto:
      type: object
      properties:
        namespace:
          type: string
        slug:
          type: string
        version:
          type: string
        manifest:
          type: object
        name:
          type: string
        description:
          type: string
        sourceType:
          type: string
        ui:
          $ref: '#/components/schemas/ConnectorUiDto'
      required:
        - namespace
        - slug
        - version
        - name
    ArtifactsResponse:
      type: object
      properties:
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactDto'
      required:
        - artifacts
    ConnectorDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        orgSlug:
          type: string
        description:
          type: string
          nullable: true
        artifact:
          $ref: '#/components/schemas/ArtifactDto'
        hostType:
          type: string
          enum:
            - cloud
            - hub
            - local
            - standalone
        hub:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/HubDto'
        metadata:
          type: object
        tags:
          type: array
          items:
            type: string
        commandQueue:
          type: string
        clusterArn:
          type: string
        taskDefinitionArn:
          type: string
          nullable: true
        serviceArn:
          type: string
          nullable: true
        health:
          type: string
        healthErrorCode:
          type: string
          nullable: true
        operatingStatus:
          type: string
        networkStatus:
          type: string
        config:
          type: object
        lastSeenAt:
          format: date-time
          type: string
          nullable: true
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        serviceDiscoveryName:
          type: string
          nullable: true
      required:
        - id
        - name
        - orgSlug
        - artifact
        - hostType
        - health
        - operatingStatus
        - networkStatus
        - updatedAt
        - createdAt
    ConnectorsResponse:
      type: object
      properties:
        connectors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDto'
      required:
        - connectors
    LabelDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
      required:
        - id
        - name
        - value
    ConnectorDetailsDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        orgSlug:
          type: string
        description:
          type: string
          nullable: true
        artifact:
          oneOf:
            - $ref: '#/components/schemas/ArtifactDto'
            - $ref: '#/components/schemas/ArtifactDetailsDto'
        hostType:
          type: string
          enum:
            - cloud
            - hub
            - local
            - standalone
        hub:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/HubDto'
        metadata:
          type: object
        tags:
          type: array
          items:
            type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelDto'
        commandQueue:
          type: string
        clusterArn:
          type: string
        taskDefinitionArn:
          type: string
        serviceArn:
          type: string
        health:
          type: string
        healthErrorCode:
          type: string
          nullable: true
        operatingStatus:
          type: string
        networkStatus:
          type: string
        config:
          type: object
        lastSeenAt:
          format: date-time
          type: string
          nullable: true
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        serviceDiscoveryName:
          type: string
          nullable: true
      required:
        - id
        - name
        - orgSlug
        - artifact
        - hostType
        - health
        - operatingStatus
        - networkStatus
        - updatedAt
        - createdAt
    CreateConnectorRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        hostType:
          type: string
          default: hub
          enum:
            - cloud
            - hub
            - local
            - standalone
        connectorType:
          type: string
        hubId:
          type: string
        metadata:
          type: object
        tags:
          type: array
          items:
            type: string
        labels:
          type: array
          items:
            type: string
      required:
        - name
        - hostType
        - connectorType
    LabelRequest:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
    UpdateConnectorLabelsRequest:
      type: object
      properties:
        labelsToAdd:
          type: array
          items:
            $ref: '#/components/schemas/LabelRequest'
        labelsToDrop:
          type: array
          items:
            type: number
    UpdateConnectorRequest:
      type: object
      properties:
        description:
          type: string
        connectorType:
          type: string
        hostType:
          type: string
          enum:
            - cloud
            - hub
            - local
            - standalone
        hubId:
          type: string
        metadata:
          type: object
        tags:
          type: array
          items:
            type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/UpdateConnectorLabelsRequest'
        config:
          type: object
        resetConnectorMigrationStatus:
          type: boolean
    UpdateConnectorHealthRequest:
      type: object
      properties:
        status:
          type: string
          enum:
            - HEALTHY
            - WARNING
            - CRITICAL
            - N/A
        errorCode:
          type: string
      required:
        - status
    UpdateConnectorStatusRequest:
      type: object
      properties:
        status:
          type: string
          enum:
            - IDLE
            - RUNNING
            - DISABLED
            - ENABLED
      required:
        - status
    UpdateConnectorStatusResponse:
      type: object
      properties:
        status:
          type: string
          enum:
            - IDLE
            - RUNNING
            - DISABLED
      required:
        - status
    GetConnectorCredentialsDto:
      type: object
      properties:
        accessKeyId:
          type: string
          description: AWS Credentials
        secretAccessKey:
          type: string
          description: AWS Secret Access Key
        sessionToken:
          type: string
          description: AWS Session Token
        expirationDate:
          type: string
          description: Expiration Date
      required:
        - accessKeyId
        - secretAccessKey
        - sessionToken
        - expirationDate
    UpdateConnectorConfigCommand:
      type: object
      properties: {}
    ConnectorValueDto:
      type: object
      properties:
        key:
          type: string
        value:
          type: object
        secure:
          type: boolean
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
      required:
        - key
        - secure
        - updatedAt
        - createdAt
    ConnectorDataResponse:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorValueDto'
      required:
        - values
    SaveConnectorValueRequest:
      type: object
      properties:
        key:
          type: string
        value:
          type: object
        secure:
          type: boolean
      required:
        - key
        - value
    SaveConnectorDataRequest:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/SaveConnectorValueRequest'
      required:
        - values
    ConnectorFileDto:
      type: object
      properties:
        id:
          type: string
        uniqueExternalId:
          type: string
        filepath:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - PROCESSING
            - SKIPPED
            - SUCCESS
            - ERROR
        metadata:
          type: object
          nullable: true
        errorCount:
          type: number
        errorMessage:
          type: string
          nullable: true
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
      required:
        - id
        - uniqueExternalId
        - filepath
        - status
        - metadata
        - errorMessage
        - updatedAt
        - createdAt
    ConnectorFilesResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorFileDto'
        total:
          type: number
      required:
        - files
        - total
    GetConnectorFileStatsDto:
      type: object
      properties:
        total:
          type: number
        success:
          type: number
        pending:
          type: number
        processing:
          type: number
        error:
          type: number
        skipped:
          type: number
      required:
        - total
        - success
        - pending
        - processing
        - error
        - skipped
    SaveConnectorFileRequest:
      type: object
      properties:
        id:
          type: string
        uniqueExternalId:
          type: string
        metadata:
          type: object
        status:
          type: string
        errorCount:
          type: number
        errorMessage:
          type: string
        filepath:
          type: string
    SaveConnectorFilesRequest:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/SaveConnectorFileRequest'
      required:
        - files
    SaveConnectorFilesResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorFileDto'
        failures:
          type: array
          items:
            type: string
      required:
        - files
        - failures
    MetricTimeValueDto:
      type: object
      properties:
        time:
          format: date-time
          type: string
        value:
          type: number
      required:
        - time
    ConnectorMetricDto:
      type: object
      properties:
        name:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/MetricTimeValueDto'
      required:
        - name
        - values
    GetConnectorMetricsDto:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorMetricDto'
      required:
        - metrics
    MetricDimensionDto:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
    ReportConnectorMetricRequest:
      type: object
      properties:
        name:
          type: string
        unit:
          type: string
          description: "Valid values are units in AWS Datum:
            https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/AP\
            I_MetricDatum.html"
        dimensions:
          type: array
          items:
            $ref: '#/components/schemas/MetricDimensionDto'
        values:
          description: Time must be between 2 weeks in the past and 2 hours in the future
          type: array
          items:
            $ref: '#/components/schemas/MetricTimeValueDto'
      required:
        - name
        - unit
        - dimensions
        - values
    ReportMetricsRequest:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/ReportConnectorMetricRequest'
      required:
        - metrics
    FieldValidationError:
      type: object
      properties:
        field:
          type: string
        error:
          type: string
      required:
        - field
        - error
    CheckConnectorConfigResponse:
      type: object
      properties:
        valid:
          type: boolean
        error:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/FieldValidationError'
      required:
        - valid
    DataAppDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        orgSlug:
          type: string
        description:
          type: string
        artifact:
          $ref: '#/components/schemas/ArtifactDto'
        hostType:
          type: string
          enum:
            - cloud
            - local
        metadata:
          type: object
        tags:
          type: array
          items:
            type: string
        commandQueue:
          type: string
        clusterArn:
          type: string
        taskDefinitionArn:
          type: string
        taskArn:
          type: string
        health:
          type: string
        healthErrorCode:
          type: string
        operatingStatus:
          type: string
        networkStatus:
          type: string
        config:
          type: object
        lastSeenAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        serviceDiscoveryName:
          type: string
      required:
        - id
        - name
        - orgSlug
        - artifact
        - hostType
        - clusterArn
        - taskDefinitionArn
        - taskArn
        - health
        - operatingStatus
        - networkStatus
        - config
        - updatedAt
        - createdAt
    DataAppsResponse:
      type: object
      properties:
        dataApps:
          type: array
          items:
            $ref: '#/components/schemas/DataAppDto'
      required:
        - dataApps
    DataAppDetailsDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        orgSlug:
          type: string
        description:
          type: string
        artifact:
          oneOf:
            - $ref: '#/components/schemas/ArtifactDto'
            - $ref: '#/components/schemas/ArtifactDetailsDto'
        hostType:
          type: string
          enum:
            - cloud
            - local
        commandQueue:
          type: string
        clusterArn:
          type: string
        taskDefinitionArn:
          type: string
        taskArn:
          type: string
        health:
          type: string
        healthErrorCode:
          type: string
        operatingStatus:
          type: string
        networkStatus:
          type: string
        config:
          type: object
        lastSeenAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        serviceDiscoveryName:
          type: string
      required:
        - id
        - name
        - orgSlug
        - artifact
        - hostType
        - clusterArn
        - taskDefinitionArn
        - taskArn
        - health
        - operatingStatus
        - networkStatus
        - config
        - updatedAt
        - createdAt
    CreateDataAppRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        hostType:
          type: string
          default: cloud
          enum:
            - cloud
            - local
        connectorType:
          type: string
        providerIds:
          type: array
          items:
            type: string
      required:
        - name
        - hostType
        - connectorType
        - providerIds
