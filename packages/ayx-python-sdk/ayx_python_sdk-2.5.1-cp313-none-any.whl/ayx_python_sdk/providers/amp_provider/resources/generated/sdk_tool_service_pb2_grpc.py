# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import incoming_connection_complete_pb2 as incoming__connection__complete__pb2
from . import incoming_data_push_pb2 as incoming__data__push__pb2
from . import incoming_record_packet_push_pb2 as incoming__record__packet__push__pb2
from . import plugin_initialization_data_pb2 as plugin__initialization__data__pb2
from . import transport_pb2 as transport__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in sdk_tool_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SdkToolStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConfirmSdkToolServiceConnection = channel.unary_unary(
                '/sdk.SdkTool/ConfirmSdkToolServiceConnection',
                request_serializer=transport__pb2.Empty.SerializeToString,
                response_deserializer=transport__pb2.ReturnStatus.FromString,
                _registered_method=True)
        self.InitializeSdkPlugin = channel.unary_unary(
                '/sdk.SdkTool/InitializeSdkPlugin',
                request_serializer=plugin__initialization__data__pb2.PluginInitializationData.SerializeToString,
                response_deserializer=transport__pb2.ReturnStatus.FromString,
                _registered_method=True)
        self.PushIncomingRecordPacket = channel.unary_unary(
                '/sdk.SdkTool/PushIncomingRecordPacket',
                request_serializer=incoming__record__packet__push__pb2.IncomingRecordPacketPush.SerializeToString,
                response_deserializer=transport__pb2.ReturnStatus.FromString,
                _registered_method=True)
        self.PushIncomingData = channel.unary_unary(
                '/sdk.SdkTool/PushIncomingData',
                request_serializer=incoming__data__push__pb2.IncomingDataPush.SerializeToString,
                response_deserializer=transport__pb2.ReturnStatus.FromString,
                _registered_method=True)
        self.NotifyIncomingConnectionComplete = channel.unary_unary(
                '/sdk.SdkTool/NotifyIncomingConnectionComplete',
                request_serializer=incoming__connection__complete__pb2.IncomingConnectionComplete.SerializeToString,
                response_deserializer=transport__pb2.ReturnStatus.FromString,
                _registered_method=True)
        self.NotifyPluginComplete = channel.unary_unary(
                '/sdk.SdkTool/NotifyPluginComplete',
                request_serializer=transport__pb2.Empty.SerializeToString,
                response_deserializer=transport__pb2.ReturnStatus.FromString,
                _registered_method=True)


class SdkToolServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConfirmSdkToolServiceConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitializeSdkPlugin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushIncomingRecordPacket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushIncomingData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyIncomingConnectionComplete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyPluginComplete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SdkToolServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConfirmSdkToolServiceConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmSdkToolServiceConnection,
                    request_deserializer=transport__pb2.Empty.FromString,
                    response_serializer=transport__pb2.ReturnStatus.SerializeToString,
            ),
            'InitializeSdkPlugin': grpc.unary_unary_rpc_method_handler(
                    servicer.InitializeSdkPlugin,
                    request_deserializer=plugin__initialization__data__pb2.PluginInitializationData.FromString,
                    response_serializer=transport__pb2.ReturnStatus.SerializeToString,
            ),
            'PushIncomingRecordPacket': grpc.unary_unary_rpc_method_handler(
                    servicer.PushIncomingRecordPacket,
                    request_deserializer=incoming__record__packet__push__pb2.IncomingRecordPacketPush.FromString,
                    response_serializer=transport__pb2.ReturnStatus.SerializeToString,
            ),
            'PushIncomingData': grpc.unary_unary_rpc_method_handler(
                    servicer.PushIncomingData,
                    request_deserializer=incoming__data__push__pb2.IncomingDataPush.FromString,
                    response_serializer=transport__pb2.ReturnStatus.SerializeToString,
            ),
            'NotifyIncomingConnectionComplete': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyIncomingConnectionComplete,
                    request_deserializer=incoming__connection__complete__pb2.IncomingConnectionComplete.FromString,
                    response_serializer=transport__pb2.ReturnStatus.SerializeToString,
            ),
            'NotifyPluginComplete': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyPluginComplete,
                    request_deserializer=transport__pb2.Empty.FromString,
                    response_serializer=transport__pb2.ReturnStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sdk.SdkTool', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('sdk.SdkTool', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SdkTool(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConfirmSdkToolServiceConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkTool/ConfirmSdkToolServiceConnection',
            transport__pb2.Empty.SerializeToString,
            transport__pb2.ReturnStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitializeSdkPlugin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkTool/InitializeSdkPlugin',
            plugin__initialization__data__pb2.PluginInitializationData.SerializeToString,
            transport__pb2.ReturnStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PushIncomingRecordPacket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkTool/PushIncomingRecordPacket',
            incoming__record__packet__push__pb2.IncomingRecordPacketPush.SerializeToString,
            transport__pb2.ReturnStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PushIncomingData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkTool/PushIncomingData',
            incoming__data__push__pb2.IncomingDataPush.SerializeToString,
            transport__pb2.ReturnStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyIncomingConnectionComplete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkTool/NotifyIncomingConnectionComplete',
            incoming__connection__complete__pb2.IncomingConnectionComplete.SerializeToString,
            transport__pb2.ReturnStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NotifyPluginComplete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkTool/NotifyPluginComplete',
            transport__pb2.Empty.SerializeToString,
            transport__pb2.ReturnStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
