# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import dcm_e_pb2 as dcm__e__pb2
from . import outgoing_data_push_pb2 as outgoing__data__push__pb2
from . import outgoing_metadata_push_pb2 as outgoing__metadata__push__pb2
from . import outgoing_record_packet_push_pb2 as outgoing__record__packet__push__pb2
from . import output_message_data_pb2 as output__message__data__pb2
from . import password_data_pb2 as password__data__pb2
from . import sdk_tool_service_startup_info_pb2 as sdk__tool__service__startup__info__pb2
from . import translate_message_data_pb2 as translate__message__data__pb2
from . import transport_pb2 as transport__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in sdk_engine_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SdkEngineStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConfirmSdkEngineServiceConnection = channel.unary_unary(
                '/sdk.SdkEngine/ConfirmSdkEngineServiceConnection',
                request_serializer=sdk__tool__service__startup__info__pb2.SdkToolServiceStartupInfo.SerializeToString,
                response_deserializer=transport__pb2.ReturnStatus.FromString,
                _registered_method=True)
        self.PushOutgoingMetadata = channel.unary_unary(
                '/sdk.SdkEngine/PushOutgoingMetadata',
                request_serializer=outgoing__metadata__push__pb2.OutgoingMetadataPush.SerializeToString,
                response_deserializer=transport__pb2.ReturnStatus.FromString,
                _registered_method=True)
        self.PushOutgoingRecordPacket = channel.unary_unary(
                '/sdk.SdkEngine/PushOutgoingRecordPacket',
                request_serializer=outgoing__record__packet__push__pb2.OutgoingRecordPacketPush.SerializeToString,
                response_deserializer=transport__pb2.ReturnStatus.FromString,
                _registered_method=True)
        self.PushOutgoingData = channel.unary_unary(
                '/sdk.SdkEngine/PushOutgoingData',
                request_serializer=outgoing__data__push__pb2.OutgoingDataPush.SerializeToString,
                response_deserializer=transport__pb2.ReturnStatus.FromString,
                _registered_method=True)
        self.TranslateMessage = channel.unary_unary(
                '/sdk.SdkEngine/TranslateMessage',
                request_serializer=translate__message__data__pb2.TranslateMessageData.SerializeToString,
                response_deserializer=translate__message__data__pb2.TranslatedMessage.FromString,
                _registered_method=True)
        self.OutputMessage = channel.unary_unary(
                '/sdk.SdkEngine/OutputMessage',
                request_serializer=output__message__data__pb2.OutputMessageData.SerializeToString,
                response_deserializer=transport__pb2.Empty.FromString,
                _registered_method=True)
        self.DecryptPassword = channel.unary_unary(
                '/sdk.SdkEngine/DecryptPassword',
                request_serializer=password__data__pb2.PasswordData.SerializeToString,
                response_deserializer=password__data__pb2.PasswordData.FromString,
                _registered_method=True)
        self.Dcm = channel.unary_unary(
                '/sdk.SdkEngine/Dcm',
                request_serializer=dcm__e__pb2.DcmERequest.SerializeToString,
                response_deserializer=dcm__e__pb2.DcmEResponse.FromString,
                _registered_method=True)


class SdkEngineServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConfirmSdkEngineServiceConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushOutgoingMetadata(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushOutgoingRecordPacket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushOutgoingData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TranslateMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OutputMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DecryptPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Dcm(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SdkEngineServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConfirmSdkEngineServiceConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmSdkEngineServiceConnection,
                    request_deserializer=sdk__tool__service__startup__info__pb2.SdkToolServiceStartupInfo.FromString,
                    response_serializer=transport__pb2.ReturnStatus.SerializeToString,
            ),
            'PushOutgoingMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.PushOutgoingMetadata,
                    request_deserializer=outgoing__metadata__push__pb2.OutgoingMetadataPush.FromString,
                    response_serializer=transport__pb2.ReturnStatus.SerializeToString,
            ),
            'PushOutgoingRecordPacket': grpc.unary_unary_rpc_method_handler(
                    servicer.PushOutgoingRecordPacket,
                    request_deserializer=outgoing__record__packet__push__pb2.OutgoingRecordPacketPush.FromString,
                    response_serializer=transport__pb2.ReturnStatus.SerializeToString,
            ),
            'PushOutgoingData': grpc.unary_unary_rpc_method_handler(
                    servicer.PushOutgoingData,
                    request_deserializer=outgoing__data__push__pb2.OutgoingDataPush.FromString,
                    response_serializer=transport__pb2.ReturnStatus.SerializeToString,
            ),
            'TranslateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.TranslateMessage,
                    request_deserializer=translate__message__data__pb2.TranslateMessageData.FromString,
                    response_serializer=translate__message__data__pb2.TranslatedMessage.SerializeToString,
            ),
            'OutputMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.OutputMessage,
                    request_deserializer=output__message__data__pb2.OutputMessageData.FromString,
                    response_serializer=transport__pb2.Empty.SerializeToString,
            ),
            'DecryptPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.DecryptPassword,
                    request_deserializer=password__data__pb2.PasswordData.FromString,
                    response_serializer=password__data__pb2.PasswordData.SerializeToString,
            ),
            'Dcm': grpc.unary_unary_rpc_method_handler(
                    servicer.Dcm,
                    request_deserializer=dcm__e__pb2.DcmERequest.FromString,
                    response_serializer=dcm__e__pb2.DcmEResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sdk.SdkEngine', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('sdk.SdkEngine', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SdkEngine(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConfirmSdkEngineServiceConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkEngine/ConfirmSdkEngineServiceConnection',
            sdk__tool__service__startup__info__pb2.SdkToolServiceStartupInfo.SerializeToString,
            transport__pb2.ReturnStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PushOutgoingMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkEngine/PushOutgoingMetadata',
            outgoing__metadata__push__pb2.OutgoingMetadataPush.SerializeToString,
            transport__pb2.ReturnStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PushOutgoingRecordPacket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkEngine/PushOutgoingRecordPacket',
            outgoing__record__packet__push__pb2.OutgoingRecordPacketPush.SerializeToString,
            transport__pb2.ReturnStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PushOutgoingData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkEngine/PushOutgoingData',
            outgoing__data__push__pb2.OutgoingDataPush.SerializeToString,
            transport__pb2.ReturnStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TranslateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkEngine/TranslateMessage',
            translate__message__data__pb2.TranslateMessageData.SerializeToString,
            translate__message__data__pb2.TranslatedMessage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OutputMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkEngine/OutputMessage',
            output__message__data__pb2.OutputMessageData.SerializeToString,
            transport__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DecryptPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkEngine/DecryptPassword',
            password__data__pb2.PasswordData.SerializeToString,
            password__data__pb2.PasswordData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Dcm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/sdk.SdkEngine/Dcm',
            dcm__e__pb2.DcmERequest.SerializeToString,
            dcm__e__pb2.DcmEResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
