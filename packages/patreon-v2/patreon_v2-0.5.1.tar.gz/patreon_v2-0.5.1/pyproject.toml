[build-system]
requires = ["setuptools>=69", "wheel", "setuptools_scm[toml]>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "patreon-v2"
description = "Python library for interacting with the Patreon API. OAuth-centric for now."
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache-2.0"}
authors = [{ name = "Welt Studio", email = "dev@welt-studio.com" }]
maintainers = [{ name = "Welt Studio", email = "dev@welt-studio.com" }]
keywords = ["patreon", "api", "oauth", "python"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12"
]
dependencies = [
  "requests>=2.28",
  "six>=1.16.0",
  "setuptools"
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/Welt-Studio-Desenvolvimentos-LTDA/patreon-python"
"Bug Reports" = "https://github.com/Welt-Studio-Desenvolvimentos-LTDA/patreon-python/issues"
Source = "https://github.com/Welt-Studio-Desenvolvimentos-LTDA/patreon-python"

[project.optional-dependencies]
dev = ["pytest", "pytest-cov", "mock"]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["patreon*"]
exclude = ["examples*", "test*"]

[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme = "no-local-version"

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = ["test", "tests"]
python_files = "*_spec.py"

[tool.coverage.run]
source = ["patreon"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError"
]