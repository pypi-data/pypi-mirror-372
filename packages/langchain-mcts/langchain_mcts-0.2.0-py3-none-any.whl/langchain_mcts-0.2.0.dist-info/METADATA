Metadata-Version: 2.4
Name: langchain-mcts
Version: 0.2.0
Summary: Monte Carlo Tree Search integration for LangChain
Home-page: https://github.com/tu-usuario/langchain-mcts
Author: Tu Nombre
Author-email: Tu Nombre <tu@email.com>
License: MIT
Project-URL: Homepage, https://github.com/tu-usuario/langchain-mcts
Project-URL: Repository, https://github.com/tu-usuario/langchain-mcts
Project-URL: Documentation, https://langchain-mcts.readthedocs.io/
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: langchain>=0.1.0
Requires-Dist: numpy>=1.20.0
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Dynamic: author
Dynamic: home-page
Dynamic: requires-python

# LangChain MCTS

üöß **En Desarrollo** - Monte Carlo Tree Search integration for LangChain

Una librer√≠a que integra Monte Carlo Tree Search (MCTS) con LangChain para b√∫squeda y razonamiento avanzado con modelos de lenguaje.

## Estado del Proyecto

‚ö†Ô∏è **Esta librer√≠a est√° en desarrollo activo**. Todas las funciones actualmente retornan mensajes de "en desarrollo".

## Instalaci√≥n

```bash
pip install langchain-mcts
```

## Uso B√°sico

```python
from langchain_mcts import MCTSAgent, mcts_search, create_mcts_chain

# Crear agente MCTS
agent = MCTSAgent()

# Realizar b√∫squeda MCTS
result = agent.search("¬øCu√°l es la mejor estrategia?")
print(result)  # üöß Esta funci√≥n est√° en desarrollo - MCTS search functionality coming soon!

# Funci√≥n de conveniencia
result = mcts_search("Mi query")
print(result)  # üöß MCTS search para 'Mi query' est√° en desarrollo - Coming soon!

# Crear cadena MCTS
chain = create_mcts_chain()
```

## Funciones Disponibles

### `MCTSAgent`
Clase principal para agente MCTS:
- `search(query, iterations=100)`: Realiza b√∫squeda MCTS
- `expand_node(node)`: Expande nodos en el √°rbol MCTS
- `simulate(node)`: Simula desde un nodo
- `backpropagate(path, value)`: Propaga valores hacia atr√°s

### `mcts_search(query, model=None, **kwargs)`
Funci√≥n de conveniencia para b√∫squeda MCTS r√°pida.

### `create_mcts_chain(model=None, **kwargs)`
Crea una cadena MCTS para integraci√≥n con LangChain.

### `MCTSNode`
Representa un nodo en el √°rbol MCTS con m√©todos para:
- Gesti√≥n de nodos padre/hijo
- Actualizaci√≥n de estad√≠sticas
- Verificaci√≥n de nodos hoja

## Caracter√≠sticas Planificadas

- ‚úÖ Estructura base de la librer√≠a
- üöß Implementaci√≥n completa de MCTS
- üöß Integraci√≥n con modelos LangChain
- üöß Optimizaci√≥n de pol√≠ticas de b√∫squeda
- üöß Soporte para diferentes tipos de problemas
- üöß Paralelizaci√≥n de b√∫squeda
- üöß M√©tricas y visualizaci√≥n

## Desarrollo

Para contribuir al desarrollo:

```bash
git clone https://github.com/tu-usuario/langchain-mcts
cd langchain-mcts
pip install -e .[dev]
```

Para ejecutar tests:

```bash
pytest tests/
```

## Dependencias

- `langchain>=0.1.0`
- `numpy>=1.20.0`

## Licencia

MIT

---

üî¨ **Investigaci√≥n en curso**: Esta librer√≠a forma parte de un proyecto de investigaci√≥n en integraci√≥n de algoritmos de b√∫squeda con modelos de lenguaje grandes.
