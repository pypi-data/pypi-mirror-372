Metadata-Version: 2.4
Name: qutip-cuquantum
Version: 0.1.1
Summary: cuQuantum backend for QuTiP
Author-email: Eric Gigu√®re <qutip-admin@googlegroups.com>
License: BSD 3-Clause License
        
        Copyright (c) 2025, QuTiP
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: Homepage, https://qutip.org
Project-URL: Bug Tracker, https://github.com/qutip/qutip-cuquantum/issues
Project-URL: Documentation, https://qutip-cuquantum.readthedocs.io/en/latest/
Keywords: quantum,physics,dynamics,gpu,linear-algebra
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering
Classifier: Operating System :: Unix
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: qutip>=5.2.1
Provides-Extra: cuda11
Requires-Dist: cupy-cuda11x; extra == "cuda11"
Requires-Dist: cuquantum-python-cu11; extra == "cuda11"
Provides-Extra: cuda12
Requires-Dist: cupy-cuda12x; extra == "cuda12"
Requires-Dist: cuquantum-python-cu12; extra == "cuda12"
Provides-Extra: tests
Requires-Dist: pytest>=6.0; extra == "tests"
Dynamic: license-file

# qutip-cuquantum

Provide cuQuantum's cuDensityMat as a backend for QuTiP.

This backend is specifically designed for simulating **large, composite quantum systems** by performing tensor network contractions on the GPU.

## Installation

qutip-cuquantum is available on pypi.

```
pip install -U qutip>=5.2.1
pip install qutip-cuquantum
```


It require cuquantum to be installed at runtime.
If you have cuda already installed, you can install dependencies with:

```
pip install qutip-cuquantum[cuda11]
```
or
```
pip install qutip-cuquantum[cuda12]
```

If it does not work, you may need to install cuQuantum yourself,
see [nvidia's documentation](https://docs.nvidia.com/cuda/cuquantum/latest/getting-started/index.html#installing-cuquantum) for installation instruction.

## Usage

In simple case, simply calling `set_as_default` before a qutip script should be sufficient to use the backend common solver:

```
import qutip_cuquantum
from cuquantum.densitymat import WorkStream

qutip_cuquantum.set_as_default(WorkStream())
```

qutip-cuquantum work well to speed-up large simulation using `mesolve` or `sesolve`.
However this backend is not compatible with advanced qutip solvers (brmesolve, HEOM) and other various feature.
