---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/metaclass_forward_ref_wildcard/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import sys as _sys
import importlib as _importlib
class _CriboModule():

    def __init__(self, m, p):
        self._m, self._p = m, p

    def __getattr__(self, n):
        f = self._p + '.' + n
        try:
            return _CriboModule(_importlib.import_module(f), f)
        except ImportError:
            return getattr(self._m, n)

    def __getattribute__(self, n):
        return object.__getattribute__(self, n) if n in ('_m', '_p', '__getattr__', '__class__', '__dict__', '__dir__', '__module__', '__qualname__') else getattr(object.__getattribute__(self, '_m'), n)
class _Cribo():

    def __getattr__(self, n):
        m = _sys.modules.get(n) or _importlib.import_module(n)
        return _CriboModule(m, n)
_cribo = _Cribo()
wildcard_pkg = _cribo.types.SimpleNamespace(__name__='wildcard_pkg')
class WildcardMetaclass(type):
    """Metaclass that adds yaml_tag"""

    def __init__(cls, name, bases, kwds):
        super(WildcardMetaclass, cls).__init__(name, bases, kwds)
        if not hasattr(cls, "yaml_tag") or cls.yaml_tag is None:
            cls.yaml_tag = f"!{name}"
WildcardMetaclass.__module__ = 'wildcard_pkg.meta'
wildcard_pkg_meta = _cribo.types.SimpleNamespace(__name__='wildcard_pkg.meta')
wildcard_pkg.meta = wildcard_pkg_meta
@_cribo.functools.cache
def _cribo_init___cribo_5d409b_wildcard_pkg_base():
    _cribo_module = _cribo.types.SimpleNamespace()
    _cribo_module.__name__ = 'wildcard_pkg.base'
    _cribo_module.WildcardMetaclass = WildcardMetaclass

    class WildcardObject(metaclass=WildcardMetaclass):
        """An object with a metaclass"""
        yaml_tag = None

        def __str__(self):
            return f"WildcardObject(tag={self.yaml_tag})"
    WildcardObject.__module__ = 'wildcard_pkg.base'
    _cribo_module.WildcardObject = WildcardObject
    return _cribo_module
wildcard_pkg.base = _cribo_init___cribo_5d409b_wildcard_pkg_base()
WildcardObject = wildcard_pkg.base.WildcardObject
WildcardMetaclass = wildcard_pkg.base.WildcardMetaclass
wildcard_pkg_meta.WildcardMetaclass = WildcardMetaclass
wildcard_pkg.WildcardMetaclass = WildcardMetaclass
wildcard_pkg.WildcardObject = WildcardObject
obj = wildcard_pkg.WildcardObject()
print(f"WildcardObject: {obj}")
print(f"Tag: {obj.yaml_tag}")
print(f"Metaclass: {wildcard_pkg.WildcardMetaclass}")
