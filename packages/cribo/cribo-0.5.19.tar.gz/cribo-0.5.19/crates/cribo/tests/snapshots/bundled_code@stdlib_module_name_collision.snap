---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/stdlib_module_name_collision/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import sys as _sys
import importlib as _importlib
class _CriboModule():

    def __init__(self, m, p):
        self._m, self._p = m, p

    def __getattr__(self, n):
        f = self._p + '.' + n
        try:
            return _CriboModule(_importlib.import_module(f), f)
        except ImportError:
            return getattr(self._m, n)

    def __getattribute__(self, n):
        return object.__getattribute__(self, n) if n in ('_m', '_p', '__getattr__', '__class__', '__dict__', '__dir__', '__module__', '__qualname__') else getattr(object.__getattribute__(self, '_m'), n)
class _Cribo():

    def __getattr__(self, n):
        m = _sys.modules.get(n) or _importlib.import_module(n)
        return _CriboModule(m, n)
_cribo = _Cribo()
class MyBaseClass(_cribo.abc.ABC):
    """Base class using stdlib ABC."""
    pass
def test_function():
    """Test function using imports."""
    if _cribo.abc.ABC:
        my_list: _cribo.typing.List[str] = ["test"]
        TestEnum = _cribo.enum.Enum("TestEnum", ["A", "B"])
        obj = local_abc.create_object()
        loader = _cribo.importlib.machinery.SourceFileLoader
        return f"Success with {my_list} and {TestEnum.A} and {loader.__name__}"
    return "Failed"
def create_object():
    """Create an object for testing."""

    class TestObject(MyBaseClass):
        pass
    return TestObject()
"""Package with modules including one named 'abc' (same as stdlib)."""
"""Console module that imports various stdlib modules."""
"""Local 'abc' module that imports from stdlib 'abc'."""
MyBaseClass.__module__ = 'mypkg.abc'
mypkg = _cribo.types.SimpleNamespace(__name__='mypkg')
mypkg_console = _cribo.types.SimpleNamespace(__name__='mypkg.console')
mypkg.console = mypkg_console
mypkg_abc = _cribo.types.SimpleNamespace(__name__='mypkg.abc')
mypkg.abc = mypkg_abc
abc = mypkg_abc
console = mypkg_console
local_abc = mypkg_abc
mypkg_abc.MyBaseClass = MyBaseClass
mypkg_abc.create_object = create_object
mypkg_console.test_function = test_function
"""Test that triggers stdlib import collision bug when bundling packages."""
result = mypkg.console.test_function()
print(f"Result: {result}")
obj = mypkg.abc.create_object()
print(f"Object type: {type(obj).__name__}")
print("Test completed successfully")
