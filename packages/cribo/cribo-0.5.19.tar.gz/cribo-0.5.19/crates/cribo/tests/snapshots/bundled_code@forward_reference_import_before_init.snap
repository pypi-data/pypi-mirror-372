---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/forward_reference_import_before_init/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import sys as _sys
import importlib as _importlib
class _CriboModule():

    def __init__(self, m, p):
        self._m, self._p = m, p

    def __getattr__(self, n):
        f = self._p + '.' + n
        try:
            return _CriboModule(_importlib.import_module(f), f)
        except ImportError:
            return getattr(self._m, n)

    def __getattribute__(self, n):
        return object.__getattribute__(self, n) if n in ('_m', '_p', '__getattr__', '__class__', '__dict__', '__dir__', '__module__', '__qualname__') else getattr(object.__getattribute__(self, '_m'), n)
class _Cribo():

    def __getattr__(self, n):
        m = _sys.modules.get(n) or _importlib.import_module(n)
        return _CriboModule(m, n)
_cribo = _Cribo()
mypkg = _cribo.types.SimpleNamespace(__name__='mypkg')
@_cribo.functools.cache
def _cribo_init___cribo_4089db_mypkg_compat():
    _cribo_module = _cribo.types.SimpleNamespace()
    _cribo_module.__name__ = 'mypkg.compat'
    try:
        from fakejson import JSONDecodeError
        _cribo_module.JSONDecodeError = JSONDecodeError
    except ImportError:
        JSONDecodeError = _cribo.json.JSONDecodeError
        _cribo_module.JSONDecodeError = JSONDecodeError
    MutableMapping = _cribo.collections.abc.MutableMapping
    _cribo_module.MutableMapping = MutableMapping
    return _cribo_module
mypkg.compat = _cribo_init___cribo_4089db_mypkg_compat()
class BaseException(Exception):
    """Base exception class"""
    pass
class CustomJSONError(BaseException, mypkg.compat.JSONDecodeError):
    """Custom JSON error that inherits from compat's JSONDecodeError"""

    def __init__(self, *args):
        mypkg.compat.JSONDecodeError.__init__(self, *args)
        BaseException.__init__(self, str(args[0]) if args else "")

    def __reduce__(self):
        return mypkg.compat.JSONDecodeError.__reduce__(self)
BaseException.__module__ = 'mypkg.exceptions'
CustomJSONError.__module__ = 'mypkg.exceptions'
mypkg_exceptions = _cribo.types.SimpleNamespace(__name__='mypkg.exceptions')
mypkg.exceptions = mypkg_exceptions
mypkg.compat = _cribo_init___cribo_4089db_mypkg_compat()
mypkg_exceptions.BaseException = BaseException
mypkg_exceptions.CustomJSONError = CustomJSONError
mypkg.CustomJSONError = CustomJSONError
try:
    raise mypkg.CustomJSONError("Test error", "doc", 42)
except mypkg.CustomJSONError as e:
    print(f"Caught error: {e}")
    print("SUCCESS")
