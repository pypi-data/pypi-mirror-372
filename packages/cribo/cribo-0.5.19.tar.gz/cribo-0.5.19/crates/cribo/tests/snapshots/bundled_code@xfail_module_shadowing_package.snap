---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/xfail_module_shadowing_package/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import sys as _sys
import importlib as _importlib
class _CriboModule():

    def __init__(self, m, p):
        self._m, self._p = m, p

    def __getattr__(self, n):
        f = self._p + '.' + n
        try:
            return _CriboModule(_importlib.import_module(f), f)
        except ImportError:
            return getattr(self._m, n)

    def __getattribute__(self, n):
        return object.__getattribute__(self, n) if n in ('_m', '_p', '__getattr__', '__class__', '__dict__', '__dir__', '__module__', '__qualname__') else getattr(object.__getattribute__(self, '_m'), n)
class _Cribo():

    def __getattr__(self, n):
        m = _sys.modules.get(n) or _importlib.import_module(n)
        return _CriboModule(m, n)
_cribo = _Cribo()
@_cribo.functools.cache
def _cribo_init___cribo_2b5490_pandera():
    _cribo_module = _cribo.types.SimpleNamespace()
    _cribo_module.__name__ = 'pandera'
    """First-party pandera package that shadows the third-party pandera package."""
    print("Loading first-party pandera package")
    __version__ = "0.0.1-local-package"
    _cribo_module.__version__ = __version__

    def local_function():
        return "This is from the local pandera package"
    _cribo_module.local_function = local_function
    return _cribo_module
@_cribo.functools.cache
def _cribo_init___cribo_a6eb08_test_import():
    _cribo_module = _cribo.types.SimpleNamespace()
    _cribo_module.__name__ = 'test_import'
    """Test module that tries to import pandera.polars.\n\nThis demonstrates what happens when we have a local 'pandera' package\nthat shadows the third-party pandera package, and we try to import\na submodule that only exists in the third-party package.\n"""
    print("Starting test_import.py")
    try:
        import pandera.polars as pa
        _cribo_module.pa = pa
        print("Successfully imported pandera.polars")
        print(f"pandera.polars module: {pa.__name__}")
    except ImportError as e:
        print(f"ImportError: {e}")
    except AttributeError as e:
        print(f"AttributeError: {e}")
    try:
        pandera = _cribo_init___cribo_2b5490_pandera()
        _cribo_module.pandera = pandera
        print("\nImported pandera successfully")
        print(f"pandera.__version__: {pandera.__version__}")
        if hasattr(pandera, "local_function"):
            print(f"This is the local pandera package: {pandera.local_function()}")
        else:
            print("This is the third-party pandera package")
    except ImportError as e:
        print(f"\nFailed to import pandera: {e}")
    return _cribo_module
"""Main entry point that imports test_import to demonstrate module shadowing behavior."""
print("=== Module Shadowing Test (Package Version) ===")
print("This test demonstrates Python's behavior when a first-party package")
print("shadows a third-party package name.\n")
print("\n=== Test Complete ===")
