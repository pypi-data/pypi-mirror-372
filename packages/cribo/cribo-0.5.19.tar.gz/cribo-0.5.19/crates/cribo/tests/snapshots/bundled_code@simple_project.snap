---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/simple_project/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import sys as _sys
import importlib as _importlib
class _CriboModule():

    def __init__(self, m, p):
        self._m, self._p = m, p

    def __getattr__(self, n):
        f = self._p + '.' + n
        try:
            return _CriboModule(_importlib.import_module(f), f)
        except ImportError:
            return getattr(self._m, n)

    def __getattribute__(self, n):
        return object.__getattribute__(self, n) if n in ('_m', '_p', '__getattr__', '__class__', '__dict__', '__dir__', '__module__', '__qualname__') else getattr(object.__getattribute__(self, '_m'), n)
class _Cribo():

    def __getattr__(self, n):
        m = _sys.modules.get(n) or _importlib.import_module(n)
        return _CriboModule(m, n)
_cribo = _Cribo()
@_cribo.dataclasses.dataclass
class User:
    """A simple user model."""
    name: str
    age: int
    email: _cribo.typing.Optional[str] = None

    def is_adult(self) -> bool:
        """Check if the user is an adult."""
        return self.age >= 18

    def get_display_name(self) -> str:
        """Get a display name for the user."""
        if self.email:
            return f"{self.name} <{self.email}>"
        return self.name
def greet(name: str) -> str:
    """Greet a person by name."""
    return f"Hello, {name}!"
def calculate(a: _cribo.typing.Union[int, float], b: _cribo.typing.Union[int, float]) -> _cribo.typing.Union[int, float]:
    """Calculate the sum of two numbers."""
    return a + b
"""Models package initialization."""
"""User model for the test project."""
User.__module__ = 'models.user'
"""Utils package initialization."""
"""Utility functions for the test project."""
models = _cribo.types.SimpleNamespace(__name__='models')
models_user = _cribo.types.SimpleNamespace(__name__='models.user')
models.user = models_user
utils = _cribo.types.SimpleNamespace(__name__='utils')
utils_helpers = _cribo.types.SimpleNamespace(__name__='utils.helpers')
utils.helpers = utils_helpers
models_user.User = User
utils_helpers.greet = greet
utils_helpers.calculate = calculate
"""Simple test project entry point."""
def main():
    """Main function."""
    user = User("Alice", 30)
    print(greet(user.name))
    result = calculate(10, 20)
    print(f"Calculation result: {result}")
    print(f"User: {user.name}, Age: {user.age}")
if __name__ == "__main__":
    main()
