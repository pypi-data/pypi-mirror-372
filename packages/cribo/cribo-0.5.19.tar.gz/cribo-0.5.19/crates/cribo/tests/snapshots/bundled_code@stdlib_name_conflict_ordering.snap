---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/stdlib_name_conflict_ordering/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import sys as _sys
import importlib as _importlib
class _CriboModule():

    def __init__(self, m, p):
        self._m, self._p = m, p

    def __getattr__(self, n):
        f = self._p + '.' + n
        try:
            return _CriboModule(_importlib.import_module(f), f)
        except ImportError:
            return getattr(self._m, n)

    def __getattribute__(self, n):
        return object.__getattribute__(self, n) if n in ('_m', '_p', '__getattr__', '__class__', '__dict__', '__dir__', '__module__', '__qualname__') else getattr(object.__getattribute__(self, '_m'), n)
class _Cribo():

    def __getattr__(self, n):
        m = _sys.modules.get(n) or _importlib.import_module(n)
        return _CriboModule(m, n)
_cribo = _Cribo()
class Base(_cribo.abc.ABC):
    """Base class like rich.abc.RichRenderable"""

    @_cribo.abc.abstractmethod
    def render(self):
        pass

    @classmethod
    def __subclasshook__(cls, other):
        return hasattr(other, "render")
class Console(Base):
    """Console class similar to rich.console.Console"""

    def __init__(self):
        self.buffer: _cribo.typing.List[str] = []

    def render(self):
        return "\n".join(self.buffer)

    def print(self, *args: _cribo.typing.Any):
        self.buffer.append(" ".join(str(arg) for arg in args))
        print(*args)
def main():
    console = Console()
    console.print("Testing")
Console.__module__ = 'complex_pkg.console'
Base.__module__ = 'complex_pkg.abc'
complex_pkg = _cribo.types.SimpleNamespace(__name__='complex_pkg')
complex_pkg_console = _cribo.types.SimpleNamespace(__name__='complex_pkg.console')
complex_pkg.console = complex_pkg_console
complex_pkg_abc = _cribo.types.SimpleNamespace(__name__='complex_pkg.abc')
complex_pkg.abc = complex_pkg_abc
complex_pkg.main = main
complex_pkg_console.Console = Console
complex_pkg_abc.Base = Base
main()
