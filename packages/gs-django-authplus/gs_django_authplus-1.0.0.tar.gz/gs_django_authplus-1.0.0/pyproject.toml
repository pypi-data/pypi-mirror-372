[build-system]
requires = ["hatchling", "Django>=4.1"]
build-backend = "hatchling.build"

[project]
name = "gs-django-authplus"
version = "1.0.0"
description = "Reusable Django application that provides structured permission grouping"
readme = "README.md"
authors = [
    { name = "Sandi Å aban", email = "sandi.saban@gmail.com" }
]
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
    "django",
    "authentication",
    "permissions",
]
requires-python = ">=3.9"
dependencies = [
    "django>=4.1",
]

[tool.coverage.run]
branch = true
omit = [
    "*.html",
]
plugins = [
    "django_coverage_plugin",
]
source = [
    "authplus",
]

[tool.django-stubs]
django_settings_module = "config.settings.base"

[tool.hatch.build]
artifacts = [
    "*.mo",
]

[tool.hatch.build.hooks.custom]
path = "hatch_build.py"

[tool.hatch.build.targets.sdist]
packages = [
    "authplus"
]

[tool.hatch.build.targets.wheel]
packages = [
    "authplus"
]

[tool.mypy]
exclude = [
    ".nox",
    "temp",
]
ignore_missing_imports = true
plugins = [
    "mypy_django_plugin.main",
]
[[tool.mypy.overrides]]
module = [
    "django.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.test"
addopts = """
--cov \
--cov-report html \
--cov-report term-missing:skip-covered \
--cov-report xml:coverage.xml
"""

[tool.ruff]
exclude = [
    "migrations",
]
line-length = 120
target-version = "py313"

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"

[tool.ruff.lint]
select = [
    "ALL",
]
ignore = [
    "D100",
    "D104",
    "D203",
    "D212",
    "EM101",
    "EXE003",
    "F401",
    "Q000",
    "TRY003",
]

[tool.ruff.lint.isort]
known-first-party = [
]
section-order = [
    "future",
    "standard-library",
    "django",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
"django" = ["django"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"**/tests/*.py" = [
    "D",
    "S101",
]

[dependency-groups]
lint = [
    "django-stubs[compatible-mypy]>=5.1.2",
    "mypy>=1.14.1",
    "ruff>=0.9.3",
]
test = [
    "coverage>=7.6.10",
    "django-coverage-plugin>=3.1.0",
    "factory-boy>=3.3.1",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-django>=4.9.0",
]
dev = [
    {include-group = "lint"},
    {include-group = "test"},
    "django-debug-toolbar>=5.0.1",
    "nox>=2025.5.1",
]
