# pyproject.toml - Dana Project Configuration
# Copyright Â© 2025 Aitomatic, Inc. Licensed under the MIT License.

# =============================================================================
# Build System Configuration
# =============================================================================

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

# =============================================================================
# Project Metadata
# =============================================================================

[project]
name = "dana"
version = "0.4.9.1"
description = "Dana programming language for Domain-Aware Neurosymbolic Agents"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Christopher Nguyen", email = "ctn@aitomatic.com"},
]

# Core dependencies organized by functionality
dependencies = [
    # AI/LLM Integration
    "google-cloud-aiplatform",
    "aisuite[openai,anthropic,azure,groq,huggingface,ollama]>=0.1.11",
    "httpx>=0.27.0",
    "mcp",
    "llm-code-executor",
    "llama-index",
    "openai>=1.55.3",
    # Language Processing
    "lark",
    # Data Processing
    "pandas",
    "matplotlib",
    "seaborn",
    # Database & Storage
    "sqlalchemy",
    # Networking & I/O
    "aiohttp",
    "aioconsole",
    "websockets",
    # Configuration & Utilities
    "python-dotenv",
    "pyyaml",
    "structlog",
    # Interactive Features
    "prompt-toolkit",
    "pygments",
    "textual",
    "pyperclip",
    # Web Automation
    "playwright",
    # API Server
    "fastapi",
    "uvicorn",
    # Testing Framework (needed for Dana runtime)
    "pytest",
    "pytest-asyncio",
    "pytest-mock",
    # Language Server Protocol
    "lsprotocol",
    "pygls",
    # Agent Integration
    "python-a2a>=0.5.9",
    # Misc / Other
    "tqdm",
    "aicapture",
    "python-lsp-server[all]>=1.13.0",
    "pyright>=1.1.403",
    "jedi>=0.19.2",
    "llama-index-embeddings-openai>=0.3.1",
    "llama-index-llms-cohere>=0.5.0",
    "llama-index-vector-stores-duckdb>=0.4.6",
    "llama-index-vector-stores-postgres>=0.5.5",
    "pymupdf>=1.25.3", # PDF processing and manipulation library
    "pillow>=11.1.0", # Python Imaging Library for image processing
    "numpy>=2.2.3", # Numerical computing library for array operations
    "opencv-python>=4.11.0.86", # Computer vision library for image processing
    "loguru>=0.7.3", # Better logging library than Python's built-in logging
    "textual-dev>=1.7.0",
    "llama-index-core>=0.13.0",
]

# Optional dependency groups
[project.optional-dependencies]
dev = [
    "ruff",       # Fast Python linter
    "pylint",     # Additional code analysis
    "mypy",       # Static type checking
    "pre-commit", # Git hooks for code quality
    "pytest-cov", # Test coverage reporting
    "build",      # Package building tool
    "twine",      # PyPI upload tool
    "textual-dev",
]

docs = [
    # Core Documentation
    "mkdocs",
    "mkdocs-material",
    "mkdocs-mermaid2-plugin",
    "mkdocs-section-index",
    "mkdocstrings",
    "mkdocstrings-python",
    "mkdocs-git-revision-date-localized-plugin",
    "pymdown-extensions[extra]",

    # Auto-sync and Generation
    "mkdocs-gen-files",              # Generate docs from code structure
    "mkdocs-literate-nav",           # Auto-generate navigation

    # Validation Tools
    "mkdocs-htmlproofer-plugin",     # Broken link detection
    "linkcheckmd",                   # Fast async link checking
    "doc8",                          # Documentation style checking

    # Advanced Features
    "mkdocs-redirects",              # Handle URL changes
    "mkdocs-awesome-nav",            # Advanced navigation control
    "mkdocs-print-site-plugin",      # PDF export for offline reading
    "mkdocs-include-markdown-plugin",# Reusable content blocks
    "mkdocs-macros-plugin",          # Variables and templating
    "mkdocs-table-reader-plugin",    # Data tables from CSV/JSON
]

# Command-line entry points
[project.scripts]
dana = "dana.apps.cli.__main__:main"
dana-ls = "dana.core.lang.lsp.server:main"

# =============================================================================
# Package Configuration
# =============================================================================

[tool.setuptools]
[tool.setuptools.packages.find]
where = ["."]
include = ["dana*"]
exclude = ["tests*", "examples*", "docs*", "tmp*"]

[tool.setuptools.package-data]
dana = ["**/*.py", "**/*.lark", "**/*.json", "**/api/server/static/**/*"]

# =============================================================================
# Package Manager Configuration (uv)
# =============================================================================

[tool.uv]
package = true
preview = true                      # Enable preview features
resolution = "highest"              # Use highest compatible versions
prerelease = "disallow"             # Avoid pre-release versions
python-preference = "only-managed"  # Use uv-managed Python installations
compile-bytecode = true             # Pre-compile .pyc files for performance


[tool.uv.sources]
# Future: Custom dependency sources

[dependency-groups]
dev = [
    "pre-commit",
    "build",
    "twine",
]

# =============================================================================
# Code Quality Tools
# =============================================================================

[tool.black]
line-length = 140
target-version = ["py312"]

[tool.ruff]
line-length = 140
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "B",   # bugbear (common Python gotchas)
    "UP",  # pyupgrade (modern Python features)
    "N801", "N803", "N804",  # naming conventions
    "F821", "F822", "F841", "F401",  # undefined names, unused variables/imports
]

ignore = [
    "E203",  # Whitespace before ':' (conflicts with Black)
    "E402",  # Module level import not at top of file (intentional in CLI)
    "E501",  # Line too long (handled by line-length)
    "B008",  # Function call in default argument
    "B010",  # setattr in class body
    "B904",  # raise ... from ...
    "N802",  # Function name should be lowercase
    "I001",  # import block is un-sorted or un-formatted
    "UP007",  # use `X | Y` for type annotations
    "F403",  # import * used; unable to detect undefined names (acceptable in __init__.py)
    "B024",  # Abstract base class without abstract methods (design pattern choice)
]

exclude = [
    "*.na",           # Dana language files
    ".git",           # Version control
    ".venv",          # Virtual environment
    "dana.egg-info",  # Build artifacts
    "__pycache__",    # Python cache
    ".pytest_cache",  # Pytest cache
    ".ruff_cache",    # Ruff cache
    "**/.archived/**", # Archived/legacy code
]

[tool.pyright]
reportAttributeAccessIssue = false
reportGeneralTypeIssues = false
reportAssignmentType = false

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "dana.core.lang.interpreter.*"
disallow_untyped_defs = true
