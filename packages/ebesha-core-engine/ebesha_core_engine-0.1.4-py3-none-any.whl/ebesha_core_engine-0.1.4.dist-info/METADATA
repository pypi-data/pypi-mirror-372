Metadata-Version: 2.4
Name: ebesha-core-engine
Version: 0.1.4
Summary: Modular core engine for Python microservices
Author-email: Lintas Media Danawa <hello@ebesha.net>
License: LMD
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: cryptography>=44.0.0
Requires-Dist: djangorestframework>=3.15.2
Requires-Dist: django-celery-beat>=2.7.0
Requires-Dist: django-cors-headers>=4.6.0
Requires-Dist: django-extensions>=3.2.3
Requires-Dist: django-filter>=24.3
Requires-Dist: django-request-logging>=0.7.5
Requires-Dist: django-rest-swagger>=2.2.0
Requires-Dist: django-timezone-field>=7.1
Requires-Dist: django-user-agents>=0.4.0
Requires-Dist: djangorestframework>=3.15.2
Requires-Dist: djangorestframework-recursive>=0.1.2
Requires-Dist: amqp>=5.3.1
Requires-Dist: PyJWT>=2.10.1
Requires-Dist: kombu>=5.4.2
Requires-Dist: pika>=1.3.2
Requires-Dist: python-dotenv>=1.1.0
Requires-Dist: typer>=0.15.4
Requires-Dist: psycopg2>=2.9
Requires-Dist: redis>=5.2.1
Requires-Dist: requests>=2.32.3
Requires-Dist: celery>=5.4.0

# core_engine

Modular core engine for Python-based microservices.  
This package provides reusable components such as authentication, caching, database connectivity, queue management, and external integrations.

---

## üì¶ Features

- **Authentication (`auth`)**  
  Handle user authentication logic and services.

- **Bridges (`bridges`)**  
  Communication logic between internal modules.  
  - `module`: Handles system integration logic.  
  - `user_management`: Manages user access control.

- **Caching (`caches`)**  
  Redis-based caching services.

- **Database Connectivity (`connectivity`)**  
  Abstractions for building and running database queries.

- **Custom Query (`custom_query`)**  
  Contains raw SQL files and custom database queries.

- **External Integration (`external_integration`)**  
  Handles API and service communication with external systems.

- **Queueing (`queueing`)**  
  RabbitMQ or similar queue implementations.

- **Utilities (`utilities`)**  
  Helper functions such as validation, pagination, etc.

- **Connection Modules**  
  Shared connection helpers:
  - `connection.py`: DB or external service connection.
  - `constants.py`: Shared constant values.

---

## üõ†Ô∏è Installation

Make sure you have Python 3.8+ and `pip`.

Url https://pypi.org/project/ebesha-core-engine/0.1.2/

```bash
# Install as package
pip install ebesha-core-engine

# Update to Pypi Public
pip install twine
twine upload dist/*
