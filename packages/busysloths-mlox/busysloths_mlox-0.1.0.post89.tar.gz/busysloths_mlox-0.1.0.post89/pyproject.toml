[build-system]
requires = ["setuptools", "setuptools-git-versioning"]
build-backend = "setuptools.build_meta"

[project]
name = "busysloths-mlox"
readme = "README.md"
keywords = ["Infrastructure", "Server", "Service", "Dashboard", "Opinionated", "MLOps"]
license = { file = "LICENSE" }
description = "Accelerate your ML journeyâ€”deploy production-ready MLOps in minutes, not months."
requires-python = ">=3.11"
authors = [{ name = "nicococo", email = "contact@mlox.org" }]
classifiers = [
    # How mature is this project? Common values are
    #   1 - Planning
    #   2 - Pre-Alpha 
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    "Development Status :: 3 - Alpha",

    # Indicate who your project is intended for
    "Intended Audience :: Developers",
    "Topic :: Software Development",
    "Topic :: System :: Distributed Computing",
    "Topic :: Internet",
    "Topic :: Database",

    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dynamic = ["version"]

# Core/runtime dependencies (minimal, pinned with >= to allow compatibility)
dependencies = [
    "dacite>=1.8",
    "pyyaml>=6.0",
    "fabric>=3.0",
    "paramiko>=3.0",            # SSH support used by Fabric
    "cryptography>=40.0",
    "bcrypt>=4.0",
    "passlib>=1.7",
    "typer>=0.9",               # CLI helpers
    "grpcio>=1.59",
    "requests>=2.31",
    "python-dotenv>=1.0",
]

[project.optional-dependencies]
# GCP related extras
gcp = [
    "pandas>=2.2",
    "gspread>=5.8",
    "pandas-gbq>=0.20",
    "google-cloud-storage>=2.10",
    "google-cloud-bigquery>=3.10",
    "google-cloud-secret-manager>=2.18",
]

all = [
    # UI and data
    "streamlit>=1.26",
    "streamlit-vis-timeline>=0.0.6",
    "backports.tarfile>=1.0",
    "pandas>=2.2",
    "numpy>=1.26",
    # GCP
    "gspread>=5.8",
    "pandas-gbq>=0.20",
    "google-cloud-storage>=2.10",
    "google-cloud-bigquery>=3.10",
    "google-cloud-secret-manager>=2.18",
    # ML
    "mlflow>=2.5",
    "mlserver>=1.7",
    "psutil>=5.9",
    # Telemetry
    "opentelemetry-api>=1.17",
    "opentelemetry-sdk>=1.17",
    "opentelemetry-exporter-otlp>=1.17",
    # Connectors
    "redis>=4.6",
    "influxdb>=5.3",
    "grpcio>=1.59",
    # Database
    "psycopg2-binary>=2.9",
]

dev = [
    # developer extras (includes 'all')
    "streamlit>=1.26",
    "streamlit-vis-timeline>=0.0.6",
    "backports.tarfile>=1.0",
    "pandas>=2.2",
    "numpy>=1.26",
    "gspread>=5.8",
    "pandas-gbq>=0.20",
    "google-cloud-storage>=2.10",
    "google-cloud-bigquery>=3.10",
    "google-cloud-secret-manager>=2.18",
    "mlflow>=2.5",
    "mlserver>=1.7",
    "psutil>=5.9",
    "opentelemetry-api>=1.17",
    "opentelemetry-sdk>=1.17",
    "opentelemetry-exporter-otlp>=1.17",
    "redis>=4.6",
    "influxdb>=5.3",
    "grpcio>=1.59",
    # Development tools
    "pytest>=8.3",
    "pytest-cov>=4.1",
    "pytest-mock>=3.11",
    "flake8>=6.1",
    "pdoc>=12.0",
    "build>=1.1",
    "twine>=4.0",
    "psycopg2-binary>=2.9",
]

[project.urls]
"Homepage" = "https://busysloths.github.io/mlox/mlox.html"
"Tracker" = "https://github.com/busysloths/mlox/issues"
"Source" = "https://github.com/busysloths/mlox"
"Examples" = "https://github.com/busysloths/mlox"

[project.scripts]
mlox-start-multipass = "mlox.cli:start_multipass"
mlox-ui = "mlox.cli:start_ui"
mlox = "mlox.cli:app"


[tool.setuptools-git-versioning]
enabled = true
# Use the tag directly for a clean release version (e.g., v0.1.0 -> 0.1.0)
template = "{tag}"
# For development builds after a tag (e.g., v0.1.0 + 2 commits -> 0.1.0.post2)
dev_template = "{tag}.post{ccount}"
# ATTENTION: Dirty builds are no longer accepted in PyPI, so this is commented out.
# For dirty builds (e.g., uncommitted changes after a tag -> 0.1.0.post2.dirty)
# dirty_template = "{tag}.post{ccount}+dirty"

[tool.setuptools]
include-package-data = true
packages = ["mlox"]
