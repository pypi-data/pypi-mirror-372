Metadata-Version: 2.4
Name: torch_swan
Version: 0.0.1
Summary: SWAN (Switchable Activation Networks) for Efficient and Scalable Vision Transformers
Project-URL: Homepage, https://github.com/ainilaha/swan
Project-URL: Issue, https://github.com/ainilaha/swan/issues
Project-URL: Repository, https://github.com/ainilaha/swan
Author-email: Laha Ale <ainilaha@gmail.com>
License: Copyright (C) 2025 Laha Ale
        
        Permission is hereby granted, free of charge, to any person obtaining
        a copy of this software and associated documentation files (the
        "Software"), to deal in the Software without restriction, including
        without limitation the rights to use, copy, modify, merge, publish,
        distribute, sublicense, and/or sell copies of the Software, and to
        permit persons to whom the Software is furnished to do so, subject to
        the following conditions:
        
        The above copyright notice and this permission notice shall be
        included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
        EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
        NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
        LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
        OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
        WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
License-File: LICENSE
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.8
Requires-Dist: numpy>=1.21
Requires-Dist: torch>=2.0
Requires-Dist: torchvision>=0.15
Provides-Extra: dev
Requires-Dist: build; extra == 'dev'
Requires-Dist: pytest; extra == 'dev'
Requires-Dist: ruff; extra == 'dev'
Requires-Dist: twine; extra == 'dev'
Description-Content-Type: text/markdown

# SWAN: Switchable Activation Networks

## Overview
<img src="logo.png" alt="drawing" width="300"/>

SWAN (Switchable Activation Networks) is a Python-based framework for training and optimizing neural networks with switchable activation units. It provides tools for pruning and exporting dense models, as well as benchmarking latency for efficient deployment.

## Features
- **Trainable Switchable Activation Units**: Dynamically adjust activation units during training for optimal performance.
- **Model Pruning**: Export pruned dense models based on gate probabilities to reduce model size and complexity.
- **Latency Measurement**: Benchmark model inference latency for deployment on various devices.
- **MNIST Example**: Includes a minimal example for training on the MNIST dataset.

## Requirements
- Python 3.8+
- PyTorch
- Torchvision
- NumPy

## Installation
Clone the repository and install the required dependencies:
```bash
git clone <repository-url>
cd SWAN

python -m pip uninstall -y torch-swan torch_swan
python -m pip install -e .
```

Or install via pip:
```bash
pip install torch_swan
```

```Python
import torch_swan as swan


```


Examples
```bash
python main.py mnist --device mps --epochs 5

nohup python main.py vgg16 --epochs 50 --device npu  --threshold 0.6 --resize 224 --batch_size 200  > train.log 2>&1 &

nohup python main.py vgg16 --epochs 50 --device gpu  --threshold 0.6 --resize 224 --batch_size 256 --pretrained False > train.log 2>&1 &

```