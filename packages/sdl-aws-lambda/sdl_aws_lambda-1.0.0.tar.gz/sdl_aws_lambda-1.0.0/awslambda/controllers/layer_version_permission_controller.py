# -*- coding: utf-8 -*-

"""
awslambda

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from awslambda.api_helper import APIHelper
from awslambda.configuration import Server
from awslambda.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from awslambda.http.http_method_enum import HttpMethodEnum


class LayerVersionPermissionController(BaseController):

    """A Controller to access Endpoints in the awslambda API."""
    def __init__(self, config):
        super(LayerVersionPermissionController, self).__init__(config)

    def add_layer_version_permission(self,
                                     layer_name,
                                     revision_id,
                                     version_number,
                                     action):
        """Does a GET request to /.

        Args:
            layer_name (str): The name or Amazon Resource Name (ARN) of the
                layer.
            revision_id (str): Only update the policy if the revision ID
                matches the ID specified. Use this option                     
                to avoid modifying a                                 policy
                that has changed since you last read it.
            version_number (str): The version number.
            action (str): The request query parameter.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('LayerName')
                         .value(layer_name))
            .query_param(Parameter()
                         .key('RevisionId')
                         .value(revision_id))
            .query_param(Parameter()
                         .key('VersionNumber')
                         .value(version_number))
            .query_param(Parameter()
                         .key('Action')
                         .value(action))
        ).execute()

    def remove_layer_version_permission(self,
                                        layer_name,
                                        revision_id,
                                        statement_id,
                                        version_number,
                                        action):
        """Does a GET request to /.

        Args:
            layer_name (str): The name or Amazon Resource Name (ARN) of the
                layer.
            revision_id (str): Only update the policy if the revision ID
                matches the ID specified. Use this option                     
                to avoid modifying a                                 policy
                that has changed since you last read it.
            statement_id (str): The identifier that was specified when the
                statement was added.
            version_number (str): The version number.
            action (str): The request query parameter.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('LayerName')
                         .value(layer_name))
            .query_param(Parameter()
                         .key('RevisionId')
                         .value(revision_id))
            .query_param(Parameter()
                         .key('StatementId')
                         .value(statement_id))
            .query_param(Parameter()
                         .key('VersionNumber')
                         .value(version_number))
            .query_param(Parameter()
                         .key('Action')
                         .value(action))
        ).execute()
