Metadata-Version: 2.4
Name: nagini3D
Version: 0.1.2
Summary: Implementation of NAGINI-3D, a python package designed for Multi-Object Segmentation in Biological Imaging based on deep learning and active surfaces.
Project-URL: Homepage, https://github.com/QuentinRapilly/NAGINI-3D
Project-URL: Issues, https://github.com/QuentinRapilly/NAGINI-3D/issues
Author-email: Quentin RAPILLY <quentin.RAPILLY@inria.fr>
License-Expression: AGPL-3.0
License-File: LICENSE
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Requires-Dist: csbdeep==0.7.4
Requires-Dist: einops==0.7.0
Requires-Dist: omegaconf==2.3.0
Requires-Dist: scikit-image==0.21.0
Requires-Dist: scipy==1.11.3
Provides-Extra: full
Requires-Dist: hydra-core==1.3.2; extra == 'full'
Requires-Dist: numpy>=1.26.4; extra == 'full'
Requires-Dist: tifffile==2024.2.12; extra == 'full'
Requires-Dist: wandb==0.15.12; extra == 'full'
Description-Content-Type: text/markdown

# NAGINI-3D | Prediction of Parametric Surfaces for Multi-Object Segmentation in 3D Biological Imaging

We present NAGINI-3D (N-Active shapes for seGmentINg 3D biological Images), a method dedicated to 3D biological images segmentation, based on both deep learning (CNN) and Active Surfaces (Snakes).

This package implement the method described in:

- Quentin RAPILLY, Ana√Øs BADOUAL,Pierre MAINDRON, Guenaelle BOUET, Charles KERVRANN.
*Prediction of Parametric Surfaces for Multi-Object Segmentation in 3D Biological Imaging*.
Scale Space and Variational Methods in Computer Vision. SSVM 2025. Lecture Notes in Computer Science, vol 15667, Devon, UK, May 2025,
[(preprint)](https://hal.science/hal-04978619), [(final paper)](https://link.springer.com/chapter/10.1007/978-3-031-92366-1_20).

All details on the implementation and the tutorials are available on [the github of the project.](https://github.com/QuentinRapilly/NAGINI-3D)

## Versions

### 0.1.1

**Anisotropic version:** option to process highly anisotropic images.

### 0.0.2

**Paper version**: code used to assess our method for SSVM submission.

### 0.0.1

**Test version**: first pypi version.
