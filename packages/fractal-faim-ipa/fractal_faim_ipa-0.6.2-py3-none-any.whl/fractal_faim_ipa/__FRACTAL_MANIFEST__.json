{
  "manifest_version": "2",
  "task_list": [
    {
      "name": "Convert MD to OME-Zarr",
      "category": "Conversion",
      "modality": "HCS",
      "tags": [
        "Molecular Devices",
        "Image Xpress",
        "MD"
      ],
      "docs_info": "### Purpose\n- Converts **2D and 3D images from MD Molecular Devices** systems into OME-Zarr format, creating OME-Zarr HCS plates and combining all fields of view in a well into a single image.\n- Saves Fractal **region-of-interest (ROI) tables** for both individual fields of view and the entire well.\n- Handles overlapping fields of view by either fusing images or saving them in grid tiles (depending on the `tile_alignment` option).\n\n### Limitations\n- The `image_dir` needs to be set to the the parent folder containing the following sub-folders: YYYY-MM-DD / Project_ID / Actual image files (potentially in ZStep folders). If it is run directly from the folder containing the images, it will fail.\n",
      "type": "converter_non_parallel",
      "executable_non_parallel": "convert_md_to_ome_zarr.py",
      "meta_non_parallel": {
        "cpus_per_task": 8,
        "mem": 32000
      },
      "args_schema_non_parallel": {
        "$defs": {
          "AcquisitionInputModel": {
            "description": "Acquisition metadata.",
            "properties": {
              "path": {
                "title": "Path",
                "type": "string",
                "description": "Path to the acquisition directory. For the MD, this is the folder that contains a date folder and an ID folder. If the images are in /path/to/project_name/2025-05-12/1234, then the path should be /path/to/project_name."
              },
              "plate_name": {
                "title": "Plate Name",
                "type": "string",
                "description": "Optional custom name for the plate. If not provided, the name will be the acquisition directory name."
              },
              "acquisition_id": {
                "default": 0,
                "minimum": 0,
                "title": "Acquisition Id",
                "type": "integer",
                "description": "Acquisition ID, used to identify the acquisition in case of multiple acquisitions."
              }
            },
            "required": [
              "path"
            ],
            "title": "AcquisitionInputModel",
            "type": "object"
          }
        },
        "additionalProperties": false,
        "properties": {
          "zarr_dir": {
            "title": "Zarr Dir",
            "type": "string",
            "description": "path of the directory where the new OME-Zarrs will be created. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "acquisitions": {
            "items": {
              "$ref": "#/$defs/AcquisitionInputModel"
            },
            "title": "Acquisitions",
            "type": "array",
            "description": "List of acquisition directories to convert to OME-Zarr. If you are processing multiplexing experiments, name the plate the same for all acquisitions, but give them unique acquisition IDs. If you are processing multiple separate plates, give the plates unique names."
          },
          "mode": {
            "enum": [
              "Stack Acquisition",
              "Single Plane Acquisition",
              "Mixed Acquisition"
            ],
            "title": "Mode",
            "type": "string",
            "description": "Choose conversion mode. Choose whether you have 3D data (StackAcquisition), 2D data (Single Plane Acquisition) or mixed (Mixed Acquisition)."
          },
          "tile_alignment": {
            "default": "GridAlignment",
            "enum": [
              "StageAlignment",
              "GridAlignment"
            ],
            "title": "Tile Alignment",
            "type": "string",
            "description": "Choose whether tiles are placed into the OME-Zarr as a grid or whether they are placed based on the position of field of views in the metadata (using fusion for shared areas)."
          },
          "layout": {
            "default": 96,
            "enum": [
              96,
              384
            ],
            "title": "Layout",
            "type": "integer",
            "description": "Plate layout for the Zarr file. Valid options are 96 and 384"
          },
          "num_levels": {
            "default": 5,
            "title": "Num Levels",
            "type": "integer",
            "description": "Number of pyramid levels to build in an OME-Zarr. More levels are useful for large plates to allow easier plate visualization, but will also lead to more files being created."
          },
          "order_name": {
            "default": "example-order",
            "title": "Order Name",
            "type": "string",
            "description": "Name of the order"
          },
          "barcode": {
            "default": "example-barcode",
            "title": "Barcode",
            "type": "string",
            "description": "Barcode of the plate"
          },
          "reset_plates": {
            "default": false,
            "title": "Reset Plates",
            "type": "boolean",
            "description": "Whether to remove any potentially pre-existing OME-Zarr plates before conversion."
          },
          "binning": {
            "default": 1,
            "title": "Binning",
            "type": "integer",
            "description": "Binning factor to downsample the original image. If set to 2, an image that is 2x2 downsampled in xy will be produced."
          },
          "parallelize": {
            "default": true,
            "title": "Parallelize",
            "type": "boolean",
            "description": "The automatic distribute.Client option often fails to finish when running the task locally. Set parallelize to false to avoid that."
          }
        },
        "required": [
          "zarr_dir",
          "acquisitions",
          "mode"
        ],
        "type": "object",
        "title": "ConvertMdToOmeZarr"
      },
      "docs_link": "https://github.com/fractal-analytics-platform/fractal-faim-ipa"
    },
    {
      "name": "FAIM-IPA Convert Cellvoyager to OME-Zarr",
      "category": "Conversion",
      "modality": "HCS",
      "tags": [
        "Molecular Devices",
        "Image Xpress",
        "MD"
      ],
      "docs_info": "### Purpose\n- Converts **2D and 3D images from MD Molecular Devices** systems into OME-Zarr format, creating OME-Zarr HCS plates and combining all fields of view in a well into a single image.\n- Saves Fractal **region-of-interest (ROI) tables** for both individual fields of view and the entire well.\n- Handles overlapping fields of view by either fusing images or saving them in grid tiles (depending on the `tile_alignment` option).\n\n### Limitations\n- The `image_dir` needs to be set to the the parent folder containing the following sub-folders: YYYY-MM-DD / Project_ID / Actual image files (potentially in ZStep folders). If it is run directly from the folder containing the images, it will fail.\n",
      "type": "converter_non_parallel",
      "executable_non_parallel": "convert_cellvoyager_to_ome_zarr.py",
      "meta_non_parallel": {
        "cpus_per_task": 8,
        "mem": 32000
      },
      "args_schema_non_parallel": {
        "$defs": {
          "AcquisitionInputModel": {
            "description": "Acquisition metadata.",
            "properties": {
              "path": {
                "title": "Path",
                "type": "string",
                "description": "Path to the acquisition directory. For the MD, this is the folder that contains a date folder and an ID folder. If the images are in /path/to/project_name/2025-05-12/1234, then the path should be /path/to/project_name."
              },
              "plate_name": {
                "title": "Plate Name",
                "type": "string",
                "description": "Optional custom name for the plate. If not provided, the name will be the acquisition directory name."
              },
              "acquisition_id": {
                "default": 0,
                "minimum": 0,
                "title": "Acquisition Id",
                "type": "integer",
                "description": "Acquisition ID, used to identify the acquisition in case of multiple acquisitions."
              }
            },
            "required": [
              "path"
            ],
            "title": "AcquisitionInputModel",
            "type": "object"
          }
        },
        "additionalProperties": false,
        "properties": {
          "zarr_dir": {
            "title": "Zarr Dir",
            "type": "string",
            "description": "path of the directory where the new OME-Zarrs will be created. (standard argument for Fractal tasks, managed by Fractal server)."
          },
          "acquisitions": {
            "items": {
              "$ref": "#/$defs/AcquisitionInputModel"
            },
            "title": "Acquisitions",
            "type": "array",
            "description": "List of acquisition directories to convert to OME-Zarr. If you are processing multiplexing experiments, name the plate the same for all acquisitions, but give them unique acquisition IDs. If you are processing multiple separate plates, give the plates unique names."
          },
          "tile_alignment": {
            "default": "GridAlignment",
            "enum": [
              "StageAlignment",
              "GridAlignment"
            ],
            "title": "Tile Alignment",
            "type": "string",
            "description": "Choose whether tiles are placed into the OME-Zarr as a grid or whether they are placed based on the position of field of views in the metadata (using fusion for shared areas)."
          },
          "layout": {
            "default": 96,
            "enum": [
              96,
              384
            ],
            "title": "Layout",
            "type": "integer",
            "description": "Plate layout for the Zarr file. Valid options are 96 and 384"
          },
          "num_levels": {
            "default": 5,
            "title": "Num Levels",
            "type": "integer",
            "description": "Number of pyramid levels to build in an OME-Zarr. More levels are useful for large plates to allow easier plate visualization, but will also lead to more files being created."
          },
          "background_correction_matrices": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "Background Correction Matrices",
            "type": "object",
            "description": "Faim-IPA background correction matrices."
          },
          "illumination_correction_matrices": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "Illumination Correction Matrices",
            "type": "object",
            "description": "Faim-IPA illumination correction matrices."
          },
          "trace_log_files": {
            "items": {
              "type": "string"
            },
            "title": "Trace Log Files",
            "type": "array",
            "description": "List of cellvoyager log files to be used to trace Z focus positions for better alignmnent in Z of search-first tiles."
          },
          "order_name": {
            "default": "example-order",
            "title": "Order Name",
            "type": "string",
            "description": "Name of the order"
          },
          "barcode": {
            "default": "example-barcode",
            "title": "Barcode",
            "type": "string",
            "description": "Barcode of the plate"
          },
          "reset_plates": {
            "default": false,
            "title": "Reset Plates",
            "type": "boolean",
            "description": "Whether to remove any potentially pre-existing OME-Zarr plates before conversion."
          },
          "z_chunking": {
            "default": 1,
            "title": "Z Chunking",
            "type": "integer",
            "description": "Number of Z slices to chunk together."
          },
          "binning": {
            "default": 1,
            "title": "Binning",
            "type": "integer",
            "description": "Binning factor to downsample the original image. If set to 2, an image that is 2x2 downsampled in xy will be produced."
          },
          "parallelize": {
            "default": true,
            "title": "Parallelize",
            "type": "boolean",
            "description": "The automatic distribute.Client option often fails to finish when running the task locally. Set parallelize to false to avoid that."
          }
        },
        "required": [
          "zarr_dir",
          "acquisitions"
        ],
        "type": "object",
        "title": "ConvertCellvoyagerToOmeZarr"
      },
      "docs_link": "https://github.com/fractal-analytics-platform/fractal-faim-ipa"
    }
  ],
  "has_args_schemas": true,
  "args_schema_version": "pydantic_v2",
  "authors": null
}
