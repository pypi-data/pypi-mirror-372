# =============================================================================
# Main Application Container - PostgreSQL + FastAPI with Persistent Storage
# =============================================================================

services:
  # Main PostgreSQL with persistent storage
  main-postgres:
    image: agnohq/pgvector:16
    container_name: hive-main-postgres
    restart: unless-stopped
    ports:
      - "${HIVE_WORKSPACE_POSTGRES_PORT:-5532}:5432"
    env_file:
      - ../../.env
    environment:
      # Main app postgres settings - inherits from root .env but can override
      - PGDATA=/var/lib/postgresql/data/pgdata
      # Credentials extracted from HIVE_DATABASE_URL by entrypoint
    volumes:
      - ../../data/postgres:/var/lib/postgresql/data
      - ./extract_db_credentials.sh:/extract_db_credentials.sh:ro
    entrypoint: ["/extract_db_credentials.sh", "docker-entrypoint.sh"]
    # Sets the container user to match the host user, preventing volume permission
    # issues on Linux/macOS. Defaults to 1000:1000.
    # Override by setting POSTGRES_UID and POSTGRES_GID in your shell environment.
    user: "${POSTGRES_UID:-1000}:${POSTGRES_GID:-1000}"
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
    networks:
      - main_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Main FastAPI Application
  app:
    build:
      context: ../../
      dockerfile: docker/main/Dockerfile
      target: production
    container_name: hive-main-app
    restart: unless-stopped
    ports:
      - "${HIVE_API_PORT:-8886}:${HIVE_API_PORT:-8886}"
    env_file:
      - ../../.env
    environment:
      # Override just the host part of database URL for Docker service discovery
      - HIVE_DATABASE_HOST=main-postgres
      - HIVE_DATABASE_PORT=5432
    volumes:
      - main_app_logs:/app/logs
      - main_app_data:/app/data
      - ../../data:/app/shared_data
    depends_on:
      main-postgres:
        condition: service_healthy
    networks:
      - main_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${HIVE_API_PORT:-8886}/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  main_network:
    driver: bridge
    name: hive_main_network

volumes:
  main_app_logs:
    driver: local
    name: hive_main_app_logs
  main_app_data:
    driver: local
    name: hive_main_app_data