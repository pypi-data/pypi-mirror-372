{"version":3,"file":"node_modules_aws-amplify_core_dist_esm_singleton_apis_fetchAuthSession_mjs.182232e7bc6311fe4528.js","mappings":";;;;;;;;;;;;;;;AAAyC;AACgD;;AAEzF;AACA;AACA;AACA;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA,WAAW,gFAAkB,CAAC,iDAAO;AACrC;;AAE4B;AAC5B;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;AAE4B;AAC5B","sources":["webpack://mito_ai/./node_modules/@aws-amplify/core/dist/esm/singleton/apis/fetchAuthSession.mjs","webpack://mito_ai/./node_modules/@aws-amplify/core/dist/esm/singleton/apis/internal/fetchAuthSession.mjs"],"sourcesContent":["import { Amplify } from '../Amplify.mjs';\nimport { fetchAuthSession as fetchAuthSession$1 } from './internal/fetchAuthSession.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Fetch the auth session including the tokens and credentials if they are available. By default it\n * will automatically refresh expired auth tokens if a valid refresh token is present. You can force a refresh\n * of non-expired tokens with `{ forceRefresh: true }` input.\n *\n * @param options - Options configuring the fetch behavior.\n * @throws {@link AuthError} - Throws error when session information cannot be refreshed.\n * @returns Promise<AuthSession>\n */\nconst fetchAuthSession = (options) => {\n    return fetchAuthSession$1(Amplify, options);\n};\n\nexport { fetchAuthSession };\n//# sourceMappingURL=fetchAuthSession.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst fetchAuthSession = (amplify, options) => {\n    return amplify.Auth.fetchAuthSession(options);\n};\n\nexport { fetchAuthSession };\n//# sourceMappingURL=fetchAuthSession.mjs.map\n"],"names":[],"sourceRoot":""}