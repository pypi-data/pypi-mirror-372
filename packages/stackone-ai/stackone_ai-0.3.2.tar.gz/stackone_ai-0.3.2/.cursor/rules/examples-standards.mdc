---
description: Standards for creating and maintaining examples for all functionality
globs: examples/*
---
# Examples Standards

Standards for creating and maintaining examples in the StackOne repository.

<rule>
name: examples_standards
description: Standards for creating and maintaining examples for all functionality

filters:
  - type: path
    pattern: "^examples/.*"

actions:
  - type: suggest
    message: |
      When working with examples:

      1. Location Requirements:
         ```
         examples/
         ├── basic_usage/
         │   ├── basic_tool_usage.py      # Basic usage examples
         │   └── error_handling.py        # Error handling examples
         ├── integrations/                # Integration examples
         │   ├── openai_integration.py
         │   └── other_integration.py
         └── README.md                    # Examples documentation
         ```

      2. Example Requirements:
         - Every public function/class needs at least one example
         - Examples should be runnable Python scripts
         - Include error handling cases
         - Load credentials from .env
         - Include type hints
         - Follow the same code style as the main codebase

      3. Documentation:
         - Each example file should start with a docstring explaining its purpose
         - Include expected output in comments
         - Document any prerequisites (environment variables, etc)

      4. Testing:
         - Examples should be tested as part of CI
         - Examples should work with the latest package version
         - Include sample responses in comments

examples:
  - input: |
      # Good example structure
      import os
      from dotenv import load_dotenv
      from stackone_ai import StackOneToolSet

      def main():
          """Example showing basic usage of StackOneToolSet."""
          load_dotenv()
          
          api_key = os.getenv("STACKONE_API_KEY")
          if not api_key:
              raise ValueError("STACKONE_API_KEY not found")
              
          # Example code...

      if __name__ == "__main__":
          main()
    output: "Correctly structured example"

  - input: |
      # Bad example - missing error handling, docs, types
      from stackone_ai import StackOneToolSet

      toolset = StackOneToolSet("hardcoded_key")
      tools = toolset.get_tools("crm")
      result = tools["some_tool"].execute()
    output: "Incorrectly structured example"

metadata:
  priority: high
  version: 1.0
  tags:
    - examples
    - documentation
    - testing
</rule> 