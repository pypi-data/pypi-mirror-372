{
  "openapi": "3.1.0",
  "paths": {
    "/unified/lms/courses/batch": {
      "post": {
        "operationId": "lms_batch_upsert_course",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LmsBatchUpsertCourseRequestDto"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Batch operation accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResultApiModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Batch Upsert Course",
        "tags": [
          "Courses"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "batch_upsert_course",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/courses": {
      "get": {
        "operationId": "lms_list_courses",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,external_reference,content_ids,remote_content_ids,title,description,languages,cover_url,url,active,duration,categories,skills,updated_at,created_at,content,provider",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter parameters that allow greater customisation of the list response",
            "explode": true,
            "style": "deepObject",
            "schema": {
              "properties": {
                "updated_after": {
                  "description": "Use a string with a date to only select results updated after that given date",
                  "example": "2020-01-01T00:00:00.000Z",
                  "type": "string",
                  "nullable": true,
                  "additionalProperties": false
                }
              },
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The page number of the results to fetch",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "The number of results per page",
            "schema": {
              "nullable": true,
              "default": "25",
              "type": "string"
            }
          },
          {
            "name": "next",
            "required": false,
            "in": "query",
            "description": "The unified cursor",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "updated_after",
            "required": false,
            "in": "query",
            "description": "Use a string with a date to only select results updated after that given date",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "example": "2020-01-01T00:00:00.000Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of courses was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoursePaginated"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "List Courses",
        "tags": [
          "Courses"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "list_courses",
        "x-speakeasy-pagination": {
          "type": "cursor",
          "inputs": [
            {
              "name": "next",
              "in": "parameters",
              "type": "cursor"
            }
          ],
          "outputs": {
            "nextCursor": "$.next"
          }
        },
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      },
      "put": {
        "operationId": "lms_upsert_course",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LmsUpsertCourseRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The course was upserted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Upsert Course",
        "tags": [
          "Courses"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "upsert_course",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/courses/{id}": {
      "get": {
        "operationId": "lms_get_course",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,external_reference,content_ids,remote_content_ids,title,description,languages,cover_url,url,active,duration,categories,skills,updated_at,created_at,content,provider",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The course with the given identifier was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Get Course",
        "tags": [
          "Courses"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "get_course",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/users/{id}/assignments": {
      "get": {
        "operationId": "lms_list_user_assignments",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,external_reference,user_id,remote_user_id,course_id,remote_course_id,updated_at,created_at,due_date,status,progress,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "LMS Assignment Filter",
            "schema": {
              "properties": {
                "updated_after": {
                  "description": "Use a string with a date to only select results updated after that given date",
                  "example": "2020-01-01T00:00:00.000Z",
                  "type": "string",
                  "nullable": true,
                  "additionalProperties": false
                },
                "status": {
                  "description": "Filter to select assignment by status",
                  "type": "string",
                  "enum": [
                    "pending",
                    "in_progress",
                    "completed",
                    null
                  ],
                  "nullable": true
                }
              },
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The page number of the results to fetch",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "The number of results per page",
            "schema": {
              "nullable": true,
              "default": "25",
              "type": "string"
            }
          },
          {
            "name": "next",
            "required": false,
            "in": "query",
            "description": "The unified cursor",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "updated_after",
            "required": false,
            "in": "query",
            "description": "Use a string with a date to only select results updated after that given date",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "example": "2020-01-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "required": false,
            "in": "query",
            "description": "The user ID associated with this assignment",
            "schema": {
              "nullable": true,
              "example": "c28xyrc55866bvuv",
              "type": "string"
            }
          },
          {
            "name": "remote_user_id",
            "required": false,
            "in": "query",
            "description": "Provider's unique identifier of the user related to the assignment",
            "schema": {
              "nullable": true,
              "example": "e3cb75bf-aa84-466e-a6c1-b8322b257a48",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The assignments related to the employee with the given identifier were retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentsPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "List User Assignments",
        "tags": [
          "Users"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "list_user_assignments",
        "x-speakeasy-pagination": {
          "type": "cursor",
          "inputs": [
            {
              "name": "next",
              "in": "parameters",
              "type": "cursor"
            }
          ],
          "outputs": {
            "nextCursor": "$.next"
          }
        },
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      },
      "post": {
        "operationId": "lms_create_user_assignment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LmsCreateAssignmentRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The assignment was created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Create User Assignment",
        "tags": [
          "Users"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "create_user_assignment",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/users/{id}/assignments/{subResourceId}": {
      "get": {
        "operationId": "lms_get_user_assignment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subResourceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields to return in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The assignment with the given identifier was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Get User Assignment",
        "tags": [
          "Users"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "get_user_assignment",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/content/batch": {
      "post": {
        "operationId": "lms_batch_upsert_content",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LmsBatchUpsertContentRequestDto"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Batch operation accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchResultApiModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Batch Upsert Content",
        "tags": [
          "Content"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "batch_upsert_content",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/content": {
      "get": {
        "operationId": "lms_list_content",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,external_reference,course_ids,remote_course_ids,title,description,additional_data,languages,content_url,mobile_launch_content_url,content_type,cover_url,active,duration,order,categories,skills,updated_at,created_at,provider",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter parameters that allow greater customisation of the list response",
            "explode": true,
            "style": "deepObject",
            "schema": {
              "properties": {
                "updated_after": {
                  "description": "Use a string with a date to only select results updated after that given date",
                  "example": "2020-01-01T00:00:00.000Z",
                  "type": "string",
                  "nullable": true,
                  "additionalProperties": false
                }
              },
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The page number of the results to fetch",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "The number of results per page",
            "schema": {
              "nullable": true,
              "default": "25",
              "type": "string"
            }
          },
          {
            "name": "next",
            "required": false,
            "in": "query",
            "description": "The unified cursor",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "updated_after",
            "required": false,
            "in": "query",
            "description": "Use a string with a date to only select results updated after that given date",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "example": "2020-01-01T00:00:00.000Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of content was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "List Content",
        "tags": [
          "Content"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "list_content",
        "x-speakeasy-pagination": {
          "type": "cursor",
          "inputs": [
            {
              "name": "next",
              "in": "parameters",
              "type": "cursor"
            }
          ],
          "outputs": {
            "nextCursor": "$.next"
          }
        },
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      },
      "put": {
        "operationId": "lms_upsert_content",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LmsUpsertContentRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The content was upserted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Upsert Content",
        "tags": [
          "Content"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "upsert_content",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/content/{id}": {
      "get": {
        "operationId": "lms_get_content",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,external_reference,course_ids,remote_course_ids,title,description,additional_data,languages,content_url,mobile_launch_content_url,content_type,cover_url,active,duration,order,categories,skills,updated_at,created_at,provider",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The content with the given identifier was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Get Content",
        "tags": [
          "Content"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "get_content",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/users/{id}/completions": {
      "get": {
        "operationId": "lms_list_user_completions",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,external_id,remote_external_id,external_reference,content_id,remote_content_id,course_id,remote_course_id,user_id,remote_user_id,completed_at,updated_at,created_at,result,content_external_reference,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "LMS Completions Filter",
            "schema": {
              "properties": {
                "updated_after": {
                  "description": "Use a string with a date to only select results updated after that given date",
                  "example": "2020-01-01T00:00:00.000Z",
                  "type": "string",
                  "nullable": true,
                  "additionalProperties": false
                }
              },
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The page number of the results to fetch",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "The number of results per page",
            "schema": {
              "nullable": true,
              "default": "25",
              "type": "string"
            }
          },
          {
            "name": "next",
            "required": false,
            "in": "query",
            "description": "The unified cursor",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "updated_after",
            "required": false,
            "in": "query",
            "description": "Use a string with a date to only select results updated after that given date",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "example": "2020-01-01T00:00:00.000Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The completions with for the users with the given identifier were retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletionsPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "List User Completions",
        "tags": [
          "Users"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "list_user_completions",
        "x-speakeasy-pagination": {
          "type": "cursor",
          "inputs": [
            {
              "name": "next",
              "in": "parameters",
              "type": "cursor"
            }
          ],
          "outputs": {
            "nextCursor": "$.next"
          }
        },
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      },
      "post": {
        "operationId": "lms_create_user_completion",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LmsCreateCompletionRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The completion was created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Create User Completion",
        "tags": [
          "Users"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "create_user_completion",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/users/{id}/completions/{subResourceId}": {
      "get": {
        "operationId": "lms_get_user_completion",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subResourceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields to return in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The completion with the given identifier was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletionResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Get User Completion",
        "tags": [
          "Users"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "get_user_completion",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      },
      "delete": {
        "operationId": "lms_delete_user_completion",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subResourceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The completion was deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResult"
                }
              }
            }
          },
          "204": {
            "description": "The completion was deleted successfully but no content was returned."
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Delete User Completion",
        "tags": [
          "Users"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "delete_user_completion",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/completions": {
      "get": {
        "operationId": "lms_list_completions",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,external_id,remote_external_id,external_reference,content_id,remote_content_id,course_id,remote_course_id,user_id,remote_user_id,completed_at,updated_at,created_at,result,content_external_reference,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "LMS Completions Filter",
            "explode": true,
            "style": "deepObject",
            "schema": {
              "properties": {
                "updated_after": {
                  "description": "Use a string with a date to only select results updated after that given date",
                  "example": "2020-01-01T00:00:00.000Z",
                  "type": "string",
                  "nullable": true,
                  "additionalProperties": false
                }
              },
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The page number of the results to fetch",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "The number of results per page",
            "schema": {
              "nullable": true,
              "default": "25",
              "type": "string"
            }
          },
          {
            "name": "next",
            "required": false,
            "in": "query",
            "description": "The unified cursor",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "updated_after",
            "required": false,
            "in": "query",
            "description": "Use a string with a date to only select results updated after that given date",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "example": "2020-01-01T00:00:00.000Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of completions was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletionsPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "List Completions",
        "tags": [
          "Completions"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "list_completions",
        "x-speakeasy-pagination": {
          "type": "cursor",
          "inputs": [
            {
              "name": "next",
              "in": "parameters",
              "type": "cursor"
            }
          ],
          "outputs": {
            "nextCursor": "$.next"
          }
        },
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/completions/{id}": {
      "get": {
        "operationId": "lms_get_completion",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields to return in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The completion with the given identifier was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompletionResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Get Completion",
        "tags": [
          "Completions"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "get_completion",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/categories/{id}": {
      "get": {
        "operationId": "lms_get_category",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,name,active,hierarchy,level,language",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The category with the given identifier was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Get Category",
        "tags": [
          "Categories"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "get_category",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/categories": {
      "get": {
        "operationId": "lms_list_categories",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,name,active,hierarchy,level,language",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter parameters that allow greater customisation of the list response",
            "schema": {
              "properties": {
                "updated_after": {
                  "description": "Use a string with a date to only select results updated after that given date",
                  "example": "2020-01-01T00:00:00.000Z",
                  "type": "string",
                  "nullable": true,
                  "additionalProperties": false
                }
              },
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The page number of the results to fetch",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "The number of results per page",
            "schema": {
              "nullable": true,
              "default": "25",
              "type": "string"
            }
          },
          {
            "name": "next",
            "required": false,
            "in": "query",
            "description": "The unified cursor",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "updated_after",
            "required": false,
            "in": "query",
            "description": "Use a string with a date to only select results updated after that given date",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "example": "2020-01-01T00:00:00.000Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of categories was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "List Categories",
        "tags": [
          "Categories"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "list_categories",
        "x-speakeasy-pagination": {
          "type": "cursor",
          "inputs": [
            {
              "name": "next",
              "in": "parameters",
              "type": "cursor"
            }
          ],
          "outputs": {
            "nextCursor": "$.next"
          }
        },
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/users": {
      "get": {
        "operationId": "lms_list_users",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,external_reference,active,email,phone_number,created_at,updated_at,name",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "LMS Users Filter",
            "explode": true,
            "style": "deepObject",
            "schema": {
              "properties": {
                "updated_after": {
                  "description": "Use a string with a date to only select results updated after that given date",
                  "example": "2020-01-01T00:00:00.000Z",
                  "type": "string",
                  "nullable": true,
                  "additionalProperties": false
                },
                "email": {
                  "description": "Filter to select users by email",
                  "type": "string",
                  "nullable": true
                }
              },
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The page number of the results to fetch",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "The number of results per page",
            "schema": {
              "nullable": true,
              "default": "25",
              "type": "string"
            }
          },
          {
            "name": "next",
            "required": false,
            "in": "query",
            "description": "The unified cursor",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "updated_after",
            "required": false,
            "in": "query",
            "description": "Use a string with a date to only select results updated after that given date",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "example": "2020-01-01T00:00:00.000Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of users was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "List Users",
        "tags": [
          "Users"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "list_users",
        "x-speakeasy-pagination": {
          "type": "cursor",
          "inputs": [
            {
              "name": "next",
              "in": "parameters",
              "type": "cursor"
            }
          ],
          "outputs": {
            "nextCursor": "$.next"
          }
        },
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/users/{id}": {
      "get": {
        "operationId": "lms_get_user",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,external_reference,active,email,phone_number,created_at,updated_at,name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user with the given identifier was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Get User",
        "tags": [
          "Users"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "get_user",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/skills/{id}": {
      "get": {
        "operationId": "lms_get_skill",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,name,active,level,language,hierarchy,proficiency",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The skill with the given identifier was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Get Skill",
        "tags": [
          "Skills"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "get_skill",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/skills": {
      "get": {
        "operationId": "lms_list_skills",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,name,active,level,language,hierarchy,proficiency",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter parameters that allow greater customisation of the list response",
            "schema": {
              "properties": {
                "updated_after": {
                  "description": "Use a string with a date to only select results updated after that given date",
                  "example": "2020-01-01T00:00:00.000Z",
                  "type": "string",
                  "nullable": true,
                  "additionalProperties": false
                }
              },
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The page number of the results to fetch",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "The number of results per page",
            "schema": {
              "nullable": true,
              "default": "25",
              "type": "string"
            }
          },
          {
            "name": "next",
            "required": false,
            "in": "query",
            "description": "The unified cursor",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "updated_after",
            "required": false,
            "in": "query",
            "description": "Use a string with a date to only select results updated after that given date",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "example": "2020-01-01T00:00:00.000Z",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of skills was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillsPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "List Skills",
        "tags": [
          "Skills"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "list_skills",
        "x-speakeasy-pagination": {
          "type": "cursor",
          "inputs": [
            {
              "name": "next",
              "in": "parameters",
              "type": "cursor"
            }
          ],
          "outputs": {
            "nextCursor": "$.next"
          }
        },
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/assignments": {
      "get": {
        "operationId": "lms_list_assignments",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields that will be returned in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "example": "id,remote_id,external_reference,user_id,remote_user_id,course_id,remote_course_id,updated_at,created_at,due_date,status,progress,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "LMS Assignment Filter",
            "schema": {
              "properties": {
                "updated_after": {
                  "description": "Use a string with a date to only select results updated after that given date",
                  "example": "2020-01-01T00:00:00.000Z",
                  "type": "string",
                  "nullable": true,
                  "additionalProperties": false
                },
                "status": {
                  "description": "Filter to select assignment by status",
                  "type": "string",
                  "enum": [
                    "pending",
                    "in_progress",
                    "completed",
                    null
                  ],
                  "nullable": true
                }
              },
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "The page number of the results to fetch",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "The number of results per page",
            "schema": {
              "nullable": true,
              "default": "25",
              "type": "string"
            }
          },
          {
            "name": "next",
            "required": false,
            "in": "query",
            "description": "The unified cursor",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "updated_after",
            "required": false,
            "in": "query",
            "description": "Use a string with a date to only select results updated after that given date",
            "deprecated": true,
            "schema": {
              "nullable": true,
              "example": "2020-01-01T00:00:00.000Z",
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "required": false,
            "in": "query",
            "description": "The user ID associated with this assignment",
            "schema": {
              "nullable": true,
              "example": "c28xyrc55866bvuv",
              "type": "string"
            }
          },
          {
            "name": "remote_user_id",
            "required": false,
            "in": "query",
            "description": "Provider's unique identifier of the user related to the assignment",
            "schema": {
              "nullable": true,
              "example": "e3cb75bf-aa84-466e-a6c1-b8322b257a48",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of assignments was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentsPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "List Assignments",
        "tags": [
          "Assignments"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "list_assignments",
        "x-speakeasy-pagination": {
          "type": "cursor",
          "inputs": [
            {
              "name": "next",
              "in": "parameters",
              "type": "cursor"
            }
          ],
          "outputs": {
            "nextCursor": "$.next"
          }
        },
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/assignments/{id}": {
      "get": {
        "operationId": "lms_get_assignment",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "required": false,
            "in": "query",
            "description": "Indicates that the raw request result is returned",
            "schema": {
              "nullable": true,
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "proxy",
            "required": false,
            "in": "query",
            "description": "Query parameters that can be used to pass through parameters to the underlying provider request by surrounding them with 'proxy' key",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "additionalProperties": true,
              "nullable": true,
              "type": "object"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "The comma separated list of fields to return in the response (if empty, all fields are returned)",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The assignment with the given identifier was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Get Assignment",
        "tags": [
          "Assignments"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "get_assignment",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/collections": {
      "post": {
        "operationId": "lms_create_collection",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LmsCreateCollectionRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The collection was created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Create Collection",
        "tags": [
          "Collections"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "create_collection",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    },
    "/unified/lms/collections/{id}": {
      "patch": {
        "operationId": "lms_update_collection",
        "parameters": [
          {
            "name": "x-account-id",
            "in": "header",
            "description": "The account identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LmsCreateCollectionRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The collection was updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request."
          },
          "403": {
            "description": "Forbidden."
          },
          "408": {
            "description": "The request has timed out.",
            "headers": {
              "Retry-After": {
                "description": "A time in seconds after which the request can be retried.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "412": {
            "description": "Precondition failed: linked account belongs to a disabled integration."
          },
          "429": {
            "description": "Too many requests."
          },
          "500": {
            "description": "Server error while executing the request."
          },
          "501": {
            "description": "This functionality is not implemented."
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Update Collection",
        "tags": [
          "Collections"
        ],
        "x-speakeasy-group": "lms",
        "x-speakeasy-name-override": "update_collection",
        "x-speakeasy-retries": {
          "statusCodes": [
            429,
            408
          ],
          "strategy": "backoff"
        }
      }
    }
  },
  "info": {
    "title": "LMS",
    "description": "The documentation for the StackOne Unified API - LMS",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Courses",
      "description": ""
    },
    {
      "name": "Content",
      "description": ""
    },
    {
      "name": "Categories",
      "description": ""
    },
    {
      "name": "Users",
      "description": ""
    },
    {
      "name": "Skills",
      "description": ""
    },
    {
      "name": "Assignments",
      "description": ""
    },
    {
      "name": "Completions",
      "description": ""
    },
    {
      "name": "Collections",
      "description": ""
    }
  ],
  "servers": [
    {
      "url": "https://api.stackone.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "AdditionalData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The name of the additional data field. Speak to your Solutions Engineer to understand the id for the specific use case",
            "example": "learning_outcomes",
            "nullable": true
          },
          "remote_id": {
            "type": "string",
            "description": "Provider's unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "nullable": true,
            "description": "The value of the additional data",
            "example": "This is additional data"
          }
        }
      },
      "Assignment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID associated with this assignment",
            "example": "123456",
            "nullable": true
          },
          "remote_id": {
            "type": "string",
            "description": "Provider's unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "unified_custom_fields": {
            "type": "object",
            "description": "Custom Unified Fields configured in your StackOne project",
            "additionalProperties": true,
            "example": {
              "my_project_custom_field_1": "REF-1236",
              "my_project_custom_field_2": "some other value"
            },
            "nullable": true
          },
          "external_reference": {
            "type": "string",
            "description": "The external reference associated with this assignment",
            "example": "e3gd34-23tr21-er234-345er56",
            "deprecated": true,
            "nullable": true
          },
          "learning_object_id": {
            "type": "string",
            "description": "The learning_object_id associated with this assignment. This is not required unless specified in an integration.",
            "example": "e3gd34-23tr21-er234-345er56",
            "nullable": true
          },
          "remote_learning_object_id": {
            "type": "string",
            "description": "Provider's unique identifier of the learning object related to the assignment",
            "example": "e3cb55bf-aa84-466e-a6c1-b8302b257a49",
            "nullable": true
          },
          "learning_object_external_reference": {
            "type": "string",
            "description": "The external reference of the learning object associated with this assignment, this is the main identifier for creating assignments.",
            "example": "learning-content-123",
            "nullable": true
          },
          "progress": {
            "type": "number",
            "description": "The progress associated with this assigment",
            "example": "40",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "The date the assignment was last updated",
            "example": "2021-07-21T14:00:00.000Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The date the assignment was created",
            "example": "2021-07-21T14:00:00.000Z",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "description": "The date the assignment is due to be completed",
            "example": "2021-07-21T14:00:00.000Z",
            "nullable": true
          },
          "status": {
            "description": "The status of the assignment",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AssignmentStatusEnum"
              }
            ]
          },
          "learning_object_type": {
            "description": "The learning object type of the assignment",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/LearningObjectTypeEnum"
              }
            ]
          },
          "user_id": {
            "type": "string",
            "description": "The user ID associated with this assignment",
            "example": "c28xyrc55866bvuv",
            "nullable": true
          },
          "remote_user_id": {
            "type": "string",
            "description": "Provider's unique identifier of the user related to the assignment",
            "example": "e3cb75bf-aa84-466e-a6c1-b8322b257a48",
            "nullable": true
          },
          "course_id": {
            "type": "string",
            "description": "The course ID associated with this assignment",
            "example": "16873-ENG-1",
            "deprecated": true,
            "nullable": true
          },
          "remote_course_id": {
            "type": "string",
            "description": "Provider's unique identifier of the course related to the assignment",
            "example": "e3cb75bf-aa84-466e-a6c1-b8322b257a48",
            "deprecated": true,
            "nullable": true
          }
        }
      },
      "AssignmentResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Assignment"
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AssignmentsPaginated": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Assignment"
            }
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "AssignmentStatusEnum": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "pending",
              "in_progress",
              "completed",
              null
            ],
            "example": "in-progress",
            "x-speakeasy-unknown-values": "allow",
            "nullable": true
          },
          "source_value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "type": "object"
              },
              {
                "type": "array",
                "items": {}
              }
            ],
            "nullable": true
          }
        }
      },
      "BatchResultApiModel": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 202,
            "nullable": true
          },
          "message": {
            "type": "string",
            "example": "Batch operation accepted",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "example": "2021-01-01T01:01:01.000Z",
            "format": "date-time",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "example": [
              [
                "Missing field: name"
              ],
              [],
              []
            ],
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        }
      },
      "CategoriesPaginated": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID associated with this category",
            "example": "16873-IT345",
            "nullable": true
          },
          "remote_id": {
            "type": "string",
            "description": "Provider's unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "unified_custom_fields": {
            "type": "object",
            "description": "Custom Unified Fields configured in your StackOne project",
            "additionalProperties": true,
            "example": {
              "my_project_custom_field_1": "REF-1236",
              "my_project_custom_field_2": "some other value"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name associated with this category",
            "example": "Information-Technology",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Whether the category is active and therefore available for use",
            "example": true,
            "nullable": true
          },
          "hierarchy": {
            "description": "The hierarchal level of the category",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CategoryLevelEnumModel"
              }
            ]
          },
          "level": {
            "description": "The hierarchal level of the category",
            "deprecated": true,
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CategoryLevelEnumModel"
              }
            ]
          },
          "language": {
            "description": "The language associated with this category",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageEnum"
              }
            ]
          }
        }
      },
      "CategoryLevelEnumModel": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "primary",
              "secondary",
              "tertiary",
              null
            ],
            "x-speakeasy-unknown-values": "allow",
            "nullable": true
          },
          "source_value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "type": "object"
              },
              {
                "type": "array",
                "items": {}
              }
            ],
            "nullable": true
          }
        }
      },
      "CategoryResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Category"
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "Completion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID associated with this completion",
            "example": "123456",
            "nullable": true
          },
          "remote_id": {
            "type": "string",
            "description": "Provider's unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "unified_custom_fields": {
            "type": "object",
            "description": "Custom Unified Fields configured in your StackOne project",
            "additionalProperties": true,
            "example": {
              "my_project_custom_field_1": "REF-1236",
              "my_project_custom_field_2": "some other value"
            },
            "nullable": true
          },
          "external_reference": {
            "type": "string",
            "description": "The external reference associated with this completion",
            "example": "e3gd34-23tr21-er234-345er56",
            "deprecated": true,
            "nullable": true
          },
          "result": {
            "description": "The result of the completion",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ResultStatusEnum"
              }
            ]
          },
          "completed_at": {
            "type": "string",
            "description": "The date the content was completed",
            "example": "2021-07-21T14:00:00.000Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The created date of the completion",
            "example": "2021-07-21T14:00:00.000Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "The updated date of the completion",
            "example": "2021-07-21T14:00:00.000Z",
            "nullable": true
          },
          "learning_object_type": {
            "description": "The learning object type of the completion",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/LearningObjectTypeEnum"
              }
            ]
          },
          "learning_object_id": {
            "type": "string",
            "description": "The id of the learning object associated with this completion. This is not required unless specified in an integration.",
            "example": "e3gd34-23tr21-er234-345er56",
            "nullable": true
          },
          "remote_learning_object_id": {
            "type": "string",
            "description": "Provider's unique identifier of the learning object related to the completion",
            "example": "e3cb55bf-aa84-466e-a6c1-b8302b257a49",
            "nullable": true
          },
          "learning_object_external_reference": {
            "type": "string",
            "description": "The external reference of the learning object associated with this completion, this is the main identifier for creating completions.",
            "example": "learning-content-123",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "description": "The user ID associated with this completion",
            "example": "c28xyrc55866bvuv",
            "nullable": true
          },
          "remote_user_id": {
            "type": "string",
            "description": "Provider's unique identifier of the user related to the completion",
            "example": "e3cb75bf-aa84-466e-a6c1-b8322b257a48",
            "nullable": true
          },
          "external_id": {
            "type": "string",
            "description": "The external ID associated with this completion",
            "example": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1-COMPLETION",
            "deprecated": true,
            "nullable": true
          },
          "content_external_reference": {
            "type": "string",
            "description": "The external reference associated with this content",
            "example": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1-CONTENT",
            "deprecated": true,
            "nullable": true
          },
          "remote_external_id": {
            "type": "string",
            "description": "Provider's unique identifier of the content external reference",
            "example": "e3cb75bf-aa84-466e-a6c1-b8322b257a48",
            "deprecated": true,
            "nullable": true
          },
          "content_id": {
            "type": "string",
            "description": "The content ID associated with this completion",
            "example": "16873-ENG-VIDEO-1",
            "deprecated": true,
            "nullable": true
          },
          "remote_content_id": {
            "type": "string",
            "description": "Provider's unique identifier of the content associated with the completion",
            "example": "e3cb75bf-aa84-466e-a6c1-b8322b257a48",
            "deprecated": true,
            "nullable": true
          },
          "course_id": {
            "type": "string",
            "description": "The course ID associated with this completion",
            "example": "16873-ENG-COURSE-1",
            "deprecated": true,
            "nullable": true
          },
          "remote_course_id": {
            "type": "string",
            "description": "Provider's unique identifier of the course associated with the completion",
            "example": "e3cb75bf-aa84-466e-a6c1-b8322b257a48",
            "deprecated": true,
            "nullable": true
          }
        }
      },
      "CompletionResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Completion"
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CompletionsPaginated": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Completion"
            }
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "Content": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "remote_id": {
            "type": "string",
            "description": "Provider's unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "unified_custom_fields": {
            "type": "object",
            "description": "Custom Unified Fields configured in your StackOne project",
            "additionalProperties": true,
            "example": {
              "my_project_custom_field_1": "REF-1236",
              "my_project_custom_field_2": "some other value"
            },
            "nullable": true
          },
          "external_reference": {
            "type": "string",
            "description": "The external ID associated with this content",
            "example": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1",
            "nullable": true
          },
          "course_ids": {
            "description": "The parent ID/IDs associated with this content",
            "example": [
              "16873-SOFTWARE-ENG-COURSE",
              "16874-SOFTWARE-ENG-COURSE"
            ],
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "remote_course_ids": {
            "description": "Provider's unique identifier of the parent course ID associated with this content",
            "example": [
              "e3cb75bf-aa84-466e-a6c1-b8322b257a48",
              "e3cb75bf-aa84-466e-a6c1-b8322b257a49"
            ],
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string",
            "description": "The title of the content",
            "example": "Software Engineer Lv 1",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the content",
            "example": "This video acts as learning content for software engineers.",
            "nullable": true
          },
          "additional_data": {
            "description": "The additional_data associated with this content",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalData"
            }
          },
          "languages": {
            "description": "The languages associated with this content",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageEnum"
            }
          },
          "content_url": {
            "type": "string",
            "description": "The external URL of the content",
            "example": "https://www.youtube.com/watch?v=16873",
            "nullable": true
          },
          "mobile_launch_content_url": {
            "type": "string",
            "description": "The mobile friendly URL of the content",
            "example": "https://www.mobile.youtube.com/watch?v=16873",
            "nullable": true
          },
          "content_type": {
            "description": "The type of content",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ContentTypeEnum"
              }
            ]
          },
          "cover_url": {
            "type": "string",
            "description": "The URL of the thumbnail image associated with the content.",
            "example": "https://www.googledrive.com/?v=16873",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Whether the content is active and available for users.",
            "example": true,
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "The duration of the content following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string or the minimum unit accepted by the provider.",
            "example": "P3Y6M4DT12H30M5S",
            "format": "string",
            "nullable": true
          },
          "categories": {
            "description": "The categories associated with this content",
            "example": [
              {
                "id": "12345",
                "name": "Technology"
              }
            ],
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "skills": {
            "description": "The skills associated with this course",
            "example": [
              {
                "id": "12345",
                "name": "Sales Techniques"
              }
            ],
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skills"
            }
          },
          "order": {
            "type": "number",
            "description": "The order of the individual content within a content grouping. This is not applicable for pushing individual content.",
            "example": 1,
            "format": "number",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "description": "The name of the content provider",
            "example": "Content Provider",
            "nullable": true
          },
          "short_description": {
            "type": "string",
            "description": "A short description or summary for the content",
            "example": "This course is a valuable resource and acts as learning content for...",
            "deprecated": true,
            "nullable": true
          }
        }
      },
      "ContentPaginated": {
        "type": "object",
        "properties": {
          "next_page": {
            "type": "string",
            "deprecated": true,
            "nullable": true
          },
          "next": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Content"
            }
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContentResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Content"
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "ContentTypeEnum": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "video",
              "quiz",
              "document",
              null
            ],
            "x-speakeasy-unknown-values": "allow",
            "nullable": true
          },
          "source_value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "type": "object"
              },
              {
                "type": "array",
                "items": {}
              }
            ],
            "nullable": true
          }
        }
      },
      "Course": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "remote_id": {
            "type": "string",
            "description": "Provider's unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "unified_custom_fields": {
            "type": "object",
            "description": "Custom Unified Fields configured in your StackOne project",
            "additionalProperties": true,
            "example": {
              "my_project_custom_field_1": "REF-1236",
              "my_project_custom_field_2": "some other value"
            },
            "nullable": true
          },
          "external_reference": {
            "type": "string",
            "description": "The external ID associated with this course",
            "example": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1",
            "nullable": true
          },
          "content_ids": {
            "description": "The child ID/IDs associated with this course",
            "example": [
              "16873-SOFTWARE-ENG-COURSE",
              "16874-SOFTWARE-ENG-COURSE"
            ],
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "remote_content_ids": {
            "description": "Provider's unique identifier of the child content IDs associated with this course",
            "example": [
              "e3cb75bf-aa84-466e-a6c1-b8322b257a48",
              "e3cb75bf-aa84-466e-a6c1-b8322b257a49"
            ],
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string",
            "description": "The title of the course",
            "example": "Software Engineer Lv 1",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the course",
            "example": "This course acts as learning content for software engineers.",
            "nullable": true
          },
          "languages": {
            "description": "The languages associated with this course",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageEnum"
            }
          },
          "cover_url": {
            "type": "string",
            "description": "The URL of the thumbnail image associated with the course.",
            "example": "https://www.googledrive.com/?v=16873",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The redirect URL of the course.",
            "example": "https://www.linkedinlearning.com/?v=16873",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Whether the course is active and available for users.",
            "example": true,
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "The duration of the course following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string",
            "example": "P3Y6M4DT12H30M5S",
            "format": "string",
            "nullable": true
          },
          "categories": {
            "description": "The categories associated with this course",
            "example": [
              {
                "id": "12345",
                "name": "Technology"
              }
            ],
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "skills": {
            "description": "The skills associated with this course",
            "example": [
              {
                "id": "12345",
                "name": "Sales Techniques"
              }
            ],
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skills"
            }
          },
          "provider": {
            "type": "string",
            "description": "The name of the course provider",
            "example": "Course Provider",
            "format": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "The date on which the course was last updated.",
            "example": "2021-07-21T14:00:00.000Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The date on which the course was created.",
            "example": "2021-07-21T14:00:00.000Z",
            "nullable": true
          }
        }
      },
      "CoursePaginated": {
        "type": "object",
        "properties": {
          "next_page": {
            "type": "string",
            "deprecated": true,
            "nullable": true
          },
          "next": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Course"
            }
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CourseResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Course"
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "CreateCategoriesApiModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID associated with this category",
            "example": "16873-IT345",
            "nullable": true
          },
          "unified_custom_fields": {
            "type": "object",
            "description": "Custom Unified Fields configured in your StackOne project",
            "additionalProperties": true,
            "example": {
              "my_project_custom_field_1": "REF-1236",
              "my_project_custom_field_2": "some other value"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name associated with this category",
            "example": "Information-Technology",
            "nullable": true
          },
          "hierarchy": {
            "description": "The hierarchal level of the category",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CategoryLevelEnumModel"
              }
            ]
          },
          "level": {
            "description": "The hierarchal level of the category",
            "deprecated": true,
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/CategoryLevelEnumModel"
              }
            ]
          },
          "language": {
            "description": "The language associated with this category",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageEnum"
              }
            ]
          }
        }
      },
      "CreateContentApiModel": {
        "type": "object",
        "properties": {
          "external_reference": {
            "type": "string",
            "description": "The external ID associated with this content",
            "example": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the content",
            "example": "Software Engineer Lv 1",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the content",
            "example": "This video acts as learning content for software engineers.",
            "nullable": true
          },
          "content_url": {
            "type": "string",
            "description": "The external URL of the content",
            "example": "https://www.youtube.com/watch?v=16873",
            "nullable": true
          },
          "order": {
            "type": "number",
            "description": "The order of the individual content within a content grouping. This is not applicable for pushing individual content.",
            "example": 1,
            "format": "number",
            "nullable": true
          }
        }
      },
      "CreateResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "Record created successfully."
          },
          "timestamp": {
            "type": "string",
            "example": "2021-01-01T01:01:01.000Z",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/CreateResultDataApiModel"
          }
        },
        "required": [
          "statusCode",
          "message",
          "timestamp",
          "data"
        ]
      },
      "CreateResultDataApiModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "remote_id": {
            "type": "string",
            "description": "Provider's unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          }
        }
      },
      "CreateSkillsApiModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID associated with this skill",
            "example": "16873-IT345",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name associated with this skill",
            "example": "Information-Technology",
            "nullable": true
          },
          "hierarchy": {
            "description": "The hierarchal level of the skill",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevelEnum"
              }
            ]
          },
          "proficiency": {
            "description": "The user proficiency level of the skill ranked out of 5",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillProficiencyLevelEnum"
              }
            ]
          },
          "language": {
            "description": "The language associated with this skill",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageEnum"
              }
            ]
          },
          "level": {
            "description": "The hierarchal level of the skill",
            "deprecated": true,
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevelEnum"
              }
            ]
          }
        }
      },
      "DeleteResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 204
          },
          "message": {
            "type": "string",
            "example": "Record deleted successfully."
          },
          "timestamp": {
            "type": "string",
            "example": "2021-01-01T01:01:01.000Z",
            "format": "date-time"
          }
        },
        "required": [
          "statusCode",
          "message",
          "timestamp"
        ]
      },
      "LanguageEnum": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "ar_AR",
              "aa_ER",
              "af_NA",
              "af_ZA",
              "am_ET",
              "ar_AE",
              "ar_BH",
              "ar_DJ",
              "ar_DZ",
              "ar_EG",
              "ar_ER",
              "ar_IQ",
              "ar_JO",
              "ar_KM",
              "ar_KW",
              "ar_LB",
              "ar_LY",
              "ar_MA",
              "ar_MR",
              "ar_OM",
              "ar_PS",
              "ar_QA",
              "ar_SA",
              "ar_SD",
              "ar_SY",
              "ar_TD",
              "ar_TN",
              "ar_YE",
              "ay_BO",
              "ay_PE",
              "az_AZ",
              "az_IR",
              "be_BY",
              "bg_BG",
              "bi_VU",
              "bn_BD",
              "bn_IN",
              "bs_BA",
              "bs-ME",
              "byn_ER",
              "ca_AD",
              "ca_ES",
              "ca_FR",
              "ca_IT",
              "ch_GU",
              "cs_CZ",
              "da_DK",
              "de_AT",
              "de_BE",
              "de_CH",
              "de_DE",
              "de_LI",
              "de_LU",
              "de_VA",
              "de_MV",
              "dv_MV",
              "dz_BT",
              "el_CY",
              "el_GR",
              "en_AG",
              "en_AI",
              "en_AS",
              "en_AU",
              "en_BB",
              "en_BE",
              "en_BM",
              "en_BS",
              "en_BW",
              "en_BZ",
              "en_CA",
              "en_CC",
              "en_CK",
              "en_CM",
              "en_CW",
              "en_CX",
              "en_DG",
              "en_DM",
              "en_ER",
              "en_FJ",
              "en_FK",
              "en_FM",
              "en_GB",
              "en_GD",
              "en_GG",
              "en_GH",
              "en_GI",
              "en_GM",
              "en_GS",
              "en_GU",
              "en_GY",
              "en_HK",
              "en_IE",
              "en_IM",
              "en_IN",
              "en_IO",
              "en_JE",
              "en_JM",
              "en_KE",
              "en_KI",
              "en_KN",
              "en_KY",
              "en_LC",
              "en_LR",
              "en_LS",
              "en_MF",
              "en_MG",
              "en_MH",
              "en_MO",
              "en_MP",
              "en_MS",
              "en_MT",
              "en_MU",
              "en_MW",
              "en_MY",
              "en_NA",
              "en_NF",
              "en_NG",
              "en_NL",
              "en_NR",
              "en_NU",
              "en_NZ",
              "en_PG",
              "en_PH",
              "en_PK",
              "en_PN",
              "en_PR",
              "en_PW",
              "en_RW",
              "en_SB",
              "en_SC",
              "en_SD",
              "en_SG",
              "en_SH",
              "en_SL",
              "en_SS",
              "en_SX",
              "en_SZ",
              "en_TC",
              "en_TK",
              "en_TO",
              "en_TT",
              "en_TV",
              "en_TZ",
              "en_UG",
              "en_UM",
              "en_US",
              "en_VC",
              "en_VG",
              "en_VI",
              "en_VU",
              "en_WS",
              "en_ZA",
              "en_ZM",
              "en_ZW",
              "es_AR",
              "es_BO",
              "es_BZ",
              "es_CL",
              "es_CO",
              "es_CR",
              "es_CU",
              "es_DO",
              "es_EA",
              "es_EC",
              "es_EH",
              "es_ES",
              "es_GQ",
              "es_GT",
              "es_HN",
              "es_IC",
              "es_LA",
              "es_MX",
              "es_NI",
              "es_PA",
              "es_PE",
              "es_PH",
              "es_PR",
              "es_PY",
              "es_SV",
              "es_US",
              "es_UY",
              "es_VE",
              "et_EE",
              "fa_AF",
              "fa_IR",
              "fan_GA",
              "ff_CM",
              "ff_GN",
              "ff_MR",
              "ff_SN",
              "ff_BF",
              "fi_FI",
              "fj_FJ",
              "fo_FO",
              "fr_BE",
              "fr_BF",
              "fr_BI",
              "fr_BJ",
              "fr_BL",
              "fr_CA",
              "fr_CD",
              "fr_CF",
              "fr_CG",
              "fr_CH",
              "fr_CI",
              "fr_CM",
              "fr_DJ",
              "fr_DZ",
              "fr_FR",
              "fr_GA",
              "fr_GF",
              "fr_GG",
              "fr_GN",
              "fr_GP",
              "fr_GQ",
              "fr_HT",
              "fr_KM",
              "fr_JE",
              "fr_LU",
              "fr_LB",
              "fr_MA",
              "fr_MC",
              "fr_MF",
              "fr_MG",
              "fr_ML",
              "fr_MQ",
              "fr_MR",
              "fr_MU",
              "fr_NC",
              "fr_NE",
              "fr_PF",
              "fr_PM",
              "fr_RE",
              "fr_RW",
              "fr_SC",
              "fr_SN",
              "fr_SY",
              "fr_TD",
              "fr_TF",
              "fr_TG",
              "fr_TN",
              "fr_VU",
              "fr_VA",
              "fr_WF",
              "fr_YT",
              "ga_IE",
              "gn_PY",
              "gn_AR",
              "gu_IN",
              "gv_IM",
              "he_IL",
              "hi_IN",
              "hr_BA",
              "hr_HR",
              "hr_ME",
              "ht_HT",
              "hu_HU",
              "hy_AM",
              "hy_CY",
              "id_ID",
              "is_IS",
              "it_CH",
              "it_IT",
              "it_SM",
              "it_VA",
              "ja_JP",
              "ka_GE",
              "kg_CD",
              "kk_KZ",
              "kl_GL",
              "km_KH",
              "ko_KP",
              "ko_KR",
              "ku_IQ",
              "ky_KG",
              "la_VA",
              "lb_LU",
              "ln_AO",
              "ln_CD",
              "ln_CF",
              "ln_CG",
              "lo_LA",
              "lt_LT",
              "lu_CD",
              "lv_LV",
              "mg_MG",
              "mh_MH",
              "mi_NZ",
              "mk_MK",
              "mn_MN",
              "mr_IN",
              "ms_BN",
              "ms_MY",
              "ms_SG",
              "mt_MT",
              "my_MM",
              "nb_NO",
              "nb_BV",
              "nb_ZW",
              "ne_NP",
              "nl_AW",
              "nl_BE",
              "nl_BQ",
              "nl_CW",
              "nl_NL",
              "nl_SR",
              "nl_SX",
              "nl_MF",
              "nn_NO",
              "nn_BV",
              "no_NO",
              "no_BV",
              "no_SJ",
              "nr_ZA",
              "ny_MW",
              "pa_IN",
              "pa_PK",
              "pl_PL",
              "ps_AF",
              "pt_AO",
              "pt_BR",
              "pt_CH",
              "pt_CV",
              "pt_GQ",
              "pt_GW",
              "pt_LU",
              "pt_MO",
              "pt_MZ",
              "pt_PT",
              "pt_ST",
              "pt_TL",
              "qu_BO",
              "qu_EC",
              "qu_PE",
              "rar_CK",
              "rm_CH",
              "rup_MK",
              "ro_MD",
              "ro_RO",
              "ru_BY",
              "ru_KG",
              "ru_KZ",
              "ru_MD",
              "ru_RU",
              "ru_UA",
              "ru_AQ",
              "ru_TJ",
              "ru_TM",
              "ru_UZ",
              "rw_RW",
              "se_SE",
              "sg_CF",
              "si_LK",
              "sk_SK",
              "sl_SI",
              "sm_AS",
              "sm_WS",
              "sn_ZW",
              "so_DJ",
              "so_ET",
              "so_KE",
              "so_SO",
              "sq_AL",
              "sq_ME",
              "sq_XK",
              "sr_BA",
              "sr_ME",
              "sr_RS",
              "sr_XK",
              "ss_SZ",
              "ss_ZA",
              "sv_AX",
              "sv_FI",
              "sv_SE",
              "sw_KE",
              "sw_TZ",
              "sw_UG",
              "sw_CD",
              "ta_IN",
              "ta_MY",
              "ta_SG",
              "ta_LK",
              "te_IN",
              "tg_TJ",
              "th_TH",
              "ti_ER",
              "ti_ET",
              "tig_ER",
              "tk_TM",
              "tk_AF",
              "tn_BW",
              "tn_ZA",
              "to_TO",
              "tr_CY",
              "tr_TR",
              "ts_ZA",
              "uk_UA",
              "ur_IN",
              "ur_PK",
              "uz_AF",
              "uz_UZ",
              "ve_ZA",
              "vi_VN",
              "xh_ZA",
              "zh_CN",
              "zh_HK",
              "zh_MO",
              "zh_SG",
              "zh_TW",
              "zu_ZA",
              null
            ],
            "description": "The Locale Code of the language",
            "example": "en_GB",
            "x-speakeasy-unknown-values": "allow",
            "nullable": true
          },
          "source_value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "type": "object"
              },
              {
                "type": "array",
                "items": {}
              }
            ],
            "nullable": true
          }
        }
      },
      "LearningObjectTypeEnum": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "content",
              "course",
              "collection",
              null
            ],
            "x-speakeasy-unknown-values": "allow",
            "nullable": true
          },
          "source_value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "type": "object"
              },
              {
                "type": "array",
                "items": {}
              }
            ],
            "nullable": true
          }
        }
      },
      "LmsBatchUpsertContentRequestDto": {
        "type": "object",
        "properties": {
          "items": {
            "description": "The batch of items to upsert",
            "nullable": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LmsUpsertContentRequestDto"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "LmsBatchUpsertCourseRequestDto": {
        "type": "object",
        "properties": {
          "items": {
            "description": "The batch of items to upsert",
            "nullable": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LmsUpsertCourseRequestDto"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "LmsCreateAssignmentRequestDto": {
        "type": "object",
        "properties": {
          "passthrough": {
            "type": "object",
            "description": "Value to pass through to the provider",
            "example": {
              "other_known_names": "John Doe"
            },
            "additionalProperties": true,
            "nullable": true
          },
          "external_reference": {
            "type": "string",
            "description": "The external reference associated with this assignment",
            "example": "e3gd34-23tr21-er234-345er56",
            "deprecated": true,
            "nullable": true
          },
          "learning_object_id": {
            "type": "string",
            "description": "The learning_object_id associated with this assignment. This is not required unless specified in an integration.",
            "example": "e3gd34-23tr21-er234-345er56",
            "nullable": true
          },
          "learning_object_external_reference": {
            "type": "string",
            "description": "The external reference of the learning object associated with this assignment, this is the main identifier for creating assignments.",
            "example": "learning-content-123",
            "nullable": true
          },
          "progress": {
            "type": "number",
            "description": "The progress associated with this assigment",
            "example": "40",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The date the assignment was created",
            "example": "2021-07-21T14:00:00.000Z",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "description": "The date the assignment is due to be completed",
            "example": "2021-07-21T14:00:00.000Z",
            "nullable": true
          },
          "status": {
            "description": "The status of the assignment",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/AssignmentStatusEnum"
              }
            ]
          }
        }
      },
      "LmsCreateCollectionRequestDto": {
        "type": "object",
        "properties": {
          "unified_custom_fields": {
            "type": "object",
            "description": "Custom Unified Fields configured in your StackOne project",
            "additionalProperties": true,
            "example": {
              "my_project_custom_field_1": "REF-1236",
              "my_project_custom_field_2": "some other value"
            },
            "nullable": true
          },
          "external_reference": {
            "type": "string",
            "description": "The external ID associated with this collection",
            "example": "SOFTWARE-ENG-LV1-TRAINING-collection-1",
            "nullable": true
          },
          "learning_object_ids": {
            "description": "The child ID/IDs associated with this collection",
            "example": [
              "16873-SOFTWARE-ENG-COURSE",
              "16874-SOFTWARE-ENG-COURSE"
            ],
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "remote_learning_object_ids": {
            "description": "Provider's unique identifiers of the child ID/IDs associated with this collection",
            "example": [
              "e3cb75bf-aa84-466e-a6c1-b8322b257a48",
              "e3cb75bf-aa84-466e-a6c1-b8322b257a49"
            ],
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string",
            "description": "The title of the collection",
            "example": "Software Engineer Lv 1 Collection",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the collection",
            "example": "This collection acts as learning pathway for software engineers.",
            "nullable": true
          },
          "languages": {
            "description": "The languages associated with this collection",
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cover_url": {
            "type": "string",
            "description": "The URL of the thumbnail image associated with the collection.",
            "example": "https://www.googledrive.com/?v=16873",
            "nullable": true
          },
          "categories": {
            "description": "The categories associated with this content",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCategoriesApiModel"
            }
          },
          "skills": {
            "description": "The skills associated with this content",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSkillsApiModel"
            }
          }
        }
      },
      "LmsCreateCompletionRequestDto": {
        "type": "object",
        "properties": {
          "passthrough": {
            "type": "object",
            "description": "Value to pass through to the provider",
            "example": {
              "other_known_names": "John Doe"
            },
            "additionalProperties": true,
            "nullable": true
          },
          "result": {
            "description": "The result of the completion",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ResultStatusEnum"
              }
            ]
          },
          "completed_at": {
            "type": "string",
            "description": "The date the content was completed",
            "example": "2021-07-21T14:00:00.000Z",
            "nullable": true
          },
          "learning_object_id": {
            "type": "string",
            "description": "The id of the learning object associated with this completion. This is not required unless specified in an integration.",
            "example": "e3gd34-23tr21-er234-345er56",
            "nullable": true
          },
          "learning_object_external_reference": {
            "type": "string",
            "description": "The external reference of the learning object associated with this completion, this is the main identifier for creating completions.",
            "example": "learning-content-123",
            "nullable": true
          },
          "content_external_reference": {
            "type": "string",
            "description": "The external reference associated with this content",
            "example": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1-CONTENT",
            "deprecated": true,
            "nullable": true
          },
          "content_id": {
            "type": "string",
            "description": "The content ID associated with this completion",
            "example": "16873-ENG-VIDEO-1",
            "deprecated": true,
            "nullable": true
          }
        }
      },
      "LmsUpsertContentRequestDto": {
        "type": "object",
        "properties": {
          "unified_custom_fields": {
            "type": "object",
            "description": "Custom Unified Fields configured in your StackOne project",
            "additionalProperties": true,
            "example": {
              "my_project_custom_field_1": "REF-1236",
              "my_project_custom_field_2": "some other value"
            },
            "nullable": true
          },
          "external_reference": {
            "type": "string",
            "description": "The external ID associated with this content",
            "example": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the content",
            "example": "Software Engineer Lv 1",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the content",
            "example": "This video acts as learning content for software engineers.",
            "nullable": true
          },
          "additional_data": {
            "description": "The additional_data associated with this content",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalData"
            }
          },
          "languages": {
            "description": "The languages associated with this content",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageEnum"
            }
          },
          "content_url": {
            "type": "string",
            "description": "The external URL of the content",
            "example": "https://www.youtube.com/watch?v=16873",
            "nullable": true
          },
          "mobile_launch_content_url": {
            "type": "string",
            "description": "The mobile friendly URL of the content",
            "example": "https://www.mobile.youtube.com/watch?v=16873",
            "nullable": true
          },
          "content_type": {
            "description": "The type of content",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ContentTypeEnum"
              }
            ]
          },
          "cover_url": {
            "type": "string",
            "description": "The URL of the thumbnail image associated with the content.",
            "example": "https://www.googledrive.com/?v=16873",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Whether the content is active and available for users.",
            "example": true,
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "The duration of the content following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string or the minimum unit accepted by the provider.",
            "example": "P3Y6M4DT12H30M5S",
            "format": "string",
            "nullable": true
          },
          "skills": {
            "description": "The skills associated with this content",
            "example": [
              {
                "id": "12345",
                "name": "Sales Techniques"
              }
            ],
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSkillsApiModel"
            }
          },
          "order": {
            "type": "number",
            "description": "The order of the individual content within a content grouping. This is not applicable for pushing individual content.",
            "example": 1,
            "format": "number",
            "nullable": true
          },
          "short_description": {
            "type": "string",
            "description": "A short description or summary for the content",
            "example": "This course is a valuable resource and acts as learning content for...",
            "deprecated": true,
            "nullable": true
          },
          "categories": {
            "description": "The categories associated with this content",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCategoriesApiModel"
            }
          }
        }
      },
      "LmsUpsertCourseRequestDto": {
        "type": "object",
        "properties": {
          "unified_custom_fields": {
            "type": "object",
            "description": "Custom Unified Fields configured in your StackOne project",
            "additionalProperties": true,
            "example": {
              "my_project_custom_field_1": "REF-1236",
              "my_project_custom_field_2": "some other value"
            },
            "nullable": true
          },
          "external_reference": {
            "type": "string",
            "description": "The external ID associated with this course",
            "example": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the course",
            "example": "Software Engineer Lv 1",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the course",
            "example": "This course acts as learning content for software engineers.",
            "nullable": true
          },
          "languages": {
            "description": "The languages associated with this course",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageEnum"
            }
          },
          "cover_url": {
            "type": "string",
            "description": "The URL of the thumbnail image associated with the course.",
            "example": "https://www.googledrive.com/?v=16873",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The redirect URL of the course.",
            "example": "https://www.linkedinlearning.com/?v=16873",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Whether the course is active and available for users.",
            "example": true,
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "The duration of the course following the ISO8601 standard. If duration_unit is applicable we will derive this from the smallest unit given in the duration string",
            "example": "P3Y6M4DT12H30M5S",
            "format": "string",
            "nullable": true
          },
          "categories": {
            "description": "The categories associated with this content",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCategoriesApiModel"
            }
          },
          "skills": {
            "description": "The skills associated with this content",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSkillsApiModel"
            }
          },
          "content": {
            "description": "The content associated with this course",
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateContentApiModel"
            }
          }
        }
      },
      "LmsUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "remote_id": {
            "type": "string",
            "description": "Provider's unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "unified_custom_fields": {
            "type": "object",
            "description": "Custom Unified Fields configured in your StackOne project",
            "additionalProperties": true,
            "example": {
              "my_project_custom_field_1": "REF-1236",
              "my_project_custom_field_2": "some other value"
            },
            "nullable": true
          },
          "external_reference": {
            "type": "string",
            "description": "The external ID associated with this user",
            "example": "al60043",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The user name",
            "example": "John Dew",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The user email",
            "example": "john@dew.com",
            "nullable": true
          },
          "phone_number": {
            "type": "string",
            "description": "The user phone number",
            "example": "+1234567890",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "The user active status",
            "example": true,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The created_at date",
            "example": "2021-01-01T01:01:01.000Z",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "The updated_at date",
            "example": "2021-01-01T01:01:01.000Z",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "RawResponse": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "response": {
            "type": "object",
            "additionalProperties": true,
            "nullable": true
          }
        },
        "required": [
          "method",
          "url"
        ]
      },
      "ResultStatusEnum": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "Pass",
              "Fail",
              null
            ],
            "x-speakeasy-unknown-values": "allow",
            "nullable": true
          },
          "source_value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "type": "object"
              },
              {
                "type": "array",
                "items": {}
              }
            ],
            "nullable": true
          }
        }
      },
      "SkillLevelEnum": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "primary",
              "secondary",
              "tertiary",
              null
            ],
            "x-speakeasy-unknown-values": "allow",
            "nullable": true
          },
          "source_value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "type": "object"
              },
              {
                "type": "array",
                "items": {}
              }
            ],
            "nullable": true
          }
        }
      },
      "SkillProficiencyLevelEnum": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              null
            ],
            "x-speakeasy-unknown-values": "allow",
            "nullable": true
          },
          "source_value": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              },
              {
                "type": "object"
              },
              {
                "type": "array",
                "items": {}
              }
            ],
            "nullable": true
          }
        }
      },
      "SkillResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Skills"
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "Skills": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID associated with this skill",
            "example": "16873-IT345",
            "nullable": true
          },
          "remote_id": {
            "type": "string",
            "description": "Provider's unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name associated with this skill",
            "example": "Information-Technology",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Whether the skill is active and therefore available for use",
            "example": true,
            "nullable": true
          },
          "hierarchy": {
            "description": "The hierarchal level of the skill",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevelEnum"
              }
            ]
          },
          "proficiency": {
            "description": "The user proficiency level of the skill ranked out of 5",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillProficiencyLevelEnum"
              }
            ]
          },
          "language": {
            "description": "The language associated with this skill",
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageEnum"
              }
            ]
          },
          "level": {
            "description": "The hierarchal level of the skill",
            "deprecated": true,
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SkillLevelEnum"
              }
            ]
          }
        }
      },
      "SkillsPaginated": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Skills"
            }
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UpdateResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Record updated successfully."
          },
          "timestamp": {
            "type": "string",
            "example": "2021-01-01T01:01:01.000Z",
            "format": "date-time"
          }
        },
        "required": [
          "statusCode",
          "message",
          "timestamp"
        ]
      },
      "UpsertResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "Record created successfully."
          },
          "timestamp": {
            "type": "string",
            "example": "2021-01-01T01:01:01.000Z",
            "format": "date-time"
          },
          "data": {
            "$ref": "#/components/schemas/UpsertResultDataExternalReferenceModel"
          }
        },
        "required": [
          "statusCode",
          "message",
          "timestamp",
          "data"
        ]
      },
      "UpsertResultDataExternalReferenceModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "remote_id": {
            "type": "string",
            "description": "Provider's unique identifier",
            "example": "8187e5da-dc77-475e-9949-af0f1fa4e4e3",
            "nullable": true
          },
          "external_reference": {
            "type": "string",
            "description": "The external identifier",
            "example": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1",
            "nullable": true
          }
        }
      },
      "UserResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/LmsUser"
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "UsersPaginated": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LmsUser"
            }
          },
          "raw": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RawResponse"
            }
          }
        },
        "required": [
          "data"
        ]
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}