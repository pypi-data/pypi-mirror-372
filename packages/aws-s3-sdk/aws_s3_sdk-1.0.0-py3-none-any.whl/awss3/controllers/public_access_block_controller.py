# -*- coding: utf-8 -*-

"""
awss3

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from awss3.api_helper import APIHelper
from awss3.configuration import Server
from awss3.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from awss3.http.http_method_enum import HttpMethodEnum


class PublicAccessBlockController(BaseController):

    """A Controller to access Endpoints in the awss3 API."""
    def __init__(self, config):
        super(PublicAccessBlockController, self).__init__(config)

    def public_access_block(self,
                            public_access_block,
                            x_amz_content_sha_256):
        """Does a GET request to /.

        Retrieves the PublicAccessBlock configuration for an Amazon S3 bucket.
        In order to use this operation, you must have the
        s3:GetBucketPublicAccessBlock permission. For more information about
        Amazon S3 permissions, see Specifying Permissions in a Policy. 

        Args:
            public_access_block (str): The request query parameter.
            x_amz_content_sha_256 (str): The request header parameter.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('publicAccessBlock')
                         .value(public_access_block))
            .header_param(Parameter()
                          .key('x-amz-content-sha256')
                          .value(x_amz_content_sha_256))
        ).execute()

    def public_access_block_1(self,
                              public_access_block,
                              x_amz_content_sha_256):
        """Does a PUT request to /.

        Retrieves the PublicAccessBlock configuration for an Amazon S3 bucket.
        In order to use this operation, you must have the
        s3:GetBucketPublicAccessBlock permission. For more information about
        Amazon S3 permissions, see Specifying Permissions in a Policy. 

        Args:
            public_access_block (str): The request query parameter.
            x_amz_content_sha_256 (str): The request header parameter.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/')
            .http_method(HttpMethodEnum.PUT)
            .query_param(Parameter()
                         .key('publicAccessBlock')
                         .value(public_access_block))
            .header_param(Parameter()
                          .key('x-amz-content-sha256')
                          .value(x_amz_content_sha_256))
        ).execute()

    def public_access_block_2(self,
                              public_access_block,
                              x_amz_content_sha_256,
                              bucket):
        """Does a DELETE request to /{bucket}.

        Removes the PublicAccessBlock configuration for an Amazon S3 bucket.
        In order to use this operation, you must have the
        s3:PutBucketPublicAccessBlock permission.

        Args:
            public_access_block (str): The request query parameter.
            x_amz_content_sha_256 (str): The request header parameter.
            bucket (str): The request template parameter.

        Returns:
            void: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/{bucket}')
            .http_method(HttpMethodEnum.DELETE)
            .query_param(Parameter()
                         .key('publicAccessBlock')
                         .value(public_access_block))
            .header_param(Parameter()
                          .key('x-amz-content-sha256')
                          .value(x_amz_content_sha_256))
            .template_param(Parameter()
                            .key('bucket')
                            .value(bucket)
                            .should_encode(True))
        ).execute()
