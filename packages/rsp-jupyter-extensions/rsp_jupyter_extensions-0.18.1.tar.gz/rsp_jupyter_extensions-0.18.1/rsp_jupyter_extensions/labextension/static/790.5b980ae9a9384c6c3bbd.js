"use strict";(self.webpackChunkrsp_jupyter_extensions=self.webpackChunkrsp_jupyter_extensions||[]).push([[790],{790:(e,t,n)=>{n.r(t),n.d(t,{default:()=>P});var r=n(679),o=n(830),i=n(990),s=n(263),a=n(973);function u(e,t,n){return a.ServerConnection.makeRequest(e,t,n).then((e=>200!==e.status?e.json().then((t=>{throw new a.ServerConnection.ResponseError(e,t.message)})):e.json()))}var l=n(29),c=n(386);function d(e){return l.createElement(r.TextItem,{source:`${e.source}`,title:`${e.title}`})}class m extends c.VDomRenderer{constructor(e){super(new c.VDomModel),this.props=e}render(){return this.props?l.createElement(d,{source:this.props.source,title:this.props.title}):null}dispose(){super.dispose()}}const h=m;var g;function E(e,t=null,n,...r){e===g.DEBUG&&t&&t.DEBUG||e===g.INFO?console.log(n,...r):e===g.WARNING?console.warn(n,...r):e===g.ERROR&&console.error(n,...r)}!function(e){e.DEBUG="debug",e.INFO="info",e.WARNING="warning",e.ERROR="error"}(g||(g={}));const b="rsp-jupyterlab",y=`${b}:plugin`,p=`${b}:displayversion`;r.IStatusBar;var f,v,R,D,N,U=n(882);!function(e){e.rubinqueryitem="rubinqueryitem",e.rubinhistory="rubinhistory",e.rubinquerynb="rubinquerynb",e.rubinqueryrefresh="rubinqueryrefresh"}(f||(f={}));class I{constructor(e){this.jobref=e.jobref,this.text=e.text}}async function B(e,t,n,r,o){const{commands:i}=e;i.hasCommand(f.rubinqueryitem)||i.addCommand(f.rubinqueryitem,{label:"Open from your query history...",caption:"Open notebook from supplied query jobref ID or URL",execute:()=>{!async function(e,t,n,r,o){try{const i=await async function(e){const t={title:"Query Jobref ID or URL",body:new O,focusNodeSelector:"input",buttons:[c.Dialog.cancelButton(),c.Dialog.okButton({label:"CREATE"})]};try{const n=await(0,c.showDialog)(t);return n?(E(g.DEBUG,e,`Result from queryDialog: ${n}`),n.value?n.button?"CREATE"===n.button.label?(E(g.DEBUG,e,`Got result ${n.value} from queryDialog: CREATE`),n.value):void E(g.DEBUG,e,"Did not get queryDialog: CREATE"):void E(g.DEBUG,e,"No result.button from queryDialog"):void E(g.DEBUG,e,"No result.value from queryDialog")):void E(g.DEBUG,e,"No result from queryDialog")}catch(e){throw console.error(`Error showing overwrite dialog ${e}`),new Error(`Failed to show overwrite dialog: ${e}`)}}(r);if(E(g.DEBUG,r,`Query URL / ID is ${i}`),!i)return void E(g.WARNING,r,"Query URL was null'");w(e,t,n,r,i,o)}catch(e){throw E(g.ERROR,r,`Error performing query ${e}`),new Error(`Failed to perform query: ${e}`)}}(e,t,n,r,o)}}),i.hasCommand(f.rubinquerynb)||i.addCommand(f.rubinquerynb,{label:"All queries",caption:"Open notebook requesting all query history",execute:()=>{!async function(e,t,n,r){const o=s.PageConfig.getBaseUrl()+"rubin/query/tap/notebooks/query_all";E(g.INFO,r,"Opening query-all notebook");u(o,{method:"GET"},n.serverSettings).then((e=>{const n=e.path;t.open(n)}))}(0,t,n,r)}}),i.hasCommand(f.rubinqueryrefresh)||i.addCommand(f.rubinqueryrefresh,{label:"Refresh query history",caption:"Refresh query history",execute:()=>{B(e,t,n,r,o)}}),o.clearItems();const a={command:f.rubinqueryitem},l={command:f.rubinquerynb},d={command:f.rubinqueryrefresh};o.insertItem(10,a),E(g.DEBUG,r,"inserted query dialog menu"),o.insertItem(20,{type:"separator"}),o.insertItem(30,l),E(g.DEBUG,r,"inserted all-query notebook generator"),o.insertItem(40,{type:"separator"});try{const i=await async function(e,t,n,r,o){E(g.INFO,r,"Retrieving recent query menu");const{commands:i}=e,a=new U.Menu({commands:i});a.title.label="Recent Queries";try{const l=await async function(e,t){const n=s.PageConfig.getBaseUrl()+"rubin/query/tap/history/5",r={method:"GET"};E(g.INFO,t,`About to query TAP history at ${n}`);const o=e.serverSettings,i=[];try{const e=await u(n,r,o);E(g.DEBUG,t,`Got query response ${JSON.stringify(e,void 0,2)}`),e.forEach((e=>{const n=new I(e);n.text=function(e,t){if(e.length<=80)return e;let n="",r="",o=e;for(;;){if(o.length<=80){n+=o;break}r=o.substring(0,80),o=o.substring(80);let e=!1;for(let t=r.length-1;t>=0;t--){const i=r.substring(t,t+1);if(" "===i){n+=r.substring(0,t)+"\n",e=!0,o=r.substring(t+1)+o;break}if(","===i){n+=r.substring(0,t+1)+"\n",e=!0,o=r.substring(t+1)+o;break}}!1===e&&(n+=r+"\n")}return n}(e.text),E(g.DEBUG,t,`query menu entry ${JSON.stringify(n,void 0,2)}`),i.push(n)}))}catch(e){throw console.error(`Error showing overwrite dialog ${e}`),new Error(`Failed to show overwrite dialog: ${e}`)}return E(g.DEBUG,t,`rubinqueryrecent history return: ${JSON.stringify(i,void 0,2)}`),i}(n,r);E(g.DEBUG,r,`Recent queries: ${JSON.stringify(l,void 0,2)}`);let c=10;l.forEach((s=>{const u=`q-${s.jobref}`;i.hasCommand(u)||i.addCommand(u,{label:s.text,execute:()=>{w(e,t,n,r,s.jobref,o)}});const l=new U.Menu({commands:i});l.title.label=s.jobref,l.insertItem(0,{type:"command",command:u}),E(g.DEBUG,r,`Added ${u} to submenu for ${s.jobref} => ${l.title.label}`),a.insertItem(c,{type:"submenu",submenu:l}),E(g.DEBUG,r,`Added submenu ${s.jobref} at menuindex ${c} to ${a.title.label}`),c+=10}))}catch(e){throw E(g.ERROR,r,`Error performing recent query history ${e}`),new Error(`Failed to query recent history: ${e}`)}return a}(e,t,n,r,o);E(g.DEBUG,r,"recent query menu retrieved"),E(g.DEBUG,r,"inserting recent querymenu..."),o.insertItem(50,{type:"submenu",submenu:i})}catch(e){throw console.error(`Error getting recent query menu ${e}`),new Error(`Failed to get recent query menu: ${e}`)}E(g.DEBUG,r,"...inserted recent query menu"),o.insertItem(60,{type:"separator"}),o.insertItem(70,d),E(g.DEBUG,r,"inserted query refresh")}class O extends U.Widget{constructor(){super({node:v.createQueryNode()}),this.addClass("rubin-qh")}get inputNode(){return this.node.getElementsByTagName("input")[0]}getValue(){return this.inputNode.value}}function w(e,t,n,r,o,i){E(g.INFO,r,`Opening query for ${o}`);const a=JSON.stringify({type:"tap",value:o});u(s.PageConfig.getBaseUrl()+"rubin/query",{method:"POST",body:a},n.serverSettings).then((e=>{const n=e.path;t.open(n)})),B(e,t,n,r,i)}function $(e,t,n,r,o){S(o);const i=Promise.resolve(function(e,t,n,r){const o=[];for(const n of e.shell.widgets("main"))if(n){const e=t.contextForWidget(n);e?(E(g.DEBUG,r,`Saving context for widget: ${{id:n.id}}`),o.push(e.save())):E(g.WARNING,r,`No context for widget: ${{id:n.id}}`)}E(g.DEBUG,r,"Waiting for all save-document promises to resolve.");let i=Promise.resolve(1);return o&&(Promise.all(o),i=o[0]),i}(e,t,0,o));return i.then((t=>G(e,0,0,r,o))),i.catch((e=>{E(g.WARNING,o,`savequit: saveAll failed: ${e.message}`)})),E(g.INFO,o,"savequit: Save and Quit complete."),i}function G(e,t,n,r,o){S(o);let i=`${o.EXTERNAL_INSTANCE_URL}`;return r&&(i+="/logout"),Promise.resolve(function(e,t){const n=e.serviceManager.serverSettings,r=s.PageConfig.getBaseUrl()+"rubin/hub";return E(g.DEBUG,t,`savequit: hubRequest URL: ${r} | Settings: ${n}`),a.ServerConnection.makeRequest(r,{method:"DELETE"},n)}(e,o).then((()=>{E(g.INFO,o,"Quit complete.")})).then((()=>{window.location.replace(i)})))}function S(e){const t={title:"Redirecting to landing page",body:"JupyterLab cleaning up and redirecting to landing page.",buttons:[c.Dialog.okButton({label:"Got it!"})]};return(0,c.showDialog)(t).then((()=>{E(g.DEBUG,e,"Info dialog panel displayed")}))}o.IMainMenu,i.IDocumentManager,function(e){e.createQueryNode=function(){const e=document.createElement("div"),t=document.createElement("label");t.textContent="Enter Query Jobref ID or URL";const n=document.createElement("input");return e.appendChild(t),e.appendChild(n),e}}(v||(v={})),function(e){e.justQuit="justquit:justquit",e.saveQuit="savequit:savequit",e.saveLogout="savelogout:savelogout"}(R||(R={})),o.IMainMenu,i.IDocumentManager,function(e){e.COPY="copy",e.FETCH="fetch"}(D||(D={})),function(e){e.PROMPT="prompt",e.OVERWRITE="overwrite",e.ABORT="abort"}(N||(N={}));class q{constructor(e){this.menu_name=e.menu_name,this.action=e.action,this.disposition=e.disposition,this.parent=e.parent,this.src=e.src,this.dest=e.dest}}class T{constructor(e,t=null,n=null){if(this.entries=null,this.subhierarchies=null,this.env=null,null===t&&(t="<unnamed>"),this.env=n,E(g.INFO,this.env,`Building hierarchy ${t}`),null!==e.entries)for(const n in e.entries){E(g.DEBUG,this.env,`${t} -> entry ${n}`);const r=e.entries[n];null!==r?(null===this.entries&&(this.entries={}),E(g.DEBUG,this.env,`adding entry ${n}: ${JSON.stringify(r,void 0,2)}`),this.entries[n]=new q(r)):E(g.DEBUG,this.env,`skipping null entry ${n}`)}if(null!==e.subhierarchies){const r=Object.keys(e.subhierarchies);E(g.DEBUG,this.env,`Subhierarchies: ${r}`);for(const o of r){if(null===e.subhierarchies){E(g.WARNING,this.env,`Somehow, subhierarchies is null at ${t}`);continue}E(g.DEBUG,this.env,`${t} -> subhierarchy ${o}`);const r=e.subhierarchies[o];null!==r?(null===this.subhierarchies&&(this.subhierarchies={}),E(g.DEBUG,n,`recurse: new subhierarchy of ${t} ${o}`),this.subhierarchies[o]=new T(r,o)):E(g.DEBUG,this.env,`skipping null subhierarchy ${o}`)}}E(g.DEBUG,n,`hierarchy ${t} built`)}}function A(e,t,n,r){E(g.DEBUG,r,`Sending POST to tutorials endpoint with data ${JSON.stringify(n,void 0,2)}`),a.ServerConnection.makeRequest(s.PageConfig.getBaseUrl()+"rubin/tutorials",{method:"POST",body:JSON.stringify(n)},e).then((o=>{409===o.status&&async function(e,t,n){const r={title:"Target file exists",body:`Overwrite file '${e}' ?`,buttons:[c.Dialog.cancelButton(),c.Dialog.okButton({label:"OVERWRITE"})]};try{E(g.DEBUG,n,"Showing overwrite dialog");const e=await(0,c.showDialog)(r);return e?(E(g.DEBUG,n,"Result from overwriteDialog: ",e),e.button?"OVERWRITE"===e.button.label?(E(g.DEBUG,n,`Got result ${e.button.label} from overwriteDialog`),e.button.label):void E(g.DEBUG,n,"Did not get overwriteDialog: OVERWRITE"):void E(g.DEBUG,n,"No result.button from overwriteDialog")):void E(g.DEBUG,n,"No result from queryDialog")}catch(e){throw console.error(`Error showing overwrite dialog ${e}`),new Error(`Failed to show overwrite dialog: ${e}`)}}(n.dest,0,r).then((o=>{if(E(g.DEBUG,r,`Dialog result was ${o}`),"OVERWRITE"!==o)return;const i={menu_name:n.menu_name,action:n.action,disposition:N.OVERWRITE,parent:n.parent,src:n.src,dest:n.dest},s=new q(i);A(e,t,s,r)})),307===o.status||200===o.status?(E(g.DEBUG,r,`Opening file ${n.dest}`),t.openOrReveal(n.dest)):E(g.WARNING,r,`Unexpected response status ${o.status}`)}))}function _(e,t,n,r){E(g.INFO,r,"rsp-tutorials: loading...");const o=e.serviceManager.serverSettings;function i(r,s,a,u){if(E(g.DEBUG,u,`building tutorials menu for ${r}`),null===a){const{commands:n}=e,r=new U.Menu({commands:n});r.title.label="Tutorials",a=r,E(g.DEBUG,u,"set up top level Tutorials menu"),t.addMenu(r)}else E(g.DEBUG,u,`supplied parent menu=${a.title.label}`);const l=a.title.label;if(E(g.DEBUG,u,`building tutorials menu ${r}, parent=${l}`),null!==s.subhierarchies)for(const t in s.subhierarchies){const n=s.subhierarchies[t];if(null===n){E(g.DEBUG,u,`skipping empty hierarchy ${t}`);continue}if(null===n.entries&&null===n.subhierarchies){E(g.DEBUG,u,`Skipping hierarchy ${t} with no entries or subhierarchies`);continue}E(g.DEBUG,u,`adding submenu ${t} to ${l}`);const{commands:r}=e,o=new U.Menu({commands:r});o.title.label=t,a.addItem({submenu:o,type:"submenu"}),E(g.DEBUG,u,`recurse: hierarchy ${t}`),i(t,n,o,u),E(g.DEBUG,u,`recursion done; emerged from ${t}`)}if(E(g.DEBUG,u,`done with subhierarchies for ${r}`),null!==s.entries){a.addItem({type:"separator"});for(const t in s.entries){const{commands:r}=e,i=s.entries[t],c=`${i.parent}/${i.menu_name}`;E(g.DEBUG,u,`creating command ${c} for entry ${JSON.stringify(t,void 0,2)}`),r.addCommand(c,{label:t,execute:()=>{A(o,n,i,u)}}),E(g.DEBUG,u,`adding item ${c} to ${l}`),a.addItem({command:c,type:"command"})}}E(g.DEBUG,u,`done with ${r}`)}(function(e,t){return u(s.PageConfig.getBaseUrl()+"rubin/tutorials",{method:"GET"},e).then((e=>{E(g.DEBUG,t,`Tutorial endpoint response: ${JSON.stringify(e,void 0,2)}`);const n=new T(e);return E(g.DEBUG,t,"Created TutorialsHierarchy from response"),E(g.DEBUG,t,"=============================="),n}))})(o,r).then((e=>{e&&i("root",e,null,r)})),E(g.INFO,r,"rsp-tutorials: ...loaded.")}function C(e){let t=-1;e.ABNORMAL_STARTUP_ERRNO&&(t=parseInt(e.ABNORMAL_STARTUP_ERRNO));let n="EUNKNOWN";e.ABNORMAL_STARTUP_ERRORCODE&&(n=e.ABNORMAL_STARTUP_ERRORCODE);let r="unknown error";e.ABNORMAL_STARTUP_STRERROR&&(r=e.ABNORMAL_STARTUP_STRERROR);let o="???";e.ABNORMAL_STARTUP_MESSAGE&&(o=e.ABNORMAL_STARTUP_MESSAGE);let i=function(e){const t=" This Lab should not be trusted for work you want to keep.",n=" Try deleting unneeded .user_env directories and no-longer relevant large files, then shut down and restart the Lab.",r="You have run out of filesystem space."+n,o="You have exceeded your filesystem quota."+n,i="You do not have permission to write. Ask your RSP site administrator to check ownership and permissions on your directories."+t,s="Please open an issue with your RSP site administrator with the error number, description, and message shown above."+t,a="You are missing environment variables necessary for RSP operation. "+s;switch(e){case"EACCES":case"EROFS":return i;case"ENOSPC":return r;case"EDQUOT":return o;case"EBADENV":return a;default:return s}}(n);return i=i+"\n\n"+`JupyterLab started in an abnormal state: error # ${t} (${n}) [${r}] "${o}"`,i}o.IMainMenu,i.IDocumentManager;const P={activate:function(e,t,n,r){E(g.INFO,null,"getting server environment..."),function(e){return u(s.PageConfig.getBaseUrl()+"rubin/environment",{method:"GET"},e.serviceManager.serverSettings).then((e=>e))}(e).then((o=>{E(g.DEBUG,o,`...env: ${JSON.stringify(o,void 0,2)}...`),E(g.INFO,o,"...got server environment"),E(g.INFO,o,"rsp-lab-extension: loading..."),E(g.INFO,o,"...activating savequit extension..."),function(e,t,n,r){E(g.INFO,null,"rsp-savequit: loading...");e.serviceManager;const{commands:o}=e;o.addCommand(R.justQuit,{label:"Exit Without Saving",caption:"Destroy container",execute:()=>{G(e,0,0,!1,r)}}),o.addCommand(R.saveQuit,{label:"Save All and Exit",caption:"Save open notebooks and destroy container",execute:()=>{$(e,n,0,!1,r)}}),o.addCommand(R.saveLogout,{label:"Save All, Exit, and Log Out",caption:"Save open notebooks, destroy container, and log out",execute:()=>{$(e,n,0,!0,r)}});const i=[{command:R.justQuit},{command:R.saveQuit},{command:R.saveLogout}];t.fileMenu.addGroup(i,150),E(g.INFO,r,"rsp-savequit: ...loaded.")}(e,t,n,o),E(g.INFO,o,"...checking for abnormal startup..."),"TRUE"===o.ABNORMAL_STARTUP&&async function(e){const t={title:"Abnormal Lab Start",body:C(e),focusNodeSelector:"input",buttons:[c.Dialog.warnButton({label:"OK"})]};try{const n=await(0,c.showDialog)(t);return n?(E(g.DEBUG,e,`Result from queryDialog: ${n}`),n.value?n.button?void 0:void E(g.DEBUG,e,"No result.button from queryDialog"):void E(g.DEBUG,e,"No result.value from queryDialog")):void E(g.DEBUG,e,"No result from queryDialog")}catch(e){throw console.error(`Error showing abnormal startup dialog ${e}`),new Error(`Failed to show abnormal startup dialog: ${e}`)}}(o),E(g.INFO,o,"...activating displayversion extension..."),function(e,t,n){E(g.INFO,n,"rsp-displayversion: loading...");const r=n.IMAGE_DESCRIPTION||"",o=n.IMAGE_DIGEST,i=n.JUPYTER_IMAGE_SPEC,s=" "+new URL(n.EXTERNAL_INSTANCE_URL||"").hostname,a=n.CONTAINER_SIZE||"";let u="";u=""===a?" ("+n.CPU_LIMIT+" CPU, "+n.MEM_LIMIT+" B)":" "+a;let l="",c="";if(i){const e=i.split("/"),n=e[e.length-1],a=n.split("@");2===a.length?(l=" ["+a[1].substring(7,15)+"...]",c=" ("+a[0]+")"):c=" ("+n+")",""===l&&o&&(l=" ["+o.substring(0,8)+"...]");const d=new h({source:r+l+c+u+s,title:r});t.registerStatusItem(p,{item:d,align:"left",rank:80,isActive:()=>!0})}E(g.INFO,n,"rsp-displayversion: ... loaded")}(0,r,o),E(g.INFO,o,"...activated..."),E(g.INFO,o,"...activating query extension..."),"science"===o.RSP_SITE_TYPE||"staff"===o.RSP_SITE_TYPE?(function(e,t,n,r){E(g.INFO,r,"rsp-query...loading");const o=e.serviceManager,{commands:i}=e,s=new U.Menu({commands:i});t.addMenu(s),s.title.label="Rubin",B(e,n,o,r,s).then((()=>{})),E(g.INFO,r,"rsp-query...loaded")}(e,t,n,o),E(g.INFO,o,"...activated...")):E(g.INFO,o,`...skipping query extension because site type is '${o.RSP_SITE_TYPE}'...`),E(g.INFO,o,"...activated..."),E(g.INFO,o,"...activating tutorials extension..."),"science"===o.RSP_SITE_TYPE?(_(e,t,n,o),E(g.INFO,o,"...activated...")):E(g.INFO,o,`...skipping tutorials extension because site type is '${o.RSP_SITE_TYPE}'...`),E(g.INFO,o,"...loaded rsp-lab-extension.")}))},id:y,requires:[o.IMainMenu,i.IDocumentManager,r.IStatusBar],autoStart:!0}}}]);