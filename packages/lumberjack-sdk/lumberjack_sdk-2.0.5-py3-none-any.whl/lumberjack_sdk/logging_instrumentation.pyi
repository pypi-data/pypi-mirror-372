import logging
from .constants import LOGGER_NAME_KEY_RESERVED_V2 as LOGGER_NAME_KEY_RESERVED_V2
from .internal_utils.fallback_logger import sdk_logger as sdk_logger
from opentelemetry.sdk._logs import LoggingHandler

class LumberjackLoggingHandler(LoggingHandler):
    def filter(self, record: logging.LogRecord) -> bool: ...
    def emit(self, record: logging.LogRecord) -> None: ...

class LoggingInstrumentation:
    def __new__(cls) -> LoggingInstrumentation: ...
    def __init__(self) -> None: ...
    def enable(self, level: int = ..., logger_name: str | None = None) -> None: ...
    def disable(self, logger_name: str | None = None) -> None: ...
    def is_enabled(self) -> bool: ...

def enable_python_logger_forwarding(level: int = ..., logger_name: str | None = None) -> None: ...
def disable_python_logger_forwarding(logger_name: str | None = None) -> None: ...
def is_python_logger_forwarding_enabled() -> bool: ...
