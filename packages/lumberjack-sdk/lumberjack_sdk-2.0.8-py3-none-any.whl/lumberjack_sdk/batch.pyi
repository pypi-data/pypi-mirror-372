from .constants import LogEntry as LogEntry
from _typeshed import Incomplete
from opentelemetry.trace import Span as Span
from typing import Any

class ObjectBatch:
    max_size: Incomplete
    max_age: Incomplete
    def __init__(self, max_size: int = 500, max_age: float = 30.0) -> None: ...
    def add(self, obj_entry: dict[str, Any]) -> bool: ...
    def get_objects(self) -> list[dict[str, Any]]: ...

class LogBatch:
    max_size: Incomplete
    max_age: Incomplete
    def __init__(self, max_size: int = 500, max_age: float = 30.0) -> None: ...
    def add(self, log_entry: LogEntry) -> bool: ...
    def get_logs(self) -> list[LogEntry]: ...

class SpanBatch:
    max_size: Incomplete
    max_age: Incomplete
    def __init__(self, max_size: int = 500, max_age: float = 30.0) -> None: ...
    def add(self, span: Span) -> bool: ...
    def get_spans(self) -> list['Span']: ...
