from ..internal_utils.fallback_logger import fallback_logger as fallback_logger
from _typeshed import Incomplete
from pathlib import Path as Path
from typing import Any

class InstallationMethod:
    name: Incomplete
    command: Incomplete
    args: Incomplete
    description: Incomplete
    def __init__(self, name: str, command: str, args: list | None = None, description: str = '') -> None: ...
    def to_mcp_config(self) -> dict[str, Any]: ...

def check_command_available(command: str) -> bool: ...
def is_running_via_uv() -> bool: ...
def install_with_uv_tool() -> tuple[bool, str]: ...
def detect_installation_method() -> tuple[InstallationMethod | None, str]: ...
def get_mcp_config_for_editor(editor: str = 'cursor') -> tuple[dict[str, Any] | None, str]: ...
def validate_mcp_setup() -> bool: ...
