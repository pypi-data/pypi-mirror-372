[build-system]
requires = ["setuptools >= 61", "wheel", "setuptools-scm[toml] >= 7.0.5"]
build-backend = "setuptools.build_meta"

[project]
authors = [
    { name = "James Dark" },
    { email = "darkj385@mit.edu" },
]
dynamic = ["version"]
name = "SHIELD_DAS"
description = "SHIELD permeation rig data aquisition system"
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
dependencies = ["LabJackPython", "numpy", "dash", "dash_bootstrap_components", "pandas", "keyboard", "plotly-resampler"]
classifiers = [
    "Natural Language :: English",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov", "numpy"]
lint = ["ruff", "mypy"]
docs = ["sphinx", "sphinx-book-theme", "sphinx-design", "matplotlib"]

[project.urls]
Homepage = "https://github.com/PTTEPxMIT/SHIELD_DAS"
Issues = "https://github.com/PTTEPxMIT/SHIELD_DAS/issues"


[tool.setuptools_scm]
write_to = "src/shield_das/_version.py"

[tool.mypy]
# Suggested at https://blog.wolt.com/engineering/2021/09/30/professional-grade-mypy-configuration/
# Goal would be to make all of the below True long-term
disallow_untyped_defs = false
disallow_any_unimported = false
no_implicit_optional = false
check_untyped_defs = false
warn_return_any = false
warn_unused_ignores = false
show_error_codes = true
ignore_missing_imports = true

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py310"


[tool.ruff.lint]
select = [
    "E",      # pycodestyle
    "W",      # pycodestyle
    "F",      # pyflakes
    "I",      # isort - use standalone isort
    "RUF",    # Ruff-specific rules
    "UP",     # pyupgrade
    "ICN",    # flake8-import-conventions
    "NPY",    # numpy-specific rules
    "FLY",    # use f-string not static joins
    "NPY201", # numpy 2.x ruleset
]
ignore = ["UP007", "RUF012"]

[tool.ruff.lint.isort]
known-first-party = ["shield_das"]
known-third-party = [
    "LabJackPython",
    "numpy",
    "matplotlib",
    "pytest",
]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]