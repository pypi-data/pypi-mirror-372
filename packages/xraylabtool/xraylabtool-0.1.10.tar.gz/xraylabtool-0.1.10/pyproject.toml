[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "xraylabtool"
version = "0.1.10"
authors = [
    {name = "Wei Chen", email = "wchen@anl.gov"},
]
maintainers = [
    {name = "Wei Chen", email = "wchen@anl.gov"},
]
description = "High-performance X-ray optical properties calculator with comprehensive CLI"
readme = "README.md"
license = "MIT"
requires-python = ">=3.12"
classifiers = [
    # Development Status
    "Development Status :: 4 - Beta",

    # Intended Audience
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",

    # Operating System
    "Operating System :: OS Independent",

    # Programming Language
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",

    # Topics
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Shells",
    "Topic :: Utilities",

    # Environment
    "Environment :: Console",

    # Natural Language
    "Natural Language :: English",

    # Typing
    "Typing :: Typed",
]
keywords = [
    "xray", "x-ray", "crystallography", "diffraction", "scattering",
    "synchrotron", "optics", "materials", "physics", "chemistry",
    "cxro", "nist", "cli", "command-line", "batch-processing",
    "scientific-computing", "laboratory", "analysis", "shell-completion",
    "bash-completion", "zsh-completion", "fish-completion", "powershell-completion",
    "tab-completion", "cross-platform", "windows-powershell", "pwsh"
]

# Core runtime dependencies
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "scipy>=1.9.0",
    "matplotlib>=3.5.0",
    "mendeleev>=0.15.0",
    "tqdm>=4.64.0",
]

[project.optional-dependencies]
# Development dependencies (includes testing, linting, formatting)
dev = [
    # Testing
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.0.0",  # Parallel test execution

    # Code quality
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",  # Fast linter alternative to flake8

    # Type stubs
    "pandas-stubs>=2.0.0",
    "types-tqdm>=4.64.0",
    "types-psutil>=5.9.0",

    # Pre-commit hooks
    "pre-commit>=3.0.0",
]

# Documentation dependencies
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinxcontrib-napoleon>=0.7.0",
    "myst-parser>=2.0.0",  # Markdown support
    "sphinx-autodoc-typehints>=1.24.0",  # Better type hint rendering
]

# Testing only (minimal test setup)
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
]

# Linting and formatting only
lint = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pandas-stubs>=2.0.0",
    "types-tqdm>=4.64.0",
    "types-psutil>=5.9.0",
]

# Performance profiling and optimization
perf = [
    "memory-profiler>=0.60.0",
    "line-profiler>=4.0.0",
    "py-spy>=0.3.0",
]

# Complete development environment
all = [
    # Include all optional dependency groups
    "xraylabtool[dev,docs,perf]",
]

[project.urls]
Homepage = "https://github.com/imewei/pyXRayLabTool"
Documentation = "https://pyxraylabtool.readthedocs.io"
Repository = "https://github.com/imewei/pyXRayLabTool"
"Source Code" = "https://github.com/imewei/pyXRayLabTool"
"Bug Tracker" = "https://github.com/imewei/pyXRayLabTool/issues"
"Changelog" = "https://github.com/imewei/pyXRayLabTool/blob/main/CHANGELOG.md"
"CLI Reference" = "https://github.com/imewei/pyXRayLabTool/blob/main/CLI_REFERENCE.md"
"Shell Completion" = "https://github.com/imewei/pyXRayLabTool/blob/main/SHELL_COMPLETION.md"
"Discussions" = "https://github.com/imewei/pyXRayLabTool/discussions"
"Release Notes" = "https://github.com/imewei/pyXRayLabTool/releases"

[project.scripts]
xraylabtool = "xraylabtool.cli:main"

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
where = ["."]
include = ["xraylabtool*"]
exclude = ["tests*", "docs*", "*.tests*", "*.tests"]

[tool.setuptools.package-data]
xraylabtool = [
    "data/AtomicScatteringFactor/*.nff",
    "py.typed",  # PEP 561 typing marker
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",  # Show all test outcomes except passed
    "--strict-markers",  # Treat unknown marks as errors
    "--strict-config",  # Treat unknown config options as errors
    "--cov=xraylabtool",  # Coverage for main package
    "--cov-branch",  # Branch coverage
    "--cov-report=term-missing",  # Show missing lines
    "--cov-report=html:htmlcov",  # HTML coverage report
    "--cov-report=xml",  # XML coverage report for CI
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "benchmark: marks tests as benchmark tests",
]
filterwarnings = [
    "error",  # Treat warnings as errors by default
    # Ignore specific warnings
    "ignore::ResourceWarning",
    "ignore:unclosed database in:ResourceWarning",
    "ignore::DeprecationWarning:tests.*",
    "ignore::DeprecationWarning:xraylabtool.*",
    "ignore::PendingDeprecationWarning",
    # NumPy warnings
    "ignore:.*numpy.ndarray size changed.*:RuntimeWarning",
    "ignore:.*numpy.ufunc size changed.*:RuntimeWarning",
]

[tool.black]
line-length = 88
target-version = ['py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | \.venv
  | venv
  | build
  | dist
  | htmlcov
  # Files
  | setup\.py
)/
'''
preview = true  # Enable latest formatting features

[tool.mypy]
python_version = "3.12"
files = ["xraylabtool", "tests"]
show_error_codes = true
pretty = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Strict mode settings
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
disallow_any_generics = true
disallow_subclassing_any = true

# Error output
show_column_numbers = true
show_error_context = true
color_output = true

[[tool.mypy.overrides]]
# Third-party libraries without stubs
module = [
    "matplotlib.*",
    "scipy.*",
    "mendeleev.*",
    "tqdm.*",
    "pytest_benchmark.*",
    "memory_profiler.*",
    "line_profiler.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
# Test files can be less strict
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
# Pandas has stubs available
module = "pandas.*"
ignore_missing_imports = false

[[tool.mypy.overrides]]
# Psutil has stubs available
module = "psutil.*"
ignore_missing_imports = false

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "PLR", # pylint refactor
    "PLW", # pylint warnings
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "PLR0913",  # too many arguments
    "PLR2004",  # magic value used in comparison
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    ".eggs",
    ".tox",
    "docs",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["ARG", "S101"]  # Allow unused args and asserts in tests
"__init__.py" = ["F401"]     # Allow unused imports in __init__.py

[tool.ruff.isort]
known-first-party = ["xraylabtool"]
force-sort-within-sections = true

[tool.coverage.run]
source = ["xraylabtool"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug:",
    "if settings\\.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101"]  # Skip assert_used test

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["xraylabtool"]
known_third_party = [
    "numpy", "pandas", "scipy", "matplotlib", "mendeleev", "tqdm",
    "pytest", "mypy", "black", "flake8"
]
