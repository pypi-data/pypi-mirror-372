import asyncio\nimport websockets\nimport redis\n\nasync def handler(websocket, path):\n    r = redis.Redis(host='redis', port=6379, db=0)\n    async for message in websocket:\n        await r.publish('chat', message)\n        print(f'Message received: {message}')\n\nasync def consumer(websocket, path):\n    r = redis.Redis(host='redis', port=6379, db=0)\n    pubsub = r.pubsub()\n    await pubsub.subscribe('chat')\n    while True:\n        message = await pubsub.get_message(ignore_subscribe_messages=True)\n        if message and message['type'] == 'message':\n            await websocket.send(message['data'].decode())\n\nasync def main():\n    async with websockets.serve(handler, '0.0.0.0', 8080):\n        await asyncio.Future()\n\nif __name__ == '__main__':\n    asyncio.run(main())
