# Optimized base image without unnecessary tools - ~4-5GB
FROM ubuntu:24.04

LABEL cli-arena.preserve=true

# System dependencies
RUN apt-get update && apt-get install -y \
    # Core tools
    curl wget git tmux unzip jq make \
    # Python and build tools
    python3 python3-pip python3-venv python3-dev python3-setuptools \
    build-essential pkg-config \
    # Libraries for Python packages
    libssl-dev libffi-dev libpq-dev \
    libblas-dev liblapack-dev gfortran \
    # Graphics libraries (for some packages)
    libcairo2-dev libpango1.0-dev \
    libjpeg-dev libgif-dev librsvg2-dev \
    # Database clients
    sqlite3 postgresql-client redis-server \
    && rm -rf /var/lib/apt/lists/*

# Node.js
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g yarn typescript jest

# Go for DevOps repos
RUN curl -fsSL https://golang.org/dl/go1.21.5.linux-amd64.tar.gz -o /tmp/go.tar.gz \
    && tar -C /usr/local -xzf /tmp/go.tar.gz \
    && rm -f /tmp/go.tar.gz
ENV PATH="/usr/local/go/bin:$PATH"

# Terraform for DevOps tasks
RUN curl -fsSL https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip -o /tmp/terraform.zip \
    && cd /tmp && unzip terraform.zip \
    && chmod +x terraform \
    && mv terraform /usr/local/bin/terraform \
    && rm -f /tmp/terraform.zip

# Python virtual environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python packages in layers for better caching
# Core packages
RUN /opt/venv/bin/pip install --upgrade pip setuptools wheel

# API clients and testing
RUN /opt/venv/bin/pip install \
    anthropic==0.64.0 \
    google-generativeai==0.8.5 \
    openai==1.100.2 \
    pytest==8.4.1 \
    httpx==0.28.1 \
    requests==2.32.5 \
    PyYAML==6.0.2 \
    python-dotenv==1.1.1

# FastAPI stack (commonly needed)
RUN /opt/venv/bin/pip install \
    fastapi uvicorn[standard] \
    python-jose[cryptography] \
    passlib[bcrypt] \
    python-multipart \
    sqlalchemy

# Create agent CLI wrappers
COPY agent-wrappers/ /usr/local/bin/

WORKDIR /app