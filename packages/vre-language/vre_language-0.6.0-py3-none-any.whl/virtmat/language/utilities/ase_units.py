"""units definitions of parameters used in ASE calculators and algorithms"""
import numpy

scalar_pars = {}

# VASP parameters have been sourced from
# https://gitlab.com/ase/ase/-/blob/master/ase/calculators/vasp/create_input.py
# VASP units definitions have been deduced from https://www.vasp.at/wiki/index.php
scalar_pars['vasp'] = {
    # special
    'lreal': None,  # can be either str or bool but always no units
    # ase calc parameters, not from VASP
    'directory': None,
    'command': None,
    'txt': None,
    'restart': None,
    'xc': None,
    'setups': None,
    'gamma': None,
    'pp': None,
    'kpts': 'dimensionless',
    'reciprocal': None,
    'charge': 'dimensionless',
    # floats
    'aexx': 'dimensionless',
    'aggac': 'dimensionless',
    'aggax': 'dimensionless',
    'aldac': 'dimensionless',
    'amin': 'dimensionless',
    'amix': 'dimensionless',
    'amix_mag': 'dimensionless',
    'bmix': '1 / angstrom',
    'bmix_mag': '1 / angstrom',
    'deper': 'dimensionless',
    'ebreak': 'eV',
    'efield':  'eV/angstrom',
    'emax': 'eV',
    'emin': 'eV',
    'enaug': 'eV',
    'encut': 'eV',
    'encutgw': 'eV',
    'encutfock': 'eV',
    'hfscreen': '1 / angstrom',
    'kspacing': '1 / angstrom',
    'potim': [lambda x: 'fs' if x.get('ibrion', -1 if x.get('nsw', 0) in [-1, 0]
              else 0) == 0 else None,
              lambda x: 'angstrom' if x.get('ibrion', -1 if x.get('nsw', 0) in [-1, 0]
              else 0) in [5, 6] else None,
              lambda x: 'dimensionless' if x.get('ibrion', -1 if x.get('nsw', 0) in [-1, 0]
              else 0) in [-1, 1, 2, 3, 4] else None],
    'param1': 'dimensionless',
    'param2': 'dimensionless',
    'pomass': 'unified_atomic_mass_unit',
    'pstress': 'kbar',
    'sigma': 'eV',
    'smass': 'dimensionless',
    'weimin': 'dimensionless',
    'zab_vdw': 'dimensionless',
    'zval': 'dimensionless',
    'clz': 'dimensionless',
    'vdw_radius': 'angstrom',
    'vdw_scaling': 'dimensionless',
    'vdw_d': 'dimensionless',
    'vdw_cnradius': 'angstrom',
    'vdw_s6': 'dimensionless',
    'vdw_s8': 'dimensionless',
    'vdw_sr': 'dimensionless',
    'vdw_a1': 'dimensionless',
    'vdw_a2': 'dimensionless',
    'langevin_gamma_l': '1 / ps',
    'pmass': 'unified_atomic_mass_unit',
    'bparam': 'dimensionless',
    'cparam': 'dimensionless',
    'aldax': 'dimensionless',
    'tebeg': 'K',
    'teend': 'K',
    'andersen_prob': 'dimensionless',
    'apaco': 'angstrom',
    'ch_sigma': 'eV',
    'cmbj': 'dimensionless',
    'cmbja': 'dimensionless',
    'cmbje': 'dimensionless',
    'encutgwsoft': 'eV',
    'scissor': 'eV',
    'dimer_dist': 'angstrom',
    'step_size': 'angstrom',
    'step_max': 'angstrom',
    'minrot': 'radian',
    'hills_h': 'eV',
    'hfscreenc': 'angstrom',
    'hfrcut': 'angstrom',
    'enini': 'eV',
    'enmax': 'eV',
    'epsilon': 'dimensionless',
    'scsrad': 'angstrom',
    'hitoler': 'dimensionless',
    'nupdown': 'dimensionless',
    'ediff': 'eV',
    'ediffg': lambda x: 'eV' if x > 0. else 'eV / angstrom',
    'symprec': 'angstrom',
    # integers
    'ialgo': 'dimensionless',
    'ibrion': 'dimensionless',
    'icharg': 'dimensionless',
    'idipol': 'dimensionless',
    'images': 'dimensionless',
    'iniwav': 'dimensionless',
    'isif': 'dimensionless',
    'ismear': 'dimensionless',
    'ispin': 'dimensionless',
    'istart': 'dimensionless',
    'isym': 'dimensionless',
    'iwavpr': 'dimensionless',
    'kpar': 'dimensionless',
    'ldauprint': 'dimensionless',
    'ldautype': 'dimensionless',
    'lmaxmix': 'dimensionless',
    'lorbit': 'dimensionless',
    'maxmix': 'dimensionless',
    'ngx': 'dimensionless',
    'ngxf': 'dimensionless',
    'ngy': 'dimensionless',
    'ngyf': 'dimensionless',
    'ngz': 'dimensionless',
    'ngzf': 'dimensionless',
    'nbands': 'dimensionless',
    'nblk': 'dimensionless',
    'nbmod': 'dimensionless',
    'nelm': 'dimensionless',
    'nelmdl': 'dimensionless',
    'nelmgw': 'dimensionless',
    'nelmin': 'dimensionless',
    'nfree': 'dimensionless',
    'nkred': 'dimensionless',
    'nkredx': 'dimensionless',
    'nkredy': 'dimensionless',
    'nkredz': 'dimensionless',
    'nomega': 'dimensionless',
    'nomegar': 'dimensionless',
    'npar': 'dimensionless',
    'nsim': 'dimensionless',
    'nsw': 'dimensionless',
    'nwrite': 'dimensionless',
    'vdwgr': 'dimensionless',
    'vdwrn': 'dimensionless',
    'voskown': 'dimensionless',
    'ichain': 'dimensionless',
    'iopt': 'dimensionless',
    'snl': 'dimensionless',
    'lbfgsmem': 'dimensionless',
    'fnmin': 'dimensionless',
    'icorelevel': 'dimensionless',
    'clnt': 'dimensionless',
    'cln': 'dimensionless',
    'cll': 'dimensionless',
    'ivdw': 'dimensionless',
    'nbandsgw': 'dimensionless',
    'nbandso': 'dimensionless',
    'nbandsv': 'dimensionless',
    'ncore': 'dimensionless',
    'mdalgo': 'dimensionless',
    'nedos': 'dimensionless',
    'turbo': 'dimensionless',
    'omegapar': 'dimensionless',
    'taupar': 'dimensionless',
    'ntaupar': 'dimensionless',
    'antires': 'dimensionless',
    'magatom': 'dimensionless',
    'jatom': 'dimensionless',
    'ichibare': 'dimensionless',
    'nbas': 'dimensionless',
    'rmds': 'dimensionless',
    'ilbfgsmem': 'dimensionless',
    'vcaimages': 'dimensionless',
    'ntemper': 'dimensionless',
    'ncshmem': 'dimensionless',
    'lmaxtau': 'dimensionless',
    'kinter': 'dimensionless',
    'ibse': 'dimensionless',
    'nbseeig': 'dimensionless',
    'naturalo': 'dimensionless',
    'nbandsexact': 'dimensionless',
    'nbandsgwlow': 'dimensionless',
    'nbandslf': 'dimensionless',
    'omegagrid': 'dimensionless',
    'telescope': 'dimensionless',
    'maxmem': 'dimensionless',
    'nelmhf': 'dimensionless',
    'dim': 'dimensionless',
    'nkredlf': 'dimensionless',
    'nkredlfx': 'dimensionless',
    'nkredlfy': 'dimensionless',
    'nkredlfz': 'dimensionless',
    'lmaxmp2': 'dimensionless',
    'switch': 'dimensionless',
    'findiff': 'dimensionless',
    'engine': 'dimensionless',
    'restartcg': 'dimensionless',
    'thermostat': 'dimensionless',
    'scaling': 'dimensionless',
    'shakemaxiter': 'dimensionless',
    'equi_regime': 'dimensionless',
    'hills_bin': 'dimensionless',
    'hills_maxstride': 'dimensionless',
    'dvvehistory': 'dimensionless',
    'ipead': 'dimensionless',
    'ngaus': 'dimensionless',
    'exxoep': 'dimensionless',
    'fourorbit': 'dimensionless',
    'model_gw': 'dimensionless',
    'hflmax': 'dimensionless',
    'lmaxfock': 'dimensionless',
    'lmaxfockae': 'dimensionless',
    'nmaxfockae': 'dimensionless',
    'nblock_fock': 'dimensionless',
    'idiot': 'dimensionless',
    'nrmm': 'dimensionless',
    'mremove': 'dimensionless',
    'inimix': 'dimensionless',
    'mixpre': 'dimensionless',
    'nelmall': 'dimensionless',
    'nblock': 'dimensionless',
    'kblock': 'dimensionless',
    'npaco': 'dimensionless',
    'lmaxpaw': 'dimensionless',
    'irestart': 'dimensionless',
    'nreboot': 'dimensionless',
    'nmin': 'dimensionless',
    'nlspline': 'dimensionless',
    'ispecial': 'dimensionless',
    'rcrep': 'dimensionless',
    'rcndl': 'dimensionless',
    'rcstrd': 'dimensionless',
    'vdw_idampf': 'dimensionless',
    'i_constrained_m': 'dimensionless',
    'igpar': 'dimensionless',
    'nppstr': 'dimensionless',
    'nbands_out': 'dimensionless',
    'kpts_out': 'dimensionless',
    'isp_out': 'dimensionless',
    'nomega_out': 'dimensionless',
    'maxiter_ft': 'dimensionless',
    'nmaxalt': 'dimensionless',
    'itmaxlsq': 'dimensionless',
    'ndatalsq': 'dimensionless',
    'ncore_in_image1': 'dimensionless',
    'kimages': 'dimensionless',
    'ncores_per_band': 'dimensionless',
    'maxlie': 'dimensionless',
    'ncrpalow': 'dimensionless',
    'ncrpahigh': 'dimensionless',
    'nwlow': 'dimensionless',
    'nwhigh': 'dimensionless',
    'nkopt': 'dimensionless',
    'nkoffopt': 'dimensionless',
    'nbvalopt': 'dimensionless',
    'nbconopt': 'dimensionless',
    'ch_nedos': 'dimensionless',
    'plevel': 'dimensionless',
    'qnl': 'dimensionless',
    'proutine': None,
    # strings
    'algo': None,
    'gga': None,
    'metagga': None,
    'prec': None,
    'system': None,
    'precfock': None,
    'radeq': None,
    'localized_basis': None,
    # booleans
    'addgrid': None,
    'kgamma': None,
    'laechg': None,
    'lasph': None,
    'lasync': None,
    'lcharg': None,
    'lcorr': None,
    'ldau': None,
    'ldiag': None,
    'ldipol': None,
    'lelf': None,
    'lepsilon': None,
    'lhfcalc': None,
    'loptics': None,
    'lpard': None,
    'lplane': None,
    'lscalapack': None,
    'lscalu': None,
    'lsepb': None,
    'lsepk': None,
    'lthomas': None,
    'luse_vdw': None,
    'lvhar': None,
    'lvtot': None,
    'lwave': None,
    'lclimb': None,
    'ltangentold': None,
    'ldneb': None,
    'lnebcell': None,
    'lglobal': None,
    'llineopt': None,
    'lbeefens': None,
    'lbeefbas': None,
    'lcalcpol': None,
    'lcalceps': None,
    'lvdw': None,
    'lvdw_ewald': None,
    'lspectral': None,
    'lrpa': None,
    'lwannier90': None,
    'lsorbit': None,
    'lsol': None,
    'lautoscale': None,
    'interactive': None,
    'lauger': None,
    'lauger_eeh': None,
    'lauger_ehh': None,
    'lauger_collect': None,
    'lauger_dhdk': None,
    'lauger_jit': None,
    'orbitalmag': None,
    'lchimag': None,
    'lwrtcur': None,
    'lnmr_sym_red': None,
    'lzora': None,
    'lbone': None,
    'lmagbloch': None,
    'lgauge': None,
    'lbfconst': None,
    'nucind': None,
    'lnicsall': None,
    'llraug': None,
    'lbbm': None,
    'lnoncollinear': None,
    'bfgsdfp': None,
    'linemin': None,
    'ldneborg': None,
    'dseed': None,
    'linteract': None,
    'lmpmd': None,
    'ltwodim': None,
    'fmagflag': None,
    'ltemper': None,
    'qmflag': None,
    'lmixtau': None,
    'ljdftx': None,
    'lrhob': None,
    'lrhoion': None,
    'lnabla': None,
    'linterfast': None,
    'lvel': None,
    'lrpaforce': None,
    'lhartree': None,
    'ladder': None,
    'lfxc': None,
    'lrsrpa': None,
    'lsingles': None,
    'lfermigw': None,
    'ltcte': None,
    'ltete': None,
    'ltriplet': None,
    'lfxceps': None,
    'lfxheg': None,
    'l2order': None,
    'lmp2lt': None,
    'lgwlf': None,
    'lusew': None,
    'selfenergy': None,
    'oddonlygw': None,
    'evenonlygw': None,
    'lspectralgw': None,
    'ch_lspec': None,
    'fletcher_reeves': None,
    'lidm_selective': None,
    'lblueout': None,
    'hills_variable_w': None,
    'dvvminus': None,
    'lpead': None,
    'skip_edotp': None,
    'skip_scf': None,
    'lchgfit': None,
    'lgausrc': None,
    'lstockholder': None,
    'lsymgrad': None,
    'lhfone': None,
    'lrscor': None,
    'lrhfcalc': None,
    'lmodelhf': None,
    'shiftred': None,
    'hfkident': None,
    'oddonly': None,
    'evenonly': None,
    'lfockaedft': None,
    'lsubrot': None,
    'mixfirst': None,
    'lvcader': None,
    'lcompat': None,
    'lmusic': None,
    'ldownsample': None,
    'lscaaware': None,
    'lorbitalreal': None,
    'lmetagga': None,
    'lspiral': None,
    'lzeroz': None,
    'lmono': None,
    'lrelcore': None,
    'lmimicfc': None,
    'lmatchrw': None,
    'ladaptelin': None,
    'lonlysemicore': None,
    'gga_compat': None,
    'lrelvol': None,
    'lj_only': None,
    'lvdwscs': None,
    'lcfdm': None,
    'lvdw_sametype': None,
    'lrescaler0': None,
    'lscsgrad': None,
    'lvdwexpansion': None,
    'lvdw_relvolone': None,
    'lberry': None,
    'lpade_fit': None,
    'lkproj': None,
    'l_wr_moments': None,
    'l_wr_density': None,
    'lkotani': None,
    'ldyson': None,
    'laddherm': None,
    'lcrpaplot': None,
    'lplotdis': None,
    'ldisentangle': None,
    'lweighted': None,
    'luseorth_lcaos': None,
    'lfrpa': None,
    'lregularize': None,
    'ldrude': None,
    'ldmatrix': None,
    'lefg': None,
    'lhyperfine': None,
    'lwannier': None,
    'localize': None,
    'lintpol_wpot': None,
    'lintpol_orb': None,
    'lintpol_kpath': None,
    'lintpol_kpath_orb': None,
    'lread_eigenvalues': None,
    'lintpol_velocity': None,
    'lintpol_conductivity': None,
    'lwannierinterpol': None,
    'wanproj': None,
    'lorbmom': None,
    'lwannier90_run': None,
    'lwrite_wanproj': None,
    'lwrite_unk': None,
    'lwrite_mmn_amn': None,
    'lread_amn': None,
    'lrhfatm': None,
    'lvpot': None,
    'lwpot': None,
    'lwswq': None,
    'pflat': None,
    'qifcg': None,
    'qdo_ins': None,
    'qdo_pre': None,
    'lnbo': None,
}

array_pars = {}
array_pars['vasp'] = {
    # integers
    'iband': 'dimensionless',
    'kpuse': 'dimensionless',
    'ldaul': 'dimensionless',
    'random_seed': 'dimensionless',
    'auger_bmin_eeh': 'dimensionless',
    'auger_bmax_eeh': 'dimensionless',
    'auger_bmin_ehh': 'dimensionless',
    'auger_bmax_ehh': 'dimensionless',
    'balist': 'dimensionless',
    'kpoint_bse': 'dimensionless',
    'nsubsys': 'dimensionless',
    'vdw_refstate': 'dimensionless',
    'vdw_mbd_size': 'dimensionless',
    'nbands_index': 'dimensionless',
    'kpts_index': 'dimensionless',
    'isp_index': 'dimensionless',
    'nomega_index': 'dimensionless',
    'ntarget_states': 'dimensionless',
    'wanproj_i': 'dimensionless',
    'wanproj_l': 'dimensionless',
    # floats
    'dipol': 'dimensionless',
    'eint': 'eV',
    'ferwe': 'dimensionless',
    'ferdo': 'dimensionless',
    'magmom': 'dimensionless',
    'ropt': lambda x: 'dimensionless' if numpy.linalg.norm(x) >= 0.1 else 'eV',
    'rwigs': 'angstrom',
    'ldauu': 'eV',
    'ldauj': 'eV',
    'vdw_c6': 'J / mol * nm**6',
    'vdw_c6au': 'hartree * bohr**6',
    'vdw_r0': 'angstrom',
    'vdw_r0au': 'bohr',
    'vdw_alpha': 'bohr**3',
    'langevin_gamma': '1 / ps',
    'psubsys': 'dimensionless',
    'tsubsys': 'kelvin',
    # 'spring_k',  # units depend on the coordinate units
    # 'spring_r0',  # units depend on the coordinate units
    # 'spring_v0',  # units depend on the coordinate units
    'efield_pead': 'eV / angstrom',
    'saxis': lambda x: None if all(isinstance(e, str) for e in x) else 'dimensionless',
    'vca': 'dimensionless',
    'qspiral': 'dimensionless',
    'quad_efg': 'millibarn',
    'ngyromag': 'dimensionless',
    'smearings': 'dimensionless',
    # booleans
    'lattice_constraints': None,
    'lrctype': None,
    'lvdw_onecell': None,
}

# turbomole calculator parameters

scalar_pars['turbomole'] = {
    'restart': None,
    'define_str': None,
    'control_input': None,
    'control_kdg': None,
    'reset_tolerance': 'angstrom',
    'automatic orbital shift': 'eV',
    'basis set definition': None,
    'basis set name': None,
    'closed-shell orbital shift': 'eV',
    'damping adjustment step': 'dimensionless',
    'default eht atomic orbitals': None,
    'density convergence': 'dimensionless',
    'density functional': None,
    'energy convergence': 'eV',
    'esp fit': None,
    'fermi annealing factor': 'dimensionless',
    'fermi final temperature': 'kelvin',
    'fermi homo-lumo gap criterion': 'eV',
    'fermi initial temperature': 'kelvin',
    'fermi stopping criterion': 'eV',
    'force convergence': 'eV/angstrom',
    'geometry optimization iterations': 'dimensionless',
    'grid size': None,
    'ground state': None,
    'initial damping': 'dimensionless',
    'initial guess': None,
    'minimal damping': 'dimensionless',
    'multiplicity': 'dimensionless',
    'non-automatic orbital shift': None,
    'numerical hessian': None,
    'point group': None,
    'ri memory': 'megabyte',
    'rohf': None,
    'scf energy convergence': 'eV',
    'scf iterations': 'dimensionless',
    'task': None,
    'title': None,
    'total charge': 'dimensionless',
    'transition vector': 'dimensionless',
    'uhf': None,
    'use basis set library': None,
    'use dft': None,
    'use fermi smearing': None,
    'use redundant internals': None,
    'use resolution of identity': None,
}

array_pars['turbomole'] = {
    'basis set definition': None
}

calc_pars = {}
calc_pars['vasp'] = {**scalar_pars['vasp'], **array_pars['vasp']}
calc_pars['turbomole'] = {**scalar_pars['turbomole'], **array_pars['turbomole']}

# name 'lj' as accepted by get_calculator_class()
calc_pars['lj'] = {
    'sigma': 'angstrom',
    'epsilon': 'eV',
    'rc': 'angstrom',
    'ro': 'angstrom',
    'smooth': None,
}

# name 'lennardjones' as returned by lj.LennardJones().name
calc_pars['lennardjones'] = calc_pars['lj']

calc_pars['emt'] = {
    'restart': None,
    'asap_cutoff': None,
}

calc_pars['free_electrons'] = {
    'restart': None,
    'kpts': lambda x: 'dimensionless' if isinstance(x, numpy.ndarray) else None,
    'path': None,  # only as key in kpts
    'npoints': 'dimensionless',  # only as key in kpts
    'nvalence': 'dimensionless',
    'nbands': 'dimensionless',
    'gridsize': 'dimensionless',
}
