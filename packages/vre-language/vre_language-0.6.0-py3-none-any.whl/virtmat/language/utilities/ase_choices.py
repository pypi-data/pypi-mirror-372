"""string and integer calculator parameters with finite number of valid choices"""

calc_pars = {}
calc_pars['vasp'] = {
    # integers
    'ialgo': [-1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 28, 38, 44, 45, 46, 47,
              48, 53, 54, 55, 56, 57, 58],
    'ibrion': [-1, 0, 1, 2, 3, 5, 6, 7, 8, 11, 12, 40, 44],
    'icharg': [0, 1, 2, 4, 5],
    'idipol': [1, 2, 3, 4],
    # 'images': numbers.Integral,
    'iniwav': [0, 1],
    'isif': [0, 1, 2, 3, 4, 5, 6, 7, 8],
    # 'ismear': -15, -14, -5, -4, -3, -2, -1, 0, [integer]>0,
    'ispin': [1, 2],
    'istart': [0, 1, 2, 3],
    'isym': [-1, 0, 1, 2, 3],
    'iwavpr': [0, 1, 2, 3, 10, 11, 12, 13],
    # 'kpar': numbers.Integral,
    'ldauprint': [0, 1],
    'ldautype': [1, 2, 3, 4],
    # 'lmaxmix': numbers.Integral,
    'lorbit': [0, 1, 2, 5, 10, 11, 12],
    # 'maxmix': numbers.Integral,
    # 'ngx': numbers.Integral,
    # 'ngxf': numbers.Integral,
    # 'ngy': numbers.Integral,
    # 'ngyf': numbers.Integral,
    # 'ngz': numbers.Integral,
    # 'ngzf': numbers.Integral,
    # 'nbands': numbers.Integral,
    # 'nblk': numbers.Integral,
    # 'nbmod': -3, -2, -1, 0, [positive integer],
    # 'nelm': numbers.Integral,
    # 'nelmdl': numbers.Integral,
    # 'nelmgw': numbers.Integral,
    # 'nelmin': numbers.Integral,
    # 'nfree': numbers.Integral,
    # 'nkred': numbers.Integral,
    # 'nkredx': numbers.Integral,
    # 'nkredy': numbers.Integral,
    # 'nkredz': numbers.Integral,
    # 'nomega': numbers.Integral,
    # 'nomegar': numbers.Integral,
    # 'npar': numbers.Integral,
    # 'nsim': numbers.Integral,
    # 'nsw': numbers.Integral,
    'nwrite': [0, 1, 2, 3, 4],
    # 'vdwgr': numbers.Integral,
    # 'vdwrn': numbers.Integral,
    'voskown': [0, 1],
    # 'ichain': numbers.Integral,
    # 'iopt': numbers.Integral,
    # 'snl': numbers.Integral,
    # 'lbfgsmem': numbers.Integral,
    # 'fnmin': numbers.Integral,
    'icorelevel': [0, 1, 2],
    # 'clnt': numbers.Integral,
    # 'cln': numbers.Integral,
    # 'cll': numbers.Integral,
    'ivdw': [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 20, 21, 202, 263],
    # 'nbandsgw': numbers.Integral,
    # 'nbandso': numbers.Integral,
    # 'nbandsv': numbers.Integral,
    # 'ncore': numbers.Integral,
    'mdalgo': [0, 1, 2, 3, 4, 5, 11, 21, 13],
    # 'nedos': numbers.Integral,
    # 'turbo': numbers.Integral,
    # 'omegapar': numbers.Integral,
    # 'taupar': numbers.Integral,
    # 'ntaupar': numbers.Integral,
    'antires': [0, 1, 2],
    # 'magatom': numbers.Integral,
    # 'jatom': numbers.Integral,
    'ichibare': [1, 2, 3],
    # 'nbas': numbers.Integral,
    # 'rmds': numbers.Integral,
    # 'ilbfgsmem': numbers.Integral,
    # 'vcaimages': numbers.Integral,
    # 'ntemper': numbers.Integral,
    # 'ncshmem': numbers.Integral,
    # 'lmaxtau': numbers.Integral,
    # 'kinter': numbers.Integral,
    'ibse': [0, 1, 2, 3],
    # 'nbseeig': numbers.Integral,
    # 'naturalo': numbers.Integral,
    # 'nbandsexact': numbers.Integral,
    # 'nbandsgwlow': numbers.Integral,
    # 'nbandslf': numbers.Integral,
    # 'omegagrid': numbers.Integral,
    # 'telescope': numbers.Integral,
    # 'maxmem': numbers.Integral,
    # 'nelmhf': numbers.Integral,
    # 'dim': numbers.Integral,
    # 'nkredlf': numbers.Integral,
    # 'nkredlfx': numbers.Integral,
    # 'nkredlfy': numbers.Integral,
    # 'nkredlfz': numbers.Integral,
    # 'lmaxmp2': numbers.Integral,
    # 'switch': numbers.Integral,
    # 'findiff': numbers.Integral,
    # 'engine': numbers.Integral,
    # 'restartcg': numbers.Integral,
    # 'thermostat': numbers.Integral,
    # 'scaling': numbers.Integral,
    # 'shakemaxiter': numbers.Integral,
    # 'equi_regime': numbers.Integral,
    # 'hills_bin': numbers.Integral,
    # 'hills_maxstride': numbers.Integral,
    # 'dvvehistory': numbers.Integral,
    'ipead': [1, 2, 3, 4],
    # 'ngaus': numbers.Integral,
    # 'exxoep': numbers.Integral,
    # 'fourorbit': numbers.Integral,
    # 'model_gw': numbers.Integral,
    # 'hflmax': numbers.Integral,
    # 'lmaxfock': numbers.Integral,
    # 'lmaxfockae': numbers.Integral,
    'nmaxfockae': [1, 2],
    # 'nblock_fock': numbers.Integral,
    # 'idiot': numbers.Integral,
    # 'nrmm': numbers.Integral,
    # 'mremove': numbers.Integral,
    'inimix': [0, 1, 2],
    'mixpre': [0, 1, 2, 3],
    # 'nelmall': numbers.Integral,
    # 'nblock': numbers.Integral,
    # 'kblock': numbers.Integral,
    # 'npaco': numbers.Integral,
    # 'lmaxpaw': numbers.Integral,
    # 'irestart': numbers.Integral,
    # 'nreboot': numbers.Integral,
    # 'nmin': numbers.Integral,
    # 'nlspline': numbers.Integral,
    # 'ispecial': numbers.Integral,
    # 'rcrep': numbers.Integral,
    # 'rcndl': numbers.Integral,
    # 'rcstrd': numbers.Integral,
    # 'vdw_idampf': numbers.Integral,
    'i_constrained_m': [1, 2, 4],
    'igpar': [1, 2, 3],
    # 'nppstr': numbers.Integral,
    # 'nbands_out': numbers.Integral,
    # 'kpts_out': numbers.Integral,
    # 'isp_out': numbers.Integral,
    # 'nomega_out': numbers.Integral,
    # 'maxiter_ft': numbers.Integral,
    # 'nmaxalt': numbers.Integral,
    # 'itmaxlsq': numbers.Integral,
    # 'ndatalsq': numbers.Integral,
    # 'ncore_in_image1': numbers.Integral,
    # 'kimages': numbers.Integral,
    # 'ncores_per_band': numbers.Integral,
    # 'maxlie': numbers.Integral,
    # 'ncrpalow': numbers.Integral,
    # 'ncrpahigh': numbers.Integral,
    # 'nwlow': numbers.Integral,
    # 'nwhigh': numbers.Integral,
    # 'nkopt': numbers.Integral,
    # 'nkoffopt': numbers.Integral,
    # 'nbvalopt': numbers.Integral,
    # 'nbconopt': numbers.Integral,
    # 'ch_nedos': numbers.Integral,
    # 'plevel': numbers.Integral,
    # 'qnl': numbers.Integral,
    # 'proutine': numbers.Integral,
    # strings
    'algo': ['Normal', 'VeryFast', 'Fast', 'Conjugate', 'All', 'Damped', 'Subrot',
             'Eigenval', 'Exact', 'None', 'Nothing', 'CHI', 'G0W0', 'GW0', 'GW',
             'scGW0', 'scGW', 'G0W0R', 'GW0R', 'GWR', 'scGW0R', 'scGWR', 'ACFDT',
             'RPA', 'ACFDTR', 'RPAR', 'BSE', 'TDHF'],
    'gga': ['LIBXC', 'LI', 'CA', 'PZ', 'PW92', 'SL', 'CA_C', 'PZ_C', 'PW92_C',
            'VW', 'HL', 'WI', 'PE', 'PBE_X', 'PBE_C', 'RE', 'RP', 'PS', 'AM',
            '91', 'B3', 'B5', 'OR', 'BO', 'MK', 'ML', 'CX', 'BF'],
    'metagga': ['LIBXC', 'TPSS', 'TPSS_X', 'TPSS_C', 'RTPSS', 'RTPSS_X', 'RTPSS_C',
                'M06L', 'M06L_X', 'M06L_C', 'MS0', 'MS0_X', 'MS0_C', 'MS1', 'MS1_X',
                'MS1_C', 'MS2', 'MS2_X', 'MS2_C', 'SCAN', 'SCAN_X', 'SCAN_C',
                'RSCAN', 'RSCAN_X', 'RSCAN_C', 'R2SCAN', 'R2SCAN_X', 'R2SCAN_C',
                'SREGTM1', 'SREGTM2', 'SREGTM3', 'TASK_X', 'LAK', 'LAK_X', 'LAK_C',
                'MSPBEL', 'MSRPBEL', 'MSB86BL', 'RMSPBEL', 'RMSRPBEL', 'RMSB86BL',
                'SCANL', 'RSCANL', 'R2SCANL', 'OFR2', 'SREGTM2L', 'MBJ', 'LMBJ'],
    'prec': ['Normal', 'Single', 'SingleN', 'Accurate', 'Low', 'Medium', 'High'],
    # 'system': str,
    'precfock': ['Normal', 'Accurate', 'Fast', 'Medium', 'Single', 'Low'],
    # 'radeq': str,
    # 'localized_basis': str,
}
calc_pars['turbomole'] = {}
calc_pars['lj'] = {}
calc_pars['lennardjones'] = {}
calc_pars['emt'] = {}
calc_pars['free_electrons'] = {}
