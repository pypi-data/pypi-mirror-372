# Generated by fragment (with the help of ariadne-codegen)
# Source: queries/

from typing import Literal, Union

from pydantic import Field

from .base_model import BaseModel


class DeleteSchema(BaseModel):
    delete_schema: Union[
        "DeleteSchemaDeleteSchemaBadRequestError",
        "DeleteSchemaDeleteSchemaDeleteSchemaResult",
        "DeleteSchemaDeleteSchemaInternalError",
    ] = Field(alias="deleteSchema", discriminator="typename__")


class DeleteSchemaDeleteSchemaBadRequestError(BaseModel):
    typename__: Literal["BadRequestError"] = Field(alias="__typename")
    code: str
    message: str
    retryable: bool


class DeleteSchemaDeleteSchemaDeleteSchemaResult(BaseModel):
    typename__: Literal["DeleteSchemaResult"] = Field(alias="__typename")
    success: bool


class DeleteSchemaDeleteSchemaInternalError(BaseModel):
    typename__: Literal["InternalError"] = Field(alias="__typename")
    code: str
    message: str
    retryable: bool


DeleteSchema.model_rebuild()
