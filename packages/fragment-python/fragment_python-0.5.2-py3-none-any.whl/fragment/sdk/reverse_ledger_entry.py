# Generated by fragment (with the help of ariadne-codegen)
# Source: queries/

from typing import Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel


class ReverseLedgerEntry(BaseModel):
    reverse_ledger_entry: Union[
        "ReverseLedgerEntryReverseLedgerEntryBadRequestError",
        "ReverseLedgerEntryReverseLedgerEntryInternalError",
        "ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResult",
    ] = Field(alias="reverseLedgerEntry", discriminator="typename__")


class ReverseLedgerEntryReverseLedgerEntryBadRequestError(BaseModel):
    typename__: Literal["BadRequestError"] = Field(alias="__typename")
    code: str
    message: str
    retryable: bool


class ReverseLedgerEntryReverseLedgerEntryInternalError(BaseModel):
    typename__: Literal["InternalError"] = Field(alias="__typename")
    code: str
    message: str
    retryable: bool


class ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResult(BaseModel):
    typename__: Literal["ReverseLedgerEntryResult"] = Field(alias="__typename")
    reversing_ledger_entry: (
        "ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversingLedgerEntry"
    ) = Field(alias="reversingLedgerEntry")
    reversed_ledger_entry: (
        "ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversedLedgerEntry"
    ) = Field(alias="reversedLedgerEntry")
    is_ik_replay: bool = Field(alias="isIkReplay")


class ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversingLedgerEntry(
    BaseModel
):
    ik: str
    id: str
    created: Any
    posted: Any
    type: Optional[Any]
    description: Optional[str]
    hidden: bool
    lines: "ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversingLedgerEntryLines"


class ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversingLedgerEntryLines(
    BaseModel
):
    nodes: List[
        "ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversingLedgerEntryLinesNodes"
    ]


class ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversingLedgerEntryLinesNodes(
    BaseModel
):
    id: str
    amount: Any
    account: "ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversingLedgerEntryLinesNodesAccount"


class ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversingLedgerEntryLinesNodesAccount(
    BaseModel
):
    path: str


class ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversedLedgerEntry(
    BaseModel
):
    ik: str
    id: str
    created: Any
    posted: Any
    type: Optional[Any]
    description: Optional[str]
    hidden: bool
    lines: "ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversedLedgerEntryLines"


class ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversedLedgerEntryLines(
    BaseModel
):
    nodes: List[
        "ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversedLedgerEntryLinesNodes"
    ]


class ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversedLedgerEntryLinesNodes(
    BaseModel
):
    id: str
    amount: Any
    account: "ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversedLedgerEntryLinesNodesAccount"


class ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversedLedgerEntryLinesNodesAccount(
    BaseModel
):
    path: str


ReverseLedgerEntry.model_rebuild()
ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResult.model_rebuild()
ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversingLedgerEntry.model_rebuild()
ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversingLedgerEntryLines.model_rebuild()
ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversingLedgerEntryLinesNodes.model_rebuild()
ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversedLedgerEntry.model_rebuild()
ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversedLedgerEntryLines.model_rebuild()
ReverseLedgerEntryReverseLedgerEntryReverseLedgerEntryResultReversedLedgerEntryLinesNodes.model_rebuild()
