# Generated by fragment (with the help of ariadne-codegen)
# Source: queries/

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetLedgerAccountLines(BaseModel):
    ledger_account: Optional["GetLedgerAccountLinesLedgerAccount"] = Field(
        alias="ledgerAccount"
    )


class GetLedgerAccountLinesLedgerAccount(BaseModel):
    id: str
    path: str
    lines: "GetLedgerAccountLinesLedgerAccountLines"


class GetLedgerAccountLinesLedgerAccountLines(BaseModel):
    nodes: List["GetLedgerAccountLinesLedgerAccountLinesNodes"]
    page_info: "GetLedgerAccountLinesLedgerAccountLinesPageInfo" = Field(
        alias="pageInfo"
    )


class GetLedgerAccountLinesLedgerAccountLinesNodes(BaseModel):
    id: str
    posted: Optional[Any]
    created: Optional[Any]
    amount: Any
    description: Optional[str]


class GetLedgerAccountLinesLedgerAccountLinesPageInfo(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    end_cursor: Optional[str] = Field(alias="endCursor")
    has_previous_page: bool = Field(alias="hasPreviousPage")
    start_cursor: Optional[str] = Field(alias="startCursor")


GetLedgerAccountLines.model_rebuild()
GetLedgerAccountLinesLedgerAccount.model_rebuild()
GetLedgerAccountLinesLedgerAccountLines.model_rebuild()
