# Generated by fragment (with the help of ariadne-codegen)
# Source: schema.graphql

from enum import Enum


class BalanceUpdateConsistencyMode(str, Enum):
    eventual = "eventual"
    strong = "strong"


class CurrencyCode(str, Enum):
    AAVE = "AAVE"
    ADA = "ADA"
    AED = "AED"
    AFN = "AFN"
    ALL = "ALL"
    AMD = "AMD"
    ANG = "ANG"
    AOA = "AOA"
    ARS = "ARS"
    AUD = "AUD"
    AWG = "AWG"
    AZN = "AZN"
    BAM = "BAM"
    BBD = "BBD"
    BCH = "BCH"
    BDT = "BDT"
    BGN = "BGN"
    BHD = "BHD"
    BIF = "BIF"
    BMD = "BMD"
    BND = "BND"
    BOB = "BOB"
    BRL = "BRL"
    BSD = "BSD"
    BTC = "BTC"
    BTN = "BTN"
    BWP = "BWP"
    BYR = "BYR"
    BZD = "BZD"
    CAD = "CAD"
    CDF = "CDF"
    CHF = "CHF"
    CLP = "CLP"
    CNY = "CNY"
    COP = "COP"
    CRC = "CRC"
    CUC = "CUC"
    CUP = "CUP"
    CUSTOM = "CUSTOM"
    CVE = "CVE"
    CZK = "CZK"
    DAI = "DAI"
    DJF = "DJF"
    DKK = "DKK"
    DOP = "DOP"
    DZD = "DZD"
    EGP = "EGP"
    ERN = "ERN"
    ETB = "ETB"
    ETH = "ETH"
    EUR = "EUR"
    FJD = "FJD"
    FKP = "FKP"
    GBP = "GBP"
    GEL = "GEL"
    GGP = "GGP"
    GHS = "GHS"
    GIP = "GIP"
    GMD = "GMD"
    GNF = "GNF"
    GTQ = "GTQ"
    GYD = "GYD"
    HKD = "HKD"
    HNL = "HNL"
    HRK = "HRK"
    HTG = "HTG"
    HUF = "HUF"
    IDR = "IDR"
    ILS = "ILS"
    IMP = "IMP"
    INR = "INR"
    IQD = "IQD"
    IRR = "IRR"
    ISK = "ISK"
    JMD = "JMD"
    JOD = "JOD"
    JPY = "JPY"
    KES = "KES"
    KGS = "KGS"
    KHR = "KHR"
    KMF = "KMF"
    KPW = "KPW"
    KRW = "KRW"
    KWD = "KWD"
    KYD = "KYD"
    KZT = "KZT"
    LAK = "LAK"
    LBP = "LBP"
    LINK = "LINK"
    LKR = "LKR"
    LOGICAL = "LOGICAL"
    LRD = "LRD"
    LSL = "LSL"
    LTC = "LTC"
    LYD = "LYD"
    MAD = "MAD"
    MATIC = "MATIC"
    MDL = "MDL"
    MGA = "MGA"
    MKD = "MKD"
    MMK = "MMK"
    MNT = "MNT"
    MOP = "MOP"
    MUR = "MUR"
    MVR = "MVR"
    MWK = "MWK"
    MXN = "MXN"
    MYR = "MYR"
    MZN = "MZN"
    NAD = "NAD"
    NGN = "NGN"
    NIO = "NIO"
    NOK = "NOK"
    NPR = "NPR"
    NZD = "NZD"
    OMR = "OMR"
    PAB = "PAB"
    PEN = "PEN"
    PGK = "PGK"
    PHP = "PHP"
    PKR = "PKR"
    PLN = "PLN"
    PTS = "PTS"
    PYG = "PYG"
    QAR = "QAR"
    RON = "RON"
    RSD = "RSD"
    RUB = "RUB"
    RWF = "RWF"
    SAR = "SAR"
    SBD = "SBD"
    SCR = "SCR"
    SDG = "SDG"
    SEK = "SEK"
    SGD = "SGD"
    SHP = "SHP"
    SLL = "SLL"
    SOL = "SOL"
    SOS = "SOS"
    SPL = "SPL"
    SRD = "SRD"
    STN = "STN"
    SVC = "SVC"
    SYP = "SYP"
    SZL = "SZL"
    THB = "THB"
    TJS = "TJS"
    TMT = "TMT"
    TND = "TND"
    TOP = "TOP"
    TRY = "TRY"
    TTD = "TTD"
    TVD = "TVD"
    TWD = "TWD"
    TZS = "TZS"
    UAH = "UAH"
    UGX = "UGX"
    UNI = "UNI"
    USD = "USD"
    USDC = "USDC"
    USDT = "USDT"
    UYU = "UYU"
    UZS = "UZS"
    VEF = "VEF"
    VND = "VND"
    VUV = "VUV"
    WST = "WST"
    XAF = "XAF"
    XCD = "XCD"
    XLM = "XLM"
    XOF = "XOF"
    XPF = "XPF"
    YER = "YER"
    ZAR = "ZAR"
    ZMW = "ZMW"


class CurrencyMode(str, Enum):
    multi = "multi"
    single = "single"


class ExternalTransferType(str, Enum):
    ach = "ach"
    card = "card"
    check = "check"
    internal = "internal"
    wire = "wire"


class ExternalTxSource(str, Enum):
    increase = "increase"


class Granularity(str, Enum):
    daily = "daily"
    hourly = "hourly"
    monthly = "monthly"


class IncreaseEnv(str, Enum):
    production = "production"
    sandbox = "sandbox"


class LedgerAccountTypes(str, Enum):
    asset = "asset"
    expense = "expense"
    income = "income"
    liability = "liability"


class LedgerDataMigrationStatus(str, Enum):
    active = "active"
    inactive = "inactive"


class LedgerLinesConsistencyMode(str, Enum):
    eventual = "eventual"
    strong = "strong"


class LedgerMigrationStatus(str, Enum):
    completed = "completed"
    failed = "failed"
    queued = "queued"
    skipped = "skipped"
    started = "started"


class LedgerTypes(str, Enum):
    double = "double"


class LinkType(str, Enum):
    CustomLink = "CustomLink"
    IncreaseLink = "IncreaseLink"
    StripeLink = "StripeLink"
    UnitLink = "UnitLink"


class ReadBalanceConsistencyMode(str, Enum):
    eventual = "eventual"
    strong = "strong"
    use_account = "use_account"


class SceneEventType(str, Enum):
    entry = "entry"


class SchemaConsistencyMode(str, Enum):
    eventual = "eventual"
    strong = "strong"


class SchemaLedgerAccountStatus(str, Enum):
    active = "active"
    archived = "archived"
    disabled = "disabled"


class SchemaLedgerEntryStatus(str, Enum):
    active = "active"
    archived = "archived"
    disabled = "disabled"


class StripeEnv(str, Enum):
    livemode = "livemode"
    testmode = "testmode"


class TxType(str, Enum):
    credit = "credit"
    debit = "debit"


class UnitEnv(str, Enum):
    production = "production"
    sandbox = "sandbox"
