# Generated by fragment (with the help of ariadne-codegen)
# Source: queries/

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import LedgerAccountTypes


class ListLedgerAccounts(BaseModel):
    ledger: Optional["ListLedgerAccountsLedger"]


class ListLedgerAccountsLedger(BaseModel):
    id: str
    ik: Any
    name: str
    created: Any
    ledger_accounts: "ListLedgerAccountsLedgerLedgerAccounts" = Field(
        alias="ledgerAccounts"
    )


class ListLedgerAccountsLedgerLedgerAccounts(BaseModel):
    nodes: List["ListLedgerAccountsLedgerLedgerAccountsNodes"]
    page_info: "ListLedgerAccountsLedgerLedgerAccountsPageInfo" = Field(
        alias="pageInfo"
    )


class ListLedgerAccountsLedgerLedgerAccountsNodes(BaseModel):
    id: str
    path: str
    name: Optional[str]
    type: LedgerAccountTypes
    created: Any


class ListLedgerAccountsLedgerLedgerAccountsPageInfo(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    end_cursor: Optional[str] = Field(alias="endCursor")
    has_previous_page: bool = Field(alias="hasPreviousPage")
    start_cursor: Optional[str] = Field(alias="startCursor")


ListLedgerAccounts.model_rebuild()
ListLedgerAccountsLedger.model_rebuild()
ListLedgerAccountsLedgerLedgerAccounts.model_rebuild()
