# Generated by fragment (with the help of ariadne-codegen)
# Source: queries/

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import CurrencyCode


class ListLedgerEntryGroupBalances(BaseModel):
    ledger_entry_group: Optional["ListLedgerEntryGroupBalancesLedgerEntryGroup"] = (
        Field(alias="ledgerEntryGroup")
    )


class ListLedgerEntryGroupBalancesLedgerEntryGroup(BaseModel):
    key: Any
    value: Any
    created: Optional[Any]
    balances: "ListLedgerEntryGroupBalancesLedgerEntryGroupBalances"


class ListLedgerEntryGroupBalancesLedgerEntryGroupBalances(BaseModel):
    nodes: List["ListLedgerEntryGroupBalancesLedgerEntryGroupBalancesNodes"]
    page_info: "ListLedgerEntryGroupBalancesLedgerEntryGroupBalancesPageInfo" = Field(
        alias="pageInfo"
    )


class ListLedgerEntryGroupBalancesLedgerEntryGroupBalancesNodes(BaseModel):
    account: "ListLedgerEntryGroupBalancesLedgerEntryGroupBalancesNodesAccount"
    currency: "ListLedgerEntryGroupBalancesLedgerEntryGroupBalancesNodesCurrency"
    own_balance: Any = Field(alias="ownBalance")


class ListLedgerEntryGroupBalancesLedgerEntryGroupBalancesNodesAccount(BaseModel):
    path: str


class ListLedgerEntryGroupBalancesLedgerEntryGroupBalancesNodesCurrency(BaseModel):
    code: CurrencyCode
    custom_currency_id: Optional[Any] = Field(alias="customCurrencyId")


class ListLedgerEntryGroupBalancesLedgerEntryGroupBalancesPageInfo(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    end_cursor: Optional[str] = Field(alias="endCursor")
    has_previous_page: bool = Field(alias="hasPreviousPage")
    start_cursor: Optional[str] = Field(alias="startCursor")


ListLedgerEntryGroupBalances.model_rebuild()
ListLedgerEntryGroupBalancesLedgerEntryGroup.model_rebuild()
ListLedgerEntryGroupBalancesLedgerEntryGroupBalances.model_rebuild()
ListLedgerEntryGroupBalancesLedgerEntryGroupBalancesNodes.model_rebuild()
