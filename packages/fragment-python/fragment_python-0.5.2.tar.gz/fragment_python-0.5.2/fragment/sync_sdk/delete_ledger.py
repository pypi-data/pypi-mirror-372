# Generated by fragment (with the help of ariadne-codegen)
# Source: queries/

from typing import Literal, Union

from pydantic import Field

from .base_model import BaseModel


class DeleteLedger(BaseModel):
    delete_ledger: Union[
        "DeleteLedgerDeleteLedgerBadRequestError",
        "DeleteLedgerDeleteLedgerDeleteLedgerResult",
        "DeleteLedgerDeleteLedgerInternalError",
    ] = Field(alias="deleteLedger", discriminator="typename__")


class DeleteLedgerDeleteLedgerBadRequestError(BaseModel):
    typename__: Literal["BadRequestError"] = Field(alias="__typename")
    code: str
    message: str
    retryable: bool


class DeleteLedgerDeleteLedgerDeleteLedgerResult(BaseModel):
    typename__: Literal["DeleteLedgerResult"] = Field(alias="__typename")
    success: bool


class DeleteLedgerDeleteLedgerInternalError(BaseModel):
    typename__: Literal["InternalError"] = Field(alias="__typename")
    code: str
    message: str
    retryable: bool


DeleteLedger.model_rebuild()
