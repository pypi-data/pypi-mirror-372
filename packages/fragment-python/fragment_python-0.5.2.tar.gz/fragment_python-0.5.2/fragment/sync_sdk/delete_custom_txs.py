# Generated by fragment (with the help of ariadne-codegen)
# Source: queries/

from typing import Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel


class DeleteCustomTxs(BaseModel):
    delete_custom_txs: Union[
        "DeleteCustomTxsDeleteCustomTxsBadRequestError",
        "DeleteCustomTxsDeleteCustomTxsDeleteCustomTxsResult",
        "DeleteCustomTxsDeleteCustomTxsInternalError",
    ] = Field(alias="deleteCustomTxs", discriminator="typename__")


class DeleteCustomTxsDeleteCustomTxsBadRequestError(BaseModel):
    typename__: Literal["BadRequestError"] = Field(alias="__typename")
    code: str
    message: str
    retryable: bool


class DeleteCustomTxsDeleteCustomTxsDeleteCustomTxsResult(BaseModel):
    typename__: Literal["DeleteCustomTxsResult"] = Field(alias="__typename")
    txs: List["DeleteCustomTxsDeleteCustomTxsDeleteCustomTxsResultTxs"]


class DeleteCustomTxsDeleteCustomTxsDeleteCustomTxsResultTxs(BaseModel):
    tx: "DeleteCustomTxsDeleteCustomTxsDeleteCustomTxsResultTxsTx"


class DeleteCustomTxsDeleteCustomTxsDeleteCustomTxsResultTxsTx(BaseModel):
    link_id: str = Field(alias="linkId")
    id: str
    external_id: str = Field(alias="externalId")
    external_account_id: str = Field(alias="externalAccountId")
    amount: Any
    description: str
    posted: Any
    deleted_at: Optional[Any] = Field(alias="deletedAt")


class DeleteCustomTxsDeleteCustomTxsInternalError(BaseModel):
    typename__: Literal["InternalError"] = Field(alias="__typename")
    code: str
    message: str
    retryable: bool


DeleteCustomTxs.model_rebuild()
DeleteCustomTxsDeleteCustomTxsDeleteCustomTxsResult.model_rebuild()
DeleteCustomTxsDeleteCustomTxsDeleteCustomTxsResultTxs.model_rebuild()
