# Generated by fragment (with the help of ariadne-codegen)
# Source: queries/

from typing import Literal, Union

from pydantic import Field

from .base_model import BaseModel


class CreateCustomLink(BaseModel):
    create_custom_link: Union[
        "CreateCustomLinkCreateCustomLinkBadRequestError",
        "CreateCustomLinkCreateCustomLinkCreateCustomLinkResult",
        "CreateCustomLinkCreateCustomLinkInternalError",
    ] = Field(alias="createCustomLink", discriminator="typename__")


class CreateCustomLinkCreateCustomLinkBadRequestError(BaseModel):
    typename__: Literal["BadRequestError"] = Field(alias="__typename")
    code: str
    message: str
    retryable: bool


class CreateCustomLinkCreateCustomLinkCreateCustomLinkResult(BaseModel):
    typename__: Literal["CreateCustomLinkResult"] = Field(alias="__typename")
    link: "CreateCustomLinkCreateCustomLinkCreateCustomLinkResultLink"
    is_ik_replay: bool = Field(alias="isIkReplay")


class CreateCustomLinkCreateCustomLinkCreateCustomLinkResultLink(BaseModel):
    id: str
    name: str
    created: str


class CreateCustomLinkCreateCustomLinkInternalError(BaseModel):
    typename__: Literal["InternalError"] = Field(alias="__typename")
    code: str
    message: str
    retryable: bool


CreateCustomLink.model_rebuild()
CreateCustomLinkCreateCustomLinkCreateCustomLinkResult.model_rebuild()
