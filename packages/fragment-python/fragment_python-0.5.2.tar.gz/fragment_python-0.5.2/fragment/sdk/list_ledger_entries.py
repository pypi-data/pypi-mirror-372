# Generated by fragment (with the help of ariadne-codegen)
# Source: queries/

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class ListLedgerEntries(BaseModel):
    ledger: Optional["ListLedgerEntriesLedger"]


class ListLedgerEntriesLedger(BaseModel):
    ledger_entries: "ListLedgerEntriesLedgerLedgerEntries" = Field(
        alias="ledgerEntries"
    )


class ListLedgerEntriesLedgerLedgerEntries(BaseModel):
    nodes: List["ListLedgerEntriesLedgerLedgerEntriesNodes"]
    page_info: "ListLedgerEntriesLedgerLedgerEntriesPageInfo" = Field(alias="pageInfo")


class ListLedgerEntriesLedgerLedgerEntriesNodes(BaseModel):
    ik: str
    type: Optional[Any]
    posted: Any
    lines: "ListLedgerEntriesLedgerLedgerEntriesNodesLines"


class ListLedgerEntriesLedgerLedgerEntriesNodesLines(BaseModel):
    nodes: List["ListLedgerEntriesLedgerLedgerEntriesNodesLinesNodes"]


class ListLedgerEntriesLedgerLedgerEntriesNodesLinesNodes(BaseModel):
    amount: Any
    account: "ListLedgerEntriesLedgerLedgerEntriesNodesLinesNodesAccount"


class ListLedgerEntriesLedgerLedgerEntriesNodesLinesNodesAccount(BaseModel):
    path: str


class ListLedgerEntriesLedgerLedgerEntriesPageInfo(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    end_cursor: Optional[str] = Field(alias="endCursor")
    has_previous_page: bool = Field(alias="hasPreviousPage")
    start_cursor: Optional[str] = Field(alias="startCursor")


ListLedgerEntries.model_rebuild()
ListLedgerEntriesLedger.model_rebuild()
ListLedgerEntriesLedgerLedgerEntries.model_rebuild()
ListLedgerEntriesLedgerLedgerEntriesNodes.model_rebuild()
ListLedgerEntriesLedgerLedgerEntriesNodesLines.model_rebuild()
ListLedgerEntriesLedgerLedgerEntriesNodesLinesNodes.model_rebuild()
