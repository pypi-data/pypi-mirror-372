# coding: utf-8

"""
    Platform External API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from platform_api_python_client.models.get_c_serve_v2_deployment_response import GetCServeV2DeploymentResponse

class TestGetCServeV2DeploymentResponse(unittest.TestCase):
    """GetCServeV2DeploymentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetCServeV2DeploymentResponse:
        """Test GetCServeV2DeploymentResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetCServeV2DeploymentResponse`
        """
        model = GetCServeV2DeploymentResponse()
        if include_optional:
            return GetCServeV2DeploymentResponse(
                creator_email = '',
                cluster_id = 56,
                id = 56,
                name = '',
                endpoint_url = '',
                image_url = '',
                type = 'inference',
                status = 'active',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                hardware_instance_id = 56,
                revision_number = 56,
                recipe = { },
                cserve_version = '',
                min_scale = 56,
                max_scale = 56,
                initial_scale = 56,
                endpoint_certificate_authority = '',
                endpoint_bearer_token = '',
                concurrency = 56,
                env_vars = {
                    'key' : ''
                    }
            )
        else:
            return GetCServeV2DeploymentResponse(
                creator_email = '',
                cluster_id = 56,
                id = 56,
                name = '',
                endpoint_url = '',
                type = 'inference',
                status = 'active',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                hardware_instance_id = 56,
                revision_number = 56,
                recipe = { },
                min_scale = 56,
                max_scale = 56,
        )
        """

    def testGetCServeV2DeploymentResponse(self):
        """Test GetCServeV2DeploymentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
