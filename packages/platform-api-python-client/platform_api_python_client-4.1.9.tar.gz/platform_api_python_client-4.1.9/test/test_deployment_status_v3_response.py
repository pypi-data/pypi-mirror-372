# coding: utf-8

"""
    Platform External API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from platform_api_python_client.models.deployment_status_v3_response import DeploymentStatusV3Response

class TestDeploymentStatusV3Response(unittest.TestCase):
    """DeploymentStatusV3Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeploymentStatusV3Response:
        """Test DeploymentStatusV3Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeploymentStatusV3Response`
        """
        model = DeploymentStatusV3Response()
        if include_optional:
            return DeploymentStatusV3Response(
                id = 56,
                type = 'inference',
                status = 'active',
                rollout_status = 'Progressing',
                endpoint_url = '',
                revision_pod_details_list = [
                    platform_api_python_client.models.revision_pod_details.RevisionPodDetails(
                        revision_number = 56, 
                        revision_status = 'Healthy', 
                        pod_details_list = [
                            platform_api_python_client.models.pod_details.PodDetails(
                                name = '', 
                                revision_number = 56, 
                                status = 'ScalingUp', 
                                error_message = '', )
                            ], 
                        error_message = '', )
                    ]
            )
        else:
            return DeploymentStatusV3Response(
                id = 56,
                type = 'inference',
                status = 'active',
        )
        """

    def testDeploymentStatusV3Response(self):
        """Test DeploymentStatusV3Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
