# coding: utf-8

"""
    Platform External API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from platform_api_python_client.models.get_compute_deployment_response import GetComputeDeploymentResponse

class TestGetComputeDeploymentResponse(unittest.TestCase):
    """GetComputeDeploymentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetComputeDeploymentResponse:
        """Test GetComputeDeploymentResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetComputeDeploymentResponse`
        """
        model = GetComputeDeploymentResponse()
        if include_optional:
            return GetComputeDeploymentResponse(
                creator_email = '',
                cluster_id = 56,
                id = 56,
                name = '',
                endpoint_url = '',
                image_url = '',
                type = 'inference',
                status = 'active',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                hardware_instance_id = 56,
                revision_number = 56,
                exposed_port = 56,
                ssh_public_key = '',
                ssh_password = '',
                env_vars = {
                    'key' : ''
                    }
            )
        else:
            return GetComputeDeploymentResponse(
                creator_email = '',
                cluster_id = 56,
                id = 56,
                name = '',
                endpoint_url = '',
                type = 'inference',
                status = 'active',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                hardware_instance_id = 56,
                revision_number = 56,
                exposed_port = 56,
        )
        """

    def testGetComputeDeploymentResponse(self):
        """Test GetComputeDeploymentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
