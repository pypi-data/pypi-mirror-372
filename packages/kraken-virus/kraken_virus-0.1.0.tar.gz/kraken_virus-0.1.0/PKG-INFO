Metadata-Version: 2.4
Name: kraken-virus
Version: 0.1.0
Summary: A virus package for max destruction
Author-email: bluecode <bluecodeyt12@gmail.com>
License: MIT License
        
        Copyright (c) 2025 bluecodeyt12-maker
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/bluecodeyt12-maker/Kraken-Virus
Project-URL: Repository, https://github.com/bluecodeyt12-maker/Kraken-Virus
Project-URL: Issues, https://github.com/bluecodeyt12-maker/Kraken-Virus/issues
Keywords: kraken,virus,security
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

# Kraken-Virus

A sophisticated malware research suite inspired by NotPetya, engineered with enhanced capabilities and superior operational effectiveness for advanced cybersecurity analysis and academic study.

## Key Features

### üî∑ Exploitation & Propagation
- **EternalBlue Exploit (MS17-010)**: Full implementation of the SMB vulnerability for lateral movement and network-based propagation.
- **Multi-Vector Propagation**: Automated spreading mechanisms across networks, removable USB drives, and email communication systems.

### üî∑ Persistence & Stealth
- **Advanced Persistence Mechanisms**: Registry modifications, service installations, scheduled tasks, and boot sector manipulation for sustained execution.
- **Polymorphic Engine**: Code that alters its own signature to evade static detection methods.
- **Anti-Detection Techniques**: Environmental awareness, sandbox evasion, and debugging resistance.

### üî∑ Data Collection & Exfiltration
- **Sensitive Data Harvesting**: Comprehensive collection of credentials, documents, browser history, and cryptographic keys.
- **Stealthy Exfiltration**: Encrypted data transmission using multiple protocols and covert channels.

### üî∑ Defense Evasion
- **Security Tool Disabling**: Identification and termination of antivirus processes, intrusion detection systems, and security services.
- **Bypass Techniques**: UAC bypass, AMSI patching, and trust mechanism exploitation.

---

### üî∑ TO EXECUTE:

### Run a Virtual Machine and disconnect from network or wifi (Mandatory)
**you will need to run the code in a Virtual Machine because it can infect your computer by network or wifi**

#### Prerequisites:
1. **Python 3.6+** installed on your system.  
   Download: [Python Official Website](https://www.python.org/downloads/)  
   ‚ö†Ô∏è Ensure you check **"Add Python to PATH"** during installation.

2. **Git** (optional, for cloning repositories).  
   Download: [Git Official Website](https://git-scm.com/downloads)

---

#### Step-by-Step Guide:

##### 1. Clone or Download the Script:
   - If the script is in a Git repository, clone it:  
     ```bash
     git clone <repository_url>
     cd <repository_directory>
     ```
   - If you have the `kraken.py` file directly, place it in a dedicated folder.

##### 2. Install Dependencies:
   Open **Command Prompt** or **PowerShell** in the script's directory and run:
   ```bash
   pip install impacket cryptography pywin32
   ```
   - `impacket` for SMB/NTLM operations.
   - `cryptography` for encryption (Fernet).
   - `pywin32` for Windows API interactions (win32api, win32security, etc.).

##### 3. Run the Script:
   Execute the script with Python:
   ```bash
   python kraken.py
   ```

---

#### ‚ö†Ô∏è Notes:
- **Antivirus Warnings**: Some security tools may flag parts of the script (e.g., use of `pywin32` or `impacket`). Temporarily disable AV if needed (use at your own risk).
- **Admin Privileges**: The script may require elevated permissions to access Windows registry or system files. Run PowerShell/CMD as **Administrator**.
- **Network Operations**: Ensure firewalls allow SMB/HTTP traffic if the script interacts with networks.

---

#### üîß Troubleshooting:
- **Module Not Found Error**: Reinstall missing modules with `pip install <module_name>`.
- **Python Path Issues**: Ensure Python is in your system PATH. Verify with:  
  ```bash
  python --version
  ```
- **Windows Dependencies**: For `pywin32`, if errors persist, use the official `.exe` installer: [pywin32 releases](https://github.com/mhammond/pywin32/releases).

---

#### üì¶ Manual Dependency Installation (if pip fails):
1. **Impacket**:  
   ```bash
   git clone https://github.com/SecureAuthCorp/impacket.git
   cd impacket
   pip install .
   ```
2. **PyWin32**:  
   Download the compatible `.whl` file from [here](https://www.lfd.uci.edu/~gohlke/pythonlibs/#pywin32), then install via:  
   ```bash
   pip install <downloaded_whl_file>
   ```

---

### üöÄ Execution:
After dependencies are installed, run:  
```bash
python kraken.py
```

