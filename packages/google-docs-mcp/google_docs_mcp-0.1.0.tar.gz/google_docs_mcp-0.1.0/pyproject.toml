[project]
name = "google-docs-mcp"
version = "0.1.0"
description = "MCP server for Google Docs"
readme = "README.md"
authors = [
    { name = "Jag_k", email = "30597878+jag-k@users.noreply.github.com" },
]
requires-python = ">=3.13"
dependencies = [
    "pydantic-settings>=2.10.1",
    "pydantic>=2.11.7",
    "google-auth>=2.40.3",
    "google-auth-oauthlib>=1.2.2",
    "google-api-python-client>=2.179.0",
    "tenacity>=9.1.2",
    "markdownify>=1.2.0",
    "mcp>=1.13.1",
    "platformdirs>=4.4.0",
    "fastmcp>=2.11.3",
    "xdg-base-dirs>=6.0.2",
]

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pydantic-settings-export>=1.0.3",
    "ruff>=0.12.11",
]

[project.scripts]
google-docs-mcp = "google_docs_mcp.cli:main"

[build-system]
requires = ["uv_build>=0.8.13,<0.9.0"]
build-backend = "uv_build"

[tool.ruff] # https://docs.astral.sh/ruff/
target-version = "py313"
line-length = 120
exclude = [".git/", "venv/", ".venv/", "__main__.py"]
extend-exclude = [".idea", ".vscode", ".fleet", "tests/"]
src = ["src.google_docs_mcp"]

# https://docs.astral.sh/ruff/settings/#lint
[tool.ruff.lint]
select = [
    'F',     # flake8
    'C90',   # mccabe
    'I',     # isort
    'UP',    # pyupgrade
    'S',     # flake8-bandit
    'ASYNC', # flake8-async
    'B',     # flake8-bugbear
    'Q',     # flake8-quotes
    'PTH',   # flake8-use-pathlib
    'W',     # pycodestyle (warnings)
    'E',     # pycodestyle (errors)
    'N',     # pep8-naming
    'PT',    # flake8-pytest-style
    # 'PL',    # pylint (disabled: overly strict for server handler)
    'TID', # flake8-tidy-imports
    'RUF', # ruff-specific rules
    'G',   # flake8-logging-format
]
ignore = [
    'B012',    # {name} inside finally blocks cause exceptions to be silenced
    'B007',    # Loop control variable `num` not used within loop body
    'W605',    # Invalid escape sequence: `\D`
    'TC001',   # Useless return statement
    'TC002',   # Useless yield statement
    "PLR2004", # Magic value used in comparison
]

# https://docs.astral.sh/ruff/settings/#extend-per-file-ignores
[tool.ruff.lint.extend-per-file-ignores]
'__init__.py' = [
    'F401', # {name} imported but unused; consider using importlib.util.find_spec to test for availability
    'F403', # from {name} import * used; unable to detect undefined names
    'F405', # {name} may be undefined, or defined from star imports
    'TID',
]

# https://docs.astral.sh/ruff/settings/#lintpydocstyle
[tool.ruff.lint.pydocstyle]
convention = 'pep257'

# [tool.ruff.lint.pylint]
# max-args = 12
# max-branches = 20
# max-statements = 200

# https://docs.astral.sh/ruff/settings/#lintmccabe
[tool.ruff.lint.mccabe]
max-complexity = 20

# https://docs.astral.sh/ruff/settings/#lintisort
[tool.ruff.lint.isort]
section-order = [
    'future',
    'standard-library',
    'third-party',
    'first-party',
    'local-folder',
]
known-first-party = ["google_docs_mcp"]
lines-after-imports = 2
lines-between-types = 1
force-wrap-aliases = true
combine-as-imports = true
order-by-type = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.mypy]
python_version = "3.13"
ignore_missing_imports = true
scripts_are_modules = true
allow_redefinition = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_no_return = false
show_error_context = true
show_column_numbers = true
show_error_codes = true
color_output = false
pretty = true
exclude = [
    '^setup\.py$',
    '^tmp\.py$',
    '^venv/',
    '^.venv/',
    '^test+\.py$',
    '^conftest\.py$',
    '^tmp/',
    '^examples/',
    "^templates/",
]
disable_error_code = [
    "misc",
    "no-redef",
    "override",
    "union-attr",
    "index",
    "assignment",
    "call-arg",
]


[[tool.mypy.overrides]]
module = "google_docs_mcp.config"
disable_error_code = ["arg-type"]

[tool.pydantic_settings_export]
project_dir = "."
default_settings = ["src.google_docs_mcp.config:Settings"]
env_file = ".env"

[[tool.pydantic_settings_export.generators.dotenv]]
paths = [".env.example"]

[[tool.pydantic_settings_export.generators.markdown]]
paths = ["Configuration.md"]
