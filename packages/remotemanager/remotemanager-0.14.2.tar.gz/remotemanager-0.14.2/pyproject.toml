[project]
name = "remotemanager"
authors = [
    {name = "Louis Beal", email = "louis.j.beal@gmail.com"}
]
requires-python = ">=3.7"
description = "remote run management tool"
readme = "README.md"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Benchmark",
    "Topic :: System :: Distributed Computing",
]
dynamic = ['version']
keywords = ["HPC", "remote", "scheduler", "workflow", "workflows", "distributed"]

dependencies = [
    'pyyaml',
    'requests',
    'typing_extensions'
]

[project.urls]
Homepage = "https://gitlab.com/l_sim/remotemanager/"
Documentation = "https://l_sim.gitlab.io/remotemanager/"
Repository = "https://gitlab.com/l_sim/remotemanager/"
Issues = "https://gitlab.com/l_sim/remotemanager/-/issues"
Changelog = "https://l_sim.gitlab.io/remotemanager/versions.html"

[project.optional-dependencies]
dill = ["dill"]
jsonpickle = ["jsonpickle"]
all = ["dill", "jsonpickle"]
docs = [
    "nbsphinx",
    "sphinx-rtd-theme",
    "furo"
]
dev = [
    "dill",
    "jsonpickle",
    'sphinx',
    "nbsphinx",
    "sphinx-rtd-theme",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "psutil",
    "nbval",
    "bumpver",
    'numpy',
    'ruff',
    "furo",
    "pre-commit"
]

[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = 'remotemanager.__version__'}

[tool.pytest.ini_options]
addopts = "--nbval --cov=remotemanager --cov-report term-missing --cov-report xml:coverage.xml --cov-report lcov:coverage.lcov --cov-append --nbval-sanitize-with ./tests/uuid_sanitise.cfg"

[tool.coverage.report]
omit = ["remotemanager/connection/computers/*"]

[tool.bumpver]
current_version = "0.14.2"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "[clean] bump version {old_version} -> {new_version}"
commit = true
tag = false
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
]
"remotemanager/__init__.py" = [
    '^__version__ = "{version}"'
]
"codemeta.json" = [
    '"version": "{version}"'
]

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
