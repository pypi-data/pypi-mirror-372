[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=61.0"
]

[project]
authors = [
  {email = "marti.bosch@epfl.ch", name = "MartÃ­ Bosch"}
]
classifiers = [
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13"
]
dependencies = [
  "dask",
  "geopandas>=1.0.0",
  "matplotlib",
  "pooch",
  "requests",
  "requests-cache",
  "requests-oauthlib",
  "tqdm"
]
description = "Pythonic interface to access data from meteorological stations"
name = "meteora"
readme = "README.md"
requires-python = ">=3.10"
version = "0.8.0"
license = "GPL-3.0-or-later"
license-files = ["LICENSE"]

[project.optional-dependencies]
cx = [
  "contextily"
]
dev = [
  "build",
  "commitizen",
  "pip",
  "pre-commit",
  "toml",
  "tox",
  "twine"
]
doc = [
  "myst-parser",
  "nbsphinx",
  "pydata-sphinx-theme",
  "setuptools",
  "sphinx",
  "sphinxemoji"
]
ox = [
  "osmnx"
]
qc = [
  "seaborn",
  "statsmodels"
]
test = [
  "coverage[toml]",
  "pook",
  "pytest",
  "pytest-cov",
  "python-dotenv[cli]",
  "ruff"
]
xvec = [
  "xarray",
  "xvec>=0.5.0" # need at least v0.5.0 for categorical plots with custom cmap
]

[project.urls]
Repository = "https://github.com/martibosch/meteora"

[tool.codespell]
ignore-words-list = "convencional,pres,ser,temperatur"
skip = "CHANGELOG.md"

[tool.commitizen]
major_version_zero = true
name = "cz_conventional_commits"
tag_format = "v$version"
version_provider = "pep621"
version_scheme = "semver"

[tool.coverage.report]
exclude_lines = [
  "except ImportError",
  "except ModuleNotFoundError",
  "if self.debug:",
  "pragma: no cover",
  "raise NotImplementedError"
]
ignore_errors = true
omit = [
  "docs/conf.py",
  "tests/*"
]

[tool.coverage.run]
source = [
  "meteora"
]

[tool.ruff]
line-length = 88

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  "D",
  "E",
  "F",
  "I"
]

[tool.ruff.lint.isort]
known-first-party = [
  "meteora"
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
  "F401"
]
"tests/test_meteora.py" = [
  "D"
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.setuptools.packages.find]
include = [
  "meteora",
  "meteora.*"
]

[tool.tox]
env_list = [
  "3.10",
  "3.11",
  "3.12",
  "3.13",
  "build"
]
requires = [
  "tox>=4.19"
]

[tool.tox.env.build]
commands = [
  ["python", "-m", "build"],
  ["twine", "check", "dist/*"]
]
extras = [
  "dev",
  "test"
]
whitelist_externals = [
  "build",
  "sphinx-build",
  "twine"
]

[tool.tox.env_run_base]
commands = [
  ["dotenv", "-f", ".keys.env", "run", "pytest", "-s", "--cov=meteora", "--cov-report=xml", "tests", "{posargs}"]
]
conda_deps = [
  "gdal>=3.3"
]
extras = [
  "ox",
  "qc",
  "test",
  "xvec"
]
whitelist_externals = [
  "pytest"
]

[tool.tox.gh.python]
"3.10" = [
  "3.10"
]
"3.11" = [
  "3.11"
]
"3.12" = [
  "3.12"
]
"3.13" = [
  "3.13",
  "build"
]
