[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "m3s"
version = "0.5.0"
authors = [
    {name = "Nicolas Karasiak", email = "karasiak.nicolas@gmail.com"},
]
description = "Multi Spatial Subdivision System - A unified Python package for working with spatial grid systems"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
]
keywords = ["gis", "spatial", "grid", "geohash", "mgrs", "h3", "quadkey", "s2", "hierarchical", "subdivision", "geometry"]
dependencies = [
    "shapely>=2.0.0",
    "pyproj>=3.4.0",
    "mgrs>=1.4.0",
    "h3>=3.7.0",
    "geopandas>=0.13.0",
    "s2sphere>=0.2.5",
    "psutil>=5.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "matplotlib>=3.5.0",
    "pydocstyle>=6.0.0",
    "flake8-docstrings>=1.6.0",
    "isort>=5.0.0",
    "ruff>=0.1.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=1.20.0",
    "sphinx-gallery>=0.16.0",
    "memory_profiler>=0.60.0",
]
parallel = [
    "dask[complete]>=2024.1.0",
    "distributed>=2024.1.0",
]
gpu = [
    "cupy>=12.0.0",
    "cudf>=24.02",
    "cuspatial>=24.02",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "pydata-sphinx-theme>=0.15.0",
    "sphinx-design>=0.6.0",
    "sphinx-autodoc-typehints>=1.20.0",
    "sphinx-gallery>=0.16.0",
    "memory_profiler>=0.60.0",
    "matplotlib>=3.5.0",
]

[project.urls]
Homepage = "https://github.com/nkarasiak/m3s"
Documentation = "https://nkarasiak.github.io/m3s/"
Repository = "https://github.com/nkarasiak/m3s.git"
"Bug Tracker" = "https://github.com/nkarasiak/m3s/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["m3s*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["m3s"]
omit = ["tests/*", "examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pydocstyle]
convention = "numpy"
add-ignore = ["D100", "D104"]  # Allow missing docstrings in modules and packages

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "D",  # pydocstyle
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D200", # One-line docstring should fit on one line
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "E722", # Do not use bare except
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"