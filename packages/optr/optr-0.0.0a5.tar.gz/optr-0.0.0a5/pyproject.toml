[project]
name = "optr"
version = "0.0.0a5"
description = "Unified toolkit for building, training, and testing digital and physical operators."
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "CodecFlow Team", email = "team@codecflow.ai" }]
keywords = [
    "operators",
    "automation",
    "robotics",
    "desktop",
    "simulation",
    "sdk",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
license = { text = "MIT" }
dependencies = ["numpy"]

[project.urls]
Repository = "https://github.com/codecflow/optr"
Issues = "https://github.com/codecflow/optr/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
exclude = ["examples/", "tests/", "uv.lock", "ruff.toml"]

[tool.taskipy.tasks]
format = "ruff format src"
check = "ruff check src"
typing = "mypy src"
test = "pytest src -v"

[project.optional-dependencies]
desktop = ["mss", "pyautogui"]
vision = ["opencv-python"]
simulation = ["mujoco"]
ml = ["torch", "onnxruntime"]
streaming = ["pygobject"]
solana = ["solders", "solana", "anchorpy", "base58", "msgpack"]
all = [
    "optr[desktop]",
    "optr[vision]",
    "optr[simulation]",
    "optr[ml]",
    "optr[streaming]",
]

[dependency-groups]
dev = ["mypy>=1.17.1", "pytest", "ruff", "taskipy"]
