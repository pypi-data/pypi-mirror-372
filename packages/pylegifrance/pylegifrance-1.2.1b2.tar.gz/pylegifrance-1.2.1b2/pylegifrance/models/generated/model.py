# generated by datamodel-codegen:
#   filename:  legifrance.json
#   timestamp: 2025-05-28T19:49:07+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Optional

from pydantic import BaseModel, Field, RootModel


class Model(RootModel[Any]):
    root: Any


class KaliTextConsultArticleRequest(BaseModel):
    id: str = Field(
        ...,
        description="Identifiant du texte ou d'un de ses éléments enfants (section/article)",
        examples=["KALIARTI000005833238"],
    )


class SuggestRequest(BaseModel):
    search_text: Optional[str] = Field(
        None, alias="searchText", description="Texte à rechercher", examples=["mariage"]
    )


class Nature(Enum):
    loda = "LODA"
    jorf = "JORF"
    code = "CODE"
    kali = "KALI"
    jorfcont = "JORFCONT"


class ModificateurDTO(BaseModel):
    id_text: Optional[str] = Field(
        None,
        alias="idText",
        description="Identifiant du texte du modificateur",
        examples=["LEGITEXT000006072665"],
    )
    nature: Optional[Nature] = Field(None, description="Nature", examples=["CODE"])
    id_parent: Optional[str] = Field(
        None,
        alias="idParent",
        description="Identifiant de l'élément parent du modificateur (texte/section ...)",
    )
    id: Optional[str] = Field(
        None, description="Identifiant", examples=["LEGIARTI000006687518"]
    )
    name: Optional[str] = Field(
        None,
        description="Titre du modificateur",
        examples=["Code de la santé publique - art. L2211-1 (V)"],
    )


class DossierResult(BaseModel):
    libelle_texte: Optional[str] = Field(
        None,
        alias="libelleTexte",
        description="Titre du texte",
        examples=["LOI n° 2018-1317 du 28 décembre 2018 de finances pour 2019"],
    )
    id_texte: Optional[str] = Field(
        None,
        alias="idTexte",
        description="Identifiant du texte",
        examples=["JORFTEXT000037882341"],
    )


class Legislature(BaseModel):
    date_debut: Optional[datetime] = Field(
        None, alias="dateDebut", description="Date de début", examples=["1340668800000"]
    )
    id: Optional[str] = Field(None, description="Identifiant", examples=["14"])
    libelle: Optional[str] = Field(
        None, description="libellé", examples=["XIVème législature"]
    )
    date_fin: Optional[datetime] = Field(
        None, alias="dateFin", description="Date de fin", examples=["1498435200000"]
    )


class TypePagination(Enum):
    defaut = "DEFAUT"
    article = "ARTICLE"


class DebatsParlementairesListRequest(BaseModel):
    second_sort_value: Optional[str] = Field(
        None, alias="secondSortValue", examples=["ID_DESC"]
    )
    date_parution: Optional[str] = Field(
        None, alias="dateParution", examples=["01/01/2020 > 31/01/2020"]
    )
    page_number: int = Field(
        ...,
        alias="pageNumber",
        description="Numéro de la page à consulter",
        examples=[1],
    )
    sort_value: Optional[str] = Field(
        None, alias="sortValue", examples=["DEBAT_PARLEMENTAIRE_DESC"]
    )
    page_size: int = Field(
        ...,
        alias="pageSize",
        description="Nombre de résultats par page (max 100)",
        examples=[10],
    )
    types_publication: Optional[list[str]] = Field(
        None, alias="typesPublication", examples=["AN"]
    )


class RelatedLinksArticleRequest(BaseModel):
    article_id: str = Field(
        ...,
        alias="articleId",
        description="Identifiant de l'article",
        examples=["LEGIARTI000032207188"],
    )


class HasChronolegiResponse(BaseModel):
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    chronolegi_exists: Optional[bool] = Field(
        None,
        alias="chronolegiExists",
        description="Indique si un versionning existe",
        examples=[True],
    )


class EsQuestionsEcritesParlementaires(BaseModel):
    url: Optional[str] = None
    date_parution: Optional[datetime] = Field(None, alias="dateParution")
    ref_injection: Optional[str] = Field(None, alias="refInjection")
    display_size: Optional[str] = Field(None, alias="displaySize")
    id: Optional[str] = None
    origine: Optional[str] = None
    numero_parution: Optional[str] = Field(None, alias="numeroParution")
    id_tech_injection: Optional[str] = Field(None, alias="idTechInjection")
    emetteur: Optional[str] = None
    pdf_name: Optional[str] = Field(None, alias="pdfName")
    path_to_file: Optional[str] = Field(None, alias="pathToFile")


class TypeTexte(Enum):
    texte_attache = "TEXTE_ATTACHE"
    texte_base = "TEXTE_BASE"
    texte_salaire = "TEXTE_SALAIRE"
    texte_extension = "TEXTE_EXTENSION"


class Titrage(BaseModel):
    id: Optional[str] = Field(None, description="Identifiant")


class ArticleVersion(BaseModel):
    date_debut: Optional[datetime] = Field(
        None, alias="dateDebut", description="Date de début de la version"
    )
    etat: Optional[str] = Field(None, description="Etat juridique")
    id: Optional[str] = Field(None, description="Identifiant de l'article")
    version: Optional[str] = Field(None, description="Version")
    numero: Optional[str] = Field(None, description="Numéro de l'article")
    date_fin: Optional[datetime] = Field(
        None, alias="dateFin", description="Date de fin de la version"
    )
    ordre: Optional[int] = Field(
        None,
        description="Numéro d'ordre de l'article. Sert au tri des articles au sein de leur élément parent (section ou texte)",
    )


class Lien(BaseModel):
    libelle: Optional[str] = Field(
        None, description="Libellé", examples=["Dossier législatif du Sénat"]
    )
    id: Optional[str] = Field(
        None, description="Identifiant du lien", examples=["1415810924079"]
    )
    data: Optional[str] = Field(None, description="Texte associé")
    lien: Optional[str] = Field(
        None,
        description="Lien vers le dossier législatif",
        examples=["http://www.senat.fr/dossier-legislatif/pjl14-096.html"],
    )


class DossierLegislatifResult(BaseModel):
    id: Optional[str] = Field(
        None, description="Identifiant", examples=["JORFDOLE000037460423"]
    )
    titre: Optional[str] = Field(
        None,
        description="Titre",
        examples=[
            "LOI n° 2019-30 du 20 janvier 2019 habilitant le Gouvernement à prendre par ordonnance les mesures de préparation au retrait du Royaume-Uni de l'Union européenne"
        ],
    )
    date_creation: Optional[str] = Field(
        None,
        alias="dateCreation",
        description="Date de création",
        examples=["2019-01-21"],
    )
    date_derniere_modification: Optional[str] = Field(
        None,
        alias="dateDerniereModification",
        description="Date de dernière modification",
        examples=["2019-01-21"],
    )
    type: Optional[str] = Field(None, description="Type", examples=["LOI_PUBLIEE"])
    dossiers: Optional[list[DossierResult]] = Field(
        None, description="Liste des dossiers"
    )


class BodmrTexts(BaseModel):
    date_bodmr: Optional[datetime] = Field(
        None, alias="dateBodmr", description="Date de publication du bodmr"
    )
    path_to_file: Optional[str] = Field(None, alias="pathToFile")
    display_size: Optional[str] = Field(None, alias="displaySize")
    pdf_name: Optional[str] = Field(None, alias="pdfName", description="Nom du pdf")
    number: Optional[str] = Field(None, description="Numéro du bodmr")
    type_of_bodmr: Optional[str] = Field(
        None, alias="typeOfBodmr", description="Type du document"
    )


class AdressePostale(BaseModel):
    ville: Optional[str] = Field(None, description="Ville", examples=["PARIS"])
    code_postal: Optional[str] = Field(
        None, alias="codePostal", description="Code postal", examples=["75005"]
    )


class BoccListRequest(BaseModel):
    idccs: Optional[list[str]] = Field(None, examples=[1880])
    search_for_global_bocc: Optional[bool] = Field(None, alias="searchForGlobalBocc")
    sort_value: Optional[str] = Field(
        None, alias="sortValue", examples=["BOCC_SORT_DESC"]
    )
    page_number: int = Field(
        ...,
        alias="pageNumber",
        description="Numéro de la page à consulter",
        examples=[1],
    )
    id_main_bocc: Optional[str] = Field(
        None, alias="idMainBocc", examples=["CCO20190051"]
    )
    interval_publication: Optional[str] = Field(
        None, alias="intervalPublication", examples=["01/01/2020 > 31/01/2020"]
    )
    page_size: int = Field(
        ...,
        alias="pageSize",
        description="Nombre de résultats par page (max 100)",
        examples=[10],
    )
    departments: Optional[list[str]] = Field(
        None, examples=["Ministère chargé du travail"]
    )
    titre: Optional[str] = None
    search_for_texts_bocc: Optional[bool] = Field(None, alias="searchForTextsBocc")


class SignataireKali(BaseModel):
    fait_a: Optional[str] = Field(None, alias="faitA", description="Fait A")
    denonciation: Optional[str] = Field(None, description="Dénonciation")
    execution: Optional[str] = Field(None, description="Exécution")
    syndic: Optional[str] = Field(None, description="Syndicat")
    adhesion: Optional[str] = Field(None, description="Adhésion")
    patron: Optional[str] = Field(None, description="Patronat")
    sign_ext: Optional[str] = Field(
        None, alias="signExt", description="Signataire extérieur"
    )


class JuriConsultRequest(BaseModel):
    searched_string: Optional[str] = Field(
        None,
        alias="searchedString",
        description="Texte de la recherche ayant aboutie à la consultation du texte",
        examples=["constitution 1958"],
    )
    text_id: str = Field(
        ...,
        alias="textId",
        description="Identifiant du texte",
        examples=["JURITEXT000037999394"],
    )


class EsGlobalBocc(BaseModel):
    date_parution: Optional[datetime] = Field(None, alias="dateParution")
    file_name: Optional[str] = Field(None, alias="fileName")
    display_size: Optional[str] = Field(None, alias="displaySize")
    path_file: Optional[str] = Field(None, alias="pathFile")
    num_parution: Optional[str] = Field(None, alias="numParution")


class SearchAdditionalResult(BaseModel):
    properties: Optional[dict[str, str]] = None
    id: Optional[str] = None


class TextesBaseEnum(Enum):
    texte_base = "TEXTE_BASE"


class Sort(Enum):
    date_update = "DATE_UPDATE"
    date_publi_asc = "DATE_PUBLI_ASC"
    date_publi_desc = "DATE_PUBLI_DESC"
    signature_date_asc = "SIGNATURE_DATE_ASC"
    signature_date_desc = "SIGNATURE_DATE_DESC"
    id_desc = "ID_DESC"
    id_asc = "ID_ASC"


class LegalStatu(Enum):
    vigueur = "VIGUEUR"
    abroge_diff = "ABROGE_DIFF"
    vigueur_diff = "VIGUEUR_DIFF"
    vigueur_eten = "VIGUEUR_ETEN"
    vigueur_non_eten = "VIGUEUR_NON_ETEN"
    abroge = "ABROGE"
    perime = "PERIME"
    annule = "ANNULE"
    modifie = "MODIFIE"
    disjoint = "DISJOINT"
    substitue = "SUBSTITUE"
    transfere = "TRANSFERE"
    initiale = "INITIALE"
    modifie_mort_ne = "MODIFIE_MORT_NE"
    sans_etat = "SANS_ETAT"
    denonce = "DENONCE"
    remplace = "REMPLACE"


class ConventionsListRequest(BaseModel):
    textes_base: Optional[list[TextesBaseEnum]] = Field(None, alias="textesBase")
    sort: Optional[Sort] = Field(
        None, description="Ordre de tri", examples=["DATE_PUBLI_ASC"]
    )
    legal_status: Optional[list[LegalStatu]] = Field(
        None,
        alias="legalStatus",
        description="Liste des états juridique à filtrer",
        examples=[["VIGUEUR", "ABROGE", "VIGUEUR_DIFF"]],
    )
    page_number: int = Field(
        ...,
        alias="pageNumber",
        description="Numéro de la page à consulter",
        examples=[1],
    )
    key_words: Optional[list[str]] = Field(
        None,
        alias="keyWords",
        description="Liste des mots clés à filtrer",
        examples=[["ABATTOIRS", "CHAUX HYDRAULIQUES"]],
    )
    second_sort: Optional[Sort] = Field(
        None, alias="secondSort", description="Ordre de tri", examples=["ID_ASC"]
    )
    page_size: int = Field(
        ...,
        alias="pageSize",
        description="Nombre de résultats par page (max 100)",
        examples=[10],
    )
    idcc: Optional[str] = Field(
        None, description="IDCC permettant de filtrer le résultat", examples=["489"]
    )
    titre: Optional[str] = Field(
        None,
        description="Texte à rechercher dans les titres permettant de filtrer le résultat",
        examples=["Industrie"],
    )


class Supply(Enum):
    all = "ALL"
    all_suggest = "ALL_SUGGEST"
    loda_list = "LODA_LIST"
    code_list = "CODE_LIST"
    code_release_date = "CODE_RELEASE_DATE"
    code_release_date_suggest = "CODE_RELEASE_DATE_SUGGEST"
    code_legal_status = "CODE_LEGAL_STATUS"
    loda_release_date = "LODA_RELEASE_DATE"
    loda_release_date_suggest = "LODA_RELEASE_DATE_SUGGEST"
    loda_legal_status = "LODA_LEGAL_STATUS"
    kali = "KALI"
    kali_text = "KALI_TEXT"
    constit = "CONSTIT"
    cetat = "CETAT"
    jufi = "JUFI"
    juri = "JURI"
    jorf = "JORF"
    jorf_suggest = "JORF_SUGGEST"
    cnil = "CNIL"
    article = "ARTICLE"
    circ = "CIRC"
    acco = "ACCO"
    pdf = "PDF"


class SuggestSupplyRequest(BaseModel):
    documents_dits: Optional[bool] = Field(None, alias="documentsDits")
    search_text: Optional[str] = Field(
        None, alias="searchText", description="Texte à rechercher", examples=["mariage"]
    )
    supplies: Optional[list[Supply]] = Field(
        None,
        description="Liste des fonds dans lesquels exécuter la recherche pour la suggestion",
        examples=[["JORF", "JURI"]],
    )


class SearchNearestVersionRequest(BaseModel):
    cid_section: Optional[str] = Field(
        None,
        alias="cidSection",
        description="Chronical ID de la section",
        examples=["LEGISCTA000006117894"],
    )
    cid_text: str = Field(
        ...,
        alias="cidText",
        description="Chronical ID du texte",
        examples=["LEGITEXT000006070721"],
    )
    date: str = Field(
        ..., description="Date de référence pour la recherche", examples=["2021-04-15"]
    )


class ElasticData(BaseModel):
    index_name: Optional[str] = Field(
        None,
        alias="indexName",
        description="Nom de l'index",
        examples=["data_next_juri"],
    )
    usage: Optional[str] = Field(
        None, description="Description de l'usage de l'index", examples=[""]
    )
    nb_doc: Optional[int] = Field(
        None, alias="nbDoc", description="Nombre de documents", examples=[992978]
    )
    last_index: Optional[str] = Field(
        None,
        alias="lastIndex",
        description="Date du dernier document indexé",
        examples=["2021-04-15"],
    )


class CodeConsultRequest(BaseModel):
    abrogated: Optional[bool] = None
    text_id: str = Field(
        ...,
        alias="textId",
        description="Chronical ID du texte",
        examples=["LEGITEXT000006075116"],
    )
    searched_string: Optional[str] = Field(
        None,
        alias="searchedString",
        description="Texte de la recherche ayant aboutie à la consultation du texte",
        examples=["constitution 1958"],
    )
    date: str = Field(..., description="Date de consultation", examples=["2021-04-15"])
    from_suggest: Optional[bool] = Field(None, alias="fromSuggest")
    sct_cid: Optional[str] = Field(
        None,
        alias="sctCid",
        description="Chronical ID de la section a consulter (Non requis pour la consultation de la table des matières sinon obligatoire)",
        examples=["LEGISCTA000006112861"],
    )


class BoccAndTextListRequest(BaseModel):
    page_number: int = Field(
        ...,
        alias="pageNumber",
        description="Numéro de la page à consulter",
        examples=[1],
    )
    sort_value: Optional[str] = Field(None, alias="sortValue")
    interval_publication: Optional[str] = Field(None, alias="intervalPublication")
    page_size: int = Field(
        ...,
        alias="pageSize",
        description="Nombre de résultats par page (max 100)",
        examples=[10],
    )
    idcc: Optional[str] = None
    titre: Optional[str] = None


class SuggestValue(BaseModel):
    appellations: Optional[list[str]] = Field(
        None, description="Appellations", examples=["Loi Macron"]
    )
    id: Optional[str] = Field(
        None,
        description="Identifiant du texte/section/article",
        examples=["JORFTEXT000000320201"],
    )
    label: Optional[str] = Field(
        None,
        description="Titre à afficher",
        examples=[
            "Ordonnance du 18 juillet 1944 FORCES BRITANNIQUES : MARIAGE SUR LE TERRITOIRE FRANCAIS"
        ],
    )
    date_version: Optional[str] = Field(
        None,
        alias="dateVersion",
        description="Date de la version retournée par la suggestion",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    origin: Optional[str] = Field(None, description="Origine", examples=["JORF"])
    nature: Optional[str] = Field(
        None, description="Nature de l'élément lié", examples=["ordonnance"]
    )
    id_texte: Optional[str] = Field(
        None, alias="idTexte", description="idTexte", examples=["LEGITEXT000006075116"]
    )
    section: Optional[str] = Field(
        None, description="Section", examples=["LEGISCTA000006138259"]
    )


class ArticleRequest(BaseModel):
    id: str = Field(
        ..., description="Identifiant de l'article", examples=["LEGIARTI000006307920"]
    )


class ChronoLegiTextRequest(BaseModel):
    end_year: int = Field(
        ...,
        alias="endYear",
        description="Année de fin de chargement des détails",
        examples=[2018],
    )
    date_consult: str = Field(
        ...,
        alias="dateConsult",
        description="Date de référence",
        examples=["2021-04-15"],
    )
    start_year: int = Field(
        ...,
        alias="startYear",
        description="Année de début de chargement des détails",
        examples=[2015],
    )
    text_cid: str = Field(
        ...,
        alias="textCid",
        description="Chronical ID du texte",
        examples=["LEGITEXT000006070721"],
    )


class LegiSommaireConsultRequest(BaseModel):
    date: str = Field(..., description="Date de consultation", examples=["2021-04-15"])
    nature: Optional[str] = Field(
        None,
        description="Nature du texte recherché : CODE, DECRET, ARRETE, LOI, ORDONNANCE...",
        examples=["CODE"],
    )
    text_id: str = Field(
        ...,
        alias="textId",
        description="id OU cid du texte",
        examples=["LEGITEXT000006071366"],
    )


class JorfConsultWithIdEliAliasRequest(BaseModel):
    id_eli_or_alias: str = Field(
        ...,
        alias="idEliOrAlias",
        description="ID Eli ou Alias du JORF cible.",
        examples=["/eli/decret/2018/2/13/JUSC1732516D/jo/texte"],
    )


class Conteneur(BaseModel):
    etat: Optional[str] = Field(
        None, description="Etat juridique", examples=["VIGUEUR_ETEN"]
    )
    id: Optional[str] = Field(
        None, description="Identifiant du conteneur", examples=["JORFCONT000038052140"]
    )
    titre: Optional[str] = Field(None, description="Titre du conteneur")
    date_publi: Optional[datetime] = Field(
        None,
        alias="datePubli",
        description="Date de publication",
        examples=["423532800000"],
    )
    origine: Optional[str] = Field(None, description="Origine", examples=["JORF"])
    nature: Optional[str] = Field(
        None, description="Nature du conteneur", examples=["IDCC"]
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID", examples=["KALICONT000005635384"]
    )
    id_tech_injection: Optional[str] = Field(
        None,
        alias="idTechInjection",
        description="Identifiant technique de l'élément injecté",
    )
    url: Optional[str] = Field(
        None,
        description="chemin vers le conteneur",
        examples=["conteneur/JORF/CONT/00/00/38/05/21/JORFCONT000038052140.xml"],
    )
    ancien_id: Optional[str] = Field(
        None, alias="ancienId", description="Ancien Identifiant"
    )
    id_eli: Optional[str] = Field(
        None,
        alias="idEli",
        description="Identifiant ELI",
        examples=["/eli/jo/2019/1/25/0021"],
    )
    numero: Optional[str] = Field(
        None, description="Numéro conteneur", examples=["1261"]
    )
    ref_injection: Optional[str] = Field(
        None,
        alias="refInjection",
        description="Référence technique permettant d'identifier la date d'injection",
    )
    num: Optional[str] = Field(
        None, description="Numéro", examples=["0000000000001261"]
    )
    relevant_date: Optional[datetime] = Field(None, alias="relevantDate")


class Type(Enum):
    loi_publiee = "LOI_PUBLIEE"
    ordonnance_publiee = "ORDONNANCE_PUBLIEE"
    projet_loi = "PROJET_LOI"
    proposition_loi = "PROPOSITION_LOI"


class DossiersLegislatifsRequest(BaseModel):
    type: Type = Field(
        ..., description="Type de dossier législatif", examples=["LOI_PUBLIEE"]
    )
    legislature_id: int = Field(
        ...,
        alias="legislatureId",
        description="Identifiant de la législature",
        examples=[15],
    )


class TableRequest(BaseModel):
    end_year: int = Field(
        ..., alias="endYear", description="Année de fin", examples=[2017]
    )
    start_year: Optional[int] = Field(
        None, alias="startYear", description="Année de début", examples=[2012]
    )


class YearsWithNoTableResponse(BaseModel):
    lst_year_disabled: Optional[list[int]] = Field(
        None,
        alias="lstYearDisabled",
        description="Liste des années",
        examples=[[2015, 2016]],
    )


class DocumentAdministratif(BaseModel):
    nor: Optional[str] = Field(
        None, description="Numéro NOR", examples=["CCCJ1718194V"]
    )
    date_document: Optional[datetime] = Field(
        None,
        alias="dateDocument",
        description="Date du document",
        examples=["1498780800000"],
    )
    display_size: Optional[str] = Field(
        None,
        alias="displaySize",
        description="Taille du fichier avec son unité",
        examples=["918,4 Ko"],
    )
    id: Optional[str] = Field(
        None, description="Identifiant unique", examples=["DOCATEXT000037511083"]
    )
    titre: Optional[str] = Field(
        None,
        description="Titre",
        examples=["Publication simplifiée des comptes de campagne"],
    )
    id_tech_injection: Optional[str] = Field(
        None,
        alias="idTechInjection",
        description="Identifiant technique de l'élément injecté",
    )
    attachment_url: Optional[str] = Field(
        None, alias="attachmentUrl", description="Chemin vers le fichier attaché"
    )
    nature: Optional[str] = Field(None, description="Nature")
    numero: Optional[str] = Field(None, description="Numéro", examples=["0003"])
    url: Optional[str] = Field(None, description="Chemin vers le fichier xml")
    ancien_id: Optional[str] = Field(None, alias="ancienId", description="Ancien ID")
    attachment_name: Optional[str] = Field(
        None,
        alias="attachmentName",
        description="Nom du fichier",
        examples=["dae_20170630_0003_0001.pdf.sig"],
    )
    sous_titre: Optional[str] = Field(
        None,
        alias="sousTitre",
        description="Sous-titre",
        examples=["Élections partielles de l’année 2016"],
    )
    origine: Optional[str] = Field(None, description="Origine", examples=["DOCA"])
    ref_injection: Optional[str] = Field(
        None,
        alias="refInjection",
        description="Référence technique permettant d'identifier la date d'injection",
    )
    date_jo: Optional[datetime] = Field(
        None, alias="dateJO", description="Date du JO", examples=["1498780800000"]
    )


class PdfMetadata(BaseModel):
    path_to_file: Optional[str] = Field(None, alias="pathToFile")
    file_name: Optional[str] = Field(None, alias="fileName")
    display_size: Optional[str] = Field(None, alias="displaySize")
    id: Optional[str] = None
    complement_number: Optional[str] = Field(None, alias="complementNumber")
    date_publi: Optional[datetime] = Field(None, alias="datePubli")
    origine: Optional[str] = None
    size: Optional[int] = None
    type: Optional[str] = None
    num: Optional[str] = None


class ConventionsListResult(BaseModel):
    etat: Optional[str] = Field(
        None, description="Etat juridique du texte", examples=["ABROGE"]
    )
    id: Optional[str] = Field(
        None, description="Identifiant unique", examples=["KALITEXT000005651341"]
    )
    titre: Optional[str] = Field(
        None,
        description="Titre",
        examples=[
            "Convention collective nationale pour le personnel d'encadrement de l'industrie de la fabrication de la chaux du 27 avril 1981, mise à jour au 1er mars 1982.  Etendue par arrêté du 5 novembre 1982 JONC 21 décembre 1982."
        ],
    )
    pdf_file_size: Optional[str] = Field(None, alias="pdfFileSize")
    pdf_file_path: Optional[str] = Field(None, alias="pdfFilePath")
    description_fusion: Optional[str] = Field(
        None, alias="descriptionFusion", description="Description de fusion"
    )
    cid_conteneur: Optional[str] = Field(
        None,
        alias="cidConteneur",
        description="Chronical ID du conteneur",
        examples=["KALICONT000005635668"],
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID", examples=["KALITEXT000005651341"]
    )
    description_fusion_html: Optional[str] = Field(
        None,
        alias="descriptionFusionHtml",
        description="Texte HTML de la description de fusion",
    )
    idcc: Optional[str] = Field(None, description="IDCC", examples=["1119"])
    pdf_file_name: Optional[str] = Field(None, alias="pdfFileName")


class ConcordanceLinksRequest(BaseModel):
    article_id: str = Field(
        ...,
        alias="articleId",
        description="Identifiant de l'article",
        examples=["LEGIARTI000006419320"],
    )


class KaliTextConsultSectionRequest(BaseModel):
    id: str = Field(
        ...,
        description="Identifiant du texte ou d'un de ses éléments enfants (section/article)",
        examples=["KALISCTA000005716465"],
    )


class Fond(Enum):
    jorf = "JORF"
    cnil = "CNIL"
    cetat = "CETAT"
    juri = "JURI"
    jufi = "JUFI"
    constit = "CONSTIT"
    kali = "KALI"
    code_date = "CODE_DATE"
    code_etat = "CODE_ETAT"
    loda_date = "LODA_DATE"
    loda_etat = "LODA_ETAT"
    all = "ALL"
    circ = "CIRC"
    acco = "ACCO"


class QuestionsEcritesParlementairesListRequest(BaseModel):
    second_sort_value: Optional[str] = Field(
        None, alias="secondSortValue", examples=["ID_DESC"]
    )
    periode_publication: Optional[str] = Field(
        None, alias="periodePublication", examples=["01/01/2020 > 31/01/2020"]
    )
    page_number: int = Field(
        ...,
        alias="pageNumber",
        description="Numéro de la page à consulter",
        examples=[1],
    )
    sort_value: Optional[str] = Field(
        None, alias="sortValue", examples=["QUESTION_ECRITE_PARLEMENTAIRE_DESC"]
    )
    parlement_types: Optional[list[str]] = Field(
        None, alias="parlementTypes", examples=["AN"]
    )
    page_size: int = Field(
        ...,
        alias="pageSize",
        description="Nombre de résultats par page (max 100)",
        examples=[10],
    )


class SectionCidRequest(BaseModel):
    cid: str = Field(
        ...,
        description="Chronical CID de la section",
        examples=["LEGISCTA000006163288"],
    )


class LienConcorde(BaseModel):
    nature_text: Optional[str] = Field(
        None, alias="natureText", description="Nature du texte lié", examples=["LOI"]
    )
    link_type: Optional[str] = Field(
        None, alias="linkType", description="Type de lien", examples=["MODIFIE"]
    )
    article_num: Optional[str] = Field(
        None, alias="articleNum", description="Numéro de l'article lié", examples=["53"]
    )
    link_orientation: Optional[str] = Field(
        None,
        alias="linkOrientation",
        description="Sens de la modification",
        examples=["cible"],
    )
    text_title: Optional[str] = Field(
        None,
        alias="textTitle",
        description="Titre du texte lié",
        examples=["LOI n°2015-990 du 6 août 2015 - art. 53 (V)"],
    )
    article_id: Optional[str] = Field(
        None,
        alias="articleId",
        description="Identifiant de l'article lié",
        examples=["LEGIARTI000032930490"],
    )
    text_cid: Optional[str] = Field(
        None,
        alias="textCid",
        description="Chronical ID du texte lié",
        examples=["JORFTEXT000030978561"],
    )


class TexteLien(BaseModel):
    title: Optional[str] = Field(None, description="Titre")
    date_publi_texte: Optional[str] = Field(
        None, alias="datePubliTexte", description="Date de publication"
    )
    id: Optional[str] = Field(None, description="Identifiant")
    type_lien: Optional[str] = Field(None, alias="typeLien", description="Type de lien")
    cid_texte: Optional[str] = Field(
        None, alias="cidTexte", description="Chronical ID du texte"
    )
    nature_texte: Optional[str] = Field(
        None, alias="natureTexte", description="Nature du texte"
    )
    sens: Optional[str] = Field(None, description="Sens du type de lien")
    num_texte: Optional[str] = Field(
        None, alias="numTexte", description="Numéro du texte"
    )
    date_signa_texte: Optional[str] = Field(
        None, alias="dateSignaTexte", description="Date de signature"
    )
    num: Optional[str] = Field(None, description="Numéro")
    nor_texte: Optional[str] = Field(None, alias="norTexte", description="NOR")


class Niveau(BaseModel):
    libelle: Optional[str] = Field(None, description="Libellé", examples=["Sénat"])
    id: Optional[str] = Field(
        None, description="Identifiant du niveau", examples=["1415810580974"]
    )
    liens: Optional[list[Lien]] = Field(None, description="Liste des liens du niveau")
    niveaux: Optional[list[Niveau]] = Field(
        None, description="liste des niveaux enfants"
    )


class ElasticDataResponse(BaseModel):
    lst_data: Optional[list[ElasticData]] = Field(
        None, alias="lstData", description="Liste des informations par index"
    )


class DecisionAttaquee(BaseModel):
    date: Optional[datetime] = Field(
        None, description="Date de la décision", examples=["32472144000000"]
    )
    formation: Optional[str] = Field(None, description="formation")


class BodmrListRequest(BaseModel):
    sort: Optional[str] = Field(
        None, description="Ordre de tri", examples=["PUBLICATION_DATE_ASC"]
    )
    page_size: int = Field(
        ...,
        alias="pageSize",
        description="Nombre de résultats par page (max 100)",
        examples=[10],
    )
    page_number: int = Field(
        ...,
        alias="pageNumber",
        description="Numéro de la page à consulter",
        examples=[1],
    )
    years: Optional[list[str]] = Field(
        None, description="Liste des années à filtrer", examples=[[2016, 2017]]
    )


class Operateur(Enum):
    et = "ET"
    ou = "OU"


class TypeChamp(Enum):
    all = "ALL"
    title = "TITLE"
    table = "TABLE"
    nor = "NOR"
    num = "NUM"
    advanced_texte_id = "ADVANCED_TEXTE_ID"
    num_delib = "NUM_DELIB"
    num_dec = "NUM_DEC"
    num_article = "NUM_ARTICLE"
    article = "ARTICLE"
    ministere = "MINISTERE"
    visa = "VISA"
    notice = "NOTICE"
    visa_notice = "VISA_NOTICE"
    travaux_prep = "TRAVAUX_PREP"
    signature = "SIGNATURE"
    nota = "NOTA"
    num_affaire = "NUM_AFFAIRE"
    abstrats = "ABSTRATS"
    resumes = "RESUMES"
    texte = "TEXTE"
    ecli = "ECLI"
    num_loi_def = "NUM_LOI_DEF"
    type_decision = "TYPE_DECISION"
    numero_interne = "NUMERO_INTERNE"
    ref_publi = "REF_PUBLI"
    resume_circ = "RESUME_CIRC"
    texte_ref = "TEXTE_REF"
    titre_loi_def = "TITRE_LOI_DEF"
    raison_sociale = "RAISON_SOCIALE"
    mots_cles = "MOTS_CLES"
    idcc = "IDCC"


class CibleChronoDTO(BaseModel):
    date_debut: Optional[datetime] = Field(
        None,
        alias="dateDebut",
        description="Date de début de l'élément",
        examples=["1538352000000"],
    )
    cid_text: Optional[str] = Field(
        None,
        alias="cidText",
        description="Chronical ID du texte",
        examples=["LEGITEXT000006070721"],
    )
    id_parent: Optional[str] = Field(
        None,
        alias="idParent",
        description="Identifiant unique du parent de l'élément",
        examples=["LEGISCTA000032008380"],
    )
    id: Optional[str] = Field(
        None,
        description="Identifiant unique de l'élément",
        examples=["LEGIARTI000036829833"],
    )
    cid_parent: Optional[str] = Field(
        None,
        alias="cidParent",
        description="Chronical ID du parent de l'élément",
        examples=["LEGISCTA000032008380"],
    )
    path: Optional[str] = Field(
        None,
        description="Chemin représentant l'arborescence de l'élément dans le texte",
        examples=[
            "LEGITEXT000006070721/LEGISCTA000006090271/LEGISCTA000006118032/LEGISCTA000032006712/LEGISCTA000006136341/LEGISCTA000006150237/LEGISCTA000032008378/LEGISCTA000032008380/LEGIARTI000006436355"
        ],
    )
    nature: Optional[Nature] = Field(
        None, description="Nature/type du texte", examples=["CODE"]
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID de l'élément", examples=["LEGIARTI000036829833"]
    )
    date_fin: Optional[datetime] = Field(
        None,
        alias="dateFin",
        description="Date de fin de l'élément",
        examples=["1538352000000"],
    )
    sens: Optional[str] = Field(None, description="Sens du Lien", examples=["cible"])
    name: Optional[str] = Field(
        None, description="Nom/titre/numéro de l'élément", examples=["1145"]
    )


class DocsAdminsListRequest(BaseModel):
    years: Optional[list[str]] = Field(
        None, description="Liste des années à filtrer", examples=[[2016, 2017]]
    )


class Theme(BaseModel):
    libelle: Optional[str] = Field(
        None, description="Libellé", examples=["Calendrier des négociations"]
    )
    code: Optional[str] = Field(None, description="Code", examples=["123"])
    groupe: Optional[str] = Field(None, description="Groupe", examples=["10"])


class CodeConsultWithAncienId(BaseModel):
    ancien_id: Optional[str] = Field(
        None,
        alias="ancienId",
        description="Ancien Id afin de consulter un code",
        examples=["CASSURAL"],
    )


class CirculaireConsultRequest(BaseModel):
    searched_string: Optional[str] = Field(
        None,
        alias="searchedString",
        description="Texte de la recherche ayant aboutie à la consultation du texte",
        examples=["constitution 1958"],
    )
    id: str = Field(..., description="Identifiant de la circulaire", examples=["44128"])


class ArticleCidRequest(BaseModel):
    cid: str = Field(
        ..., description="Chronical ID de l'article", examples=["LEGIARTI000006307920"]
    )


class Sort1(Enum):
    publication_date_asc = "PUBLICATION_DATE_ASC"
    publication_date_desc = "PUBLICATION_DATE_DESC"
    signature_date_desc = "SIGNATURE_DATE_DESC"
    signature_date_asc = "SIGNATURE_DATE_ASC"
    id_asc = "ID_ASC"
    id_desc = "ID_DESC"


class Nature2(Enum):
    loi = "LOI"
    ordonnance = "ORDONNANCE"
    decret = "DECRET"
    decret_loi = "DECRET_LOI"
    arrete = "ARRETE"
    constitution = "CONSTITUTION"
    decision = "DECISION"
    convention = "CONVENTION"
    declaration = "DECLARATION"
    accord_fonction_publique = "ACCORD_FONCTION_PUBLIQUE"


class BoccConsultRequest(BaseModel):
    for_global_bocc: Optional[bool] = Field(None, alias="forGlobalBocc")
    id: Optional[str] = Field(None, examples=["boc_20200028_0001_p000.pdf"])


class Action(Enum):
    creation = "CREATION"
    codification = "CODIFICATION"
    modification = "MODIFICATION"
    transfert = "TRANSFERT"
    abrogation = "ABROGATION"
    annulation = "ANNULATION"
    peremption = "PEREMPTION"
    disjonction = "DISJONCTION"
    rectification = "RECTIFICATION"
    substitution = "SUBSTITUTION"
    deplace = "DEPLACE"
    versement = "VERSEMENT"
    denonciation = "DENONCIATION"
    remplacement = "REMPLACEMENT"
    extension = "EXTENSION"
    elargissement = "ELARGISSEMENT"


class StreamingResponseBody(BaseModel):
    pass


class KaliTextConsultRequest(BaseModel):
    searched_string: Optional[str] = Field(
        None,
        alias="searchedString",
        description="Texte de la recherche ayant aboutie à la consultation du texte",
        examples=["constitution 1958"],
    )
    id: str = Field(
        ...,
        description="Identifiant du texte ou d'un de ses éléments enfants (section/article)",
        examples=["KALITEXT000005677408"],
    )


class ArticleIdEliOrAliasRequest(BaseModel):
    id_eli_or_alias: str = Field(
        ...,
        alias="idEliOrAlias",
        description="ID Eli ou alias de l'article",
        examples=["/eli/decret/2021/7/13/PRMD2117108D/jo/article_1"],
    )


class FileMetadata(BaseModel):
    path_to_file: Optional[str] = Field(
        None,
        alias="pathToFile",
        description="Chemin relatif vers le fichier",
        examples=["/JOEA/2016/1230/joe_20161230_0303_c000.pdf.sig"],
    )
    file_name: Optional[str] = Field(
        None,
        alias="fileName",
        description="Nom du fichier",
        examples=["joe_20161230_0303_c000.pdf.sig"],
    )
    display_size: Optional[str] = Field(
        None,
        alias="displaySize",
        description="Taille du fichier avec son unité",
        examples=["586 Ko"],
    )
    id: Optional[str] = Field(
        None,
        description="Identifiant du fichier dans la base de données",
        examples=["joe_20161230_0303_c000.pdf.sig"],
    )
    complement_number: Optional[str] = Field(
        None,
        alias="complementNumber",
        description="Numéro complémentaire pour le fonds JORF",
    )
    date_publi: Optional[datetime] = Field(
        None,
        alias="datePubli",
        description="Date de publication",
        examples=["1483056000000"],
    )
    origine: Optional[str] = Field(
        None, description="Origine du fichier", examples=["JOE_INAP"]
    )
    size: Optional[int] = Field(
        None, description="Taille du fichier en octets", examples=[600055]
    )
    type: Optional[str] = Field(None, description="Type de fichier", examples=["joe"])
    num: Optional[str] = Field(
        None, description="Numéro du JO pour le fonds JORF", examples=["0303"]
    )


class ModificationDTO(BaseModel):
    modificateur: Optional[ModificateurDTO] = Field(
        None, description="Elément ayant apporté la modification"
    )
    type: Optional[Action] = Field(
        None, description="Type de modification", examples=["TRANSFERT"]
    )


class SearchCanonicalArticleVersionResponse(BaseModel):
    article_versions: Optional[list[ArticleVersion]] = Field(
        None, alias="articleVersions", description="Liste des versions d'articles"
    )


class Attachment(BaseModel):
    title: Optional[str] = Field(None, description="Titre")
    name: Optional[str] = Field(None, description="Nom")
    language: Optional[str] = Field(None, description="Langue", examples=["fr"])
    author: Optional[str] = Field(None, description="Auteur")
    keywords: Optional[str] = Field(None, description="Mots clés")
    date: Optional[datetime] = Field(
        None, description="Date", examples=["1540986060000"]
    )
    content: Optional[str] = Field(None, description="Contenu du fichier textuel")
    content_length: Optional[int] = Field(
        None, description="Taille du contenu", examples=[5503]
    )
    content_type: Optional[str] = Field(
        None,
        description="Type de fichier",
        examples=[
            "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
        ],
    )


class SameNumArticleRequest(BaseModel):
    date: str = Field(..., description="Date de référence", examples=["2021-04-15"])
    article_cid: str = Field(
        ...,
        alias="articleCid",
        description="Chronical ID de l'article",
        examples=["LEGIARTI000006419319"],
    )
    text_cid: str = Field(
        ...,
        alias="textCid",
        description="Chronical ID du texte",
        examples=["LEGITEXT000006070721"],
    )
    article_num: str = Field(
        ..., alias="articleNum", description="Numéro de l'article", examples=["16"]
    )


class ServicePublicLinksArticleRequest(BaseModel):
    article_cid: Optional[str] = Field(
        None,
        alias="articleCid",
        description="Identifiant chanonical de l'article",
        examples=["LEGIARTI000006580563"],
    )
    fond: Optional[str] = Field(
        None, description="Fond de consultation", examples=["JORF"]
    )


class LiensRelatifsDTO(BaseModel):
    cid_text: Optional[str] = Field(
        None,
        alias="cidText",
        description="Chronical ID du texte de l'élément lié",
        examples=["JORFTEXT000000869867"],
    )
    id: Optional[str] = Field(
        None,
        description="Identifiant de l'élément lié",
        examples=["LEGIARTI000033012294"],
    )
    cid_parent: Optional[str] = Field(
        None,
        alias="cidParent",
        description="Chronical ID du parent de l'élément lié. (Renseigné si besoin pour créer le lien vers l'élément)",
    )
    date_vigeur: Optional[datetime] = Field(
        None,
        alias="dateVigeur",
        description="Date pour création du lien",
        examples=["1470787200000"],
    )
    nature: Optional[Nature] = Field(
        None, description="Nature de texte de l'élément lié", examples=["CODE"]
    )
    name: Optional[str] = Field(
        None,
        description="Nom de l'élément lié",
        examples=["Code du travail - art. L5143-1 (V)"],
    )


class MapStringSuggestValue(RootModel[Optional[dict[str, SuggestValue]]]):
    root: Optional[dict[str, SuggestValue]] = None


class KaliContConsultRequest(BaseModel):
    searched_string: Optional[str] = Field(
        None,
        alias="searchedString",
        description="Texte de la recherche ayant aboutie à la consultation du texte",
        examples=["constitution 1958"],
    )
    id: str = Field(
        ...,
        description="Identifiant de la convention collective ou son numéro IDCC",
        examples=["KALICONT000005635384"],
    )


class SuggestAccoValue(BaseModel):
    siret: Optional[str] = Field(None, description="SIRET")
    raison_sociale: Optional[str] = Field(
        None, alias="raisonSociale", description="Raison sociale"
    )


class ArticleDTO(BaseModel):
    date_debut: Optional[datetime] = Field(
        None,
        alias="dateDebut",
        description="Date de début de la version de l'article",
        examples=["961632000000"],
    )
    id_text: Optional[str] = Field(
        None,
        alias="idText",
        description="Identifiant du texte de l'article",
        examples=["LEGITEXT000006072665"],
    )
    name: Optional[str] = Field(
        None,
        description="Nom de l'article (concaténation titre texte + num article)",
        examples=["Code de la santé publique - art. L2211-1 (V)"],
    )
    id: Optional[str] = Field(
        None, description="Identifiant de l'article", examples=["LEGIARTI000006687518"]
    )
    modifications: Optional[list[ModificationDTO]] = Field(
        None,
        description="Liste des modifications sur le texte (Utilisée pour les anciens textes)",
    )
    nature: Optional[Nature] = Field(
        None, description="Nature du texte de l'article", examples=["CODE"]
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID de l'article (Non utilisé)"
    )
    date_fin: Optional[datetime] = Field(
        None,
        alias="dateFin",
        description="Date de fin de la version de l'article",
        examples=["32472144000000"],
    )


class SuggestPdcRequest(BaseModel):
    search_text: Optional[str] = Field(
        None, alias="searchText", description="Texte à rechercher", examples=["mariage"]
    )
    origin: Optional[str] = None
    fond: Optional[str] = None


class MapStringSuggestAccoValue(RootModel[Optional[dict[str, SuggestAccoValue]]]):
    root: Optional[dict[str, SuggestAccoValue]] = None


class LegislaturesListResponse(BaseModel):
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    legislatures: Optional[list[Legislature]] = Field(
        None, description="Liste des législatures"
    )


class ArticleConsultWithIdAndNum(BaseModel):
    id: Optional[str] = Field(
        None, description="ID du LEGITEXT cible", examples=["LEGITEXT000006075116"]
    )
    num: Optional[str] = Field(
        None, description="Numéro de l'article cible", examples=["5-8"]
    )


class DebatParlementaireConsultRequest(BaseModel):
    id: str = Field(
        ...,
        description="Identifiant du débat parlementaire",
        examples=["AN_2020-090.pdf"],
    )


class StructureLienSection(BaseModel):
    date_debut: Optional[datetime] = Field(None, alias="dateDebut")
    renvoi_num: Optional[str] = Field(None, alias="renvoiNum")
    etat: Optional[str] = None
    id: Optional[str] = None
    titre: Optional[str] = None
    commentaire: Optional[str] = None
    renvoi: Optional[str] = None
    cid: Optional[str] = None
    date_fin: Optional[datetime] = Field(None, alias="dateFin")
    url: Optional[str] = None
    ordre: Optional[int] = None


class JorfConsultRequest(BaseModel):
    searched_string: Optional[str] = Field(
        None,
        alias="searchedString",
        description="Texte de la recherche ayant aboutie à la consultation du texte",
        examples=["constitution 1958"],
    )
    text_cid: str = Field(
        ...,
        alias="textCid",
        description="Chronical ID de l'élément",
        examples=["JORFTEXT000033736934"],
    )


class GlobalBoccListRequest(BaseModel):
    id_global_bocc: Optional[str] = Field(
        None, alias="idGlobalBocc", examples=["CCO20190051"]
    )
    sort_value: Optional[str] = Field(
        None, alias="sortValue", examples=["BOCC_SORT_ASC"]
    )
    search_for_single_global_bocc: Optional[bool] = Field(
        None, alias="searchForSingleGlobalBocc"
    )
    interval_publication: Optional[str] = Field(
        None, alias="intervalPublication", examples=["01/01/2020 > 31/01/2020"]
    )
    page_size: int = Field(
        ...,
        alias="pageSize",
        description="Nombre de résultats par page (max 100)",
        examples=[10],
    )
    page_number: int = Field(
        ...,
        alias="pageNumber",
        description="Numéro de la page à consulter",
        examples=[1],
    )


class Facet(BaseModel):
    field: Optional[str] = Field(
        None,
        description="Nom du champ représentant la facette",
        examples=["natureJuridiction"],
    )
    childs: Optional[dict[str, Facet]] = Field(
        None,
        description="Liste au format map des éléments enfants d'un élément particulier d'une facette ainsi que le nombre de résultats associés. La clé permet de déterminer le parent de cette liste dans les libellés values.",
        examples=[{"TRIBUNAL_ADMINISTATIF": {"values": {"Bordeaux": 2, "Lille": 8}}}],
    )
    total_element: Optional[int] = Field(
        None, alias="totalElement", description="1560", examples=[1560]
    )
    values: Optional[dict[str, int]] = Field(
        None,
        description="Liste au format map des libellés d'une facette ainsi que le nombre de résultats associés",
        examples=[
            {"COURS_COMPTES": 3295, "TRIBUNAL_ADMINISTATIF": 10, "COURS_APPEL": 35}
        ],
    )
    facet_elem: Optional[str] = Field(
        None,
        alias="facetElem",
        description="Nom de la facette",
        examples=["JURIDICTION_NATURE"],
    )


class SearchCanonicalVersionResponse(BaseModel):
    date_debut: Optional[str] = Field(
        None, alias="dateDebut", description="Date de début"
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID du texte", examples=["LEGITEXT000006070721"]
    )
    date_fin: Optional[str] = Field(None, alias="dateFin", description="Date de fin")


class EsTextBocc(BaseModel):
    idccs: Optional[list[str]] = None
    texte_date: Optional[datetime] = Field(None, alias="texteDate")
    file_name: Optional[str] = Field(None, alias="fileName")
    display_size: Optional[str] = Field(None, alias="displaySize")
    entete_title: Optional[str] = Field(None, alias="enteteTitle")
    id_main_bocc: Optional[str] = Field(None, alias="idMainBocc")
    path_file: Optional[str] = Field(None, alias="pathFile")
    num_ann: Optional[int] = Field(None, alias="numAnn")
    department: Optional[str] = None
    title: Optional[str] = None


class ChronoLegiArticleRequest(BaseModel):
    text_cid: str = Field(
        ...,
        alias="textCid",
        description="Chronical ID du texte",
        examples=["LEGITEXT000006070721"],
    )
    element_cid: str = Field(
        ...,
        alias="elementCid",
        description="Chronical ID de l'article",
        examples=["LEGIARTI000006070721"],
    )


class DatesWithNoJoResponse(BaseModel):
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    lst_date_disabled: Optional[list[datetime]] = Field(
        None,
        alias="lstDateDisabled",
        description="Liste des dates",
        examples=[[-3187209600000, -3187123200000, -3187036800000]],
    )


class Nomenclature(BaseModel):
    arbo: Optional[str] = Field(None, description="arborescent")
    parent: Optional[str] = Field(None, description="id du parent du jurinome")
    titre_juritext: Optional[str] = Field(
        None, alias="titreJuritext", description="titre du juritext"
    )
    ref_injection: Optional[str] = Field(
        None,
        alias="refInjection",
        description="Référence technique permettant d'identifier la date d'injection",
    )
    id: Optional[str] = Field(None, description="id du jurinome")
    niveau: Optional[int] = Field(None, description="nuveau du jurinome")
    id_tech_injection: Optional[str] = Field(
        None,
        alias="idTechInjection",
        description="Identifiant technique de l'élément injecté",
    )
    libelle_arbo: Optional[str] = Field(
        None, alias="libelleArbo", description="le libelle de l'arborescence"
    )
    feuille: Optional[bool] = Field(None, description="feuille")
    libelle_niveau: Optional[str] = Field(
        None, alias="libelleNiveau", description="le libelle du jurinome"
    )
    id_juritext: Optional[str] = Field(
        None, alias="idJuritext", description="id du juritext"
    )


class DetailContext(BaseModel):
    x_path: Optional[str] = Field(
        None,
        alias="xPath",
        description="Chemin pour arriver à l'élément dans le XML",
        examples=["/ARTICLE/CONTEXTE/TEXTE/TM/TM/TM/TM/TM/TM/TITRE_TM"],
    )
    debut: Optional[str] = Field(
        None, description="Date de début", examples=["1979-07-01"]
    )
    id: Optional[str] = Field(
        None, description="Identifiant technique", examples=["LEGISCTA000006179574"]
    )
    titre: Optional[str] = Field(
        None, description="Titre", examples=["2e Sous-section : Revenu global"]
    )
    etat: Optional[str] = Field(
        None, description="Etat juridique", examples=["VIGUEUR"]
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID", examples=["LEGISCTA000006179574"]
    )
    fin: Optional[str] = Field(None, description="Date de fin", examples=["2999-01-01"])


SearchCanonicalVersionRequest = SearchNearestVersionRequest


class Bodmr(BaseModel):
    texts: Optional[BodmrTexts] = None
    ref_injection: Optional[str] = Field(
        None,
        alias="refInjection",
        description="Référence technique permettant d'identifier la date d'injection",
    )
    id: Optional[str] = Field(None, description="Identifiant unique")
    id_tech_injection: Optional[str] = Field(
        None,
        alias="idTechInjection",
        description="Identifiant technique de l'élément injecté",
    )


class JuriPlanClassementRequest(BaseModel):
    search_by_niveau: Optional[bool] = Field(
        None,
        alias="searchByNiveau",
        description="recherche par niveau",
        examples=[False],
    )
    id: Optional[str] = Field(
        None, description="id du JURINOME", examples=["JURINOME000007644451"]
    )
    libelle: Optional[str] = Field(
        None, description="id du JURINOME", examples=["procedure civile"]
    )
    niveau: Optional[int] = Field(
        None, description="niveau ou nous nous trouvons", examples=[0]
    )
    page: Optional[int] = Field(None, description="la requete ELK", examples=[1])
    search_suggest: Optional[bool] = Field(
        None,
        alias="searchSuggest",
        description="recherche par suggestion",
        examples=[False],
    )
    fond: Optional[str] = Field(
        None, description="le fond a rechercher", examples=["juri"]
    )


class Syndicat(BaseModel):
    libelle: Optional[str] = Field(None, description="Libellé", examples=["CFDT"])
    code: Optional[str] = Field(None, description="Code", examples=["3"])


class Dossier(BaseModel):
    libelle_texte: Optional[str] = Field(
        None, alias="libelleTexte", description="Libellé", examples=["Projet de loi"]
    )
    id_texte: Optional[str] = Field(None, alias="idTexte", description="Identifiant")
    contenu_dossier: Optional[str] = Field(
        None, alias="contenuDossier", description="Contenu html du dossier"
    )


class ParentChronoDTO(BaseModel):
    date_debut: Optional[datetime] = Field(
        None,
        alias="dateDebut",
        description="Date de début de la version du noeud impactée",
        examples=["1475280000000"],
    )
    cid_text: Optional[str] = Field(
        None,
        alias="cidText",
        description="Chronical ID du texte",
        examples=["LEGITEXT000006070721"],
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID de l'élément", examples=["LEGISCTA000032008380"]
    )
    id: Optional[str] = Field(
        None,
        description="Identifiant unique de l'élément",
        examples=["LEGISCTA000032008380"],
    )
    nature: Optional[Nature] = Field(
        None, description="Nature/type du texte", examples=["CODE"]
    )
    articles_cibles: Optional[dict[str, CibleChronoDTO]] = Field(
        None,
        alias="articlesCibles",
        description="Map listant les articles ciblés par les modifications. La clé correspond à l'ID de l'article cible.",
    )
    texte_cible: Optional[CibleChronoDTO] = Field(
        None,
        alias="texteCible",
        description="Identifiant du texte, si la modification s'applique directement au niveau du texte (modification du titre)",
    )
    sections_cibles: Optional[dict[str, CibleChronoDTO]] = Field(
        None,
        alias="sectionsCibles",
        description="Map listant les sections ciblées par les modifications. La clé correspond à l'ID de la section cible.",
    )
    name: Optional[str] = Field(
        None, description="Nom/titre du parent", examples=["Paragraphe 1 : La capacité"]
    )


class SuggestResponse(BaseModel):
    total_result_number: Optional[int] = Field(None, alias="totalResultNumber")
    results: Optional[dict[str, dict[str, SuggestValue]]] = Field(
        None,
        description="Liste des suggestions retournées. La clé représente l'id du texte/section/article",
    )
    execution_time: Optional[int] = Field(None, alias="executionTime")


class DatePeriod(BaseModel):
    start: Optional[datetime] = Field(
        None, description="Date de début", examples=["2016-01-01"]
    )
    end: Optional[datetime] = Field(
        None, description="Date de fin", examples=["2016-12-31"]
    )


class TexteSommaire(BaseModel):
    autre_resume: Optional[str] = Field(
        None, alias="autreResume", description="Autre résumé"
    )
    id: Optional[str] = Field(None, description="Identifiant")
    abstrats: Optional[str] = Field(None, description="Abstracts")
    resume_principal: Optional[str] = Field(
        None, alias="resumePrincipal", description="Résumé principal"
    )


class ConsultDateRequest(BaseModel):
    year: Optional[int] = Field(None, description="Année", examples=[2019])
    month: Optional[int] = Field(None, description="Mois", examples=[1])
    day_of_month: Optional[int] = Field(
        None, alias="dayOfMonth", description="Jour", examples=[1]
    )


class LienTxt(BaseModel):
    autorite: Optional[str] = Field(None, description="Autorité lié au texte")
    etat: Optional[str] = Field(None, description="Etat juridique du texte")
    id: Optional[str] = Field(None, description="Identifiant du texte")
    titre: Optional[str] = Field(None, description="Titre")
    date_modif: Optional[datetime] = Field(
        None, alias="dateModif", description="Dernière date de modification du texte"
    )
    ministere: Optional[str] = Field(None, description="Ministère lié au texte")
    emetteur: Optional[str] = Field(None, description="Émetteur")
    nature: Optional[str] = Field(None, description="Nature")
    num_sequence: Optional[int] = Field(
        None, alias="numSequence", description="Numéro de séquence"
    )
    ordre: Optional[int] = Field(None, description="Numéro d'ordre")


class JorfContConsultRequest(BaseModel):
    page_size: Optional[int] = Field(
        None,
        alias="pageSize",
        description="Nombre d'éléments par page (max 100)",
        examples=[10],
    )
    end: Optional[ConsultDateRequest] = Field(
        None, description="Date de fin de recherche du conteneur"
    )
    search_text: Optional[str] = Field(
        None, alias="searchText", description="Texte à rechercher", examples=["mariage"]
    )
    id: Optional[str] = Field(
        None,
        description="identifiant du conteneur JORF recherché",
        examples=["JORFCONT000022470431"],
    )
    page_number: Optional[int] = Field(
        None,
        alias="pageNumber",
        description="Numéro de la page à consulter",
        examples=[1],
    )
    start: Optional[ConsultDateRequest] = Field(
        None, description="Date de début de recherche du conteneur"
    )
    date: Optional[datetime] = Field(
        None, description="Date de référence", examples=["1538352000000"]
    )
    num: Optional[str] = Field(
        None, description="numéro de JORF recherché", examples=["0022"]
    )
    highlight_activated: Optional[bool] = Field(
        None,
        alias="highlightActivated",
        description="Activer/Désactiver le highlight, dans la réponse, du texte recherché",
        examples=[True],
    )


class LienCitation(BaseModel):
    date_debut: Optional[datetime] = Field(None, alias="dateDebut")
    parent_cid: Optional[str] = Field(None, alias="parentCid")
    nature_text: Optional[str] = Field(
        None, alias="natureText", description="Nature du texte lié", examples=["LOI"]
    )
    link_type: Optional[str] = Field(
        None, alias="linkType", description="Type de lien", examples=["MODIFIE"]
    )
    date_publi: Optional[datetime] = Field(None, alias="datePubli")
    article_num: Optional[str] = Field(
        None, alias="articleNum", description="Numéro de l'article lié", examples=["53"]
    )
    text_cid: Optional[str] = Field(
        None,
        alias="textCid",
        description="Chronical ID du texte lié",
        examples=["JORFTEXT000030978561"],
    )
    link_orientation: Optional[str] = Field(
        None,
        alias="linkOrientation",
        description="Sens de la modification",
        examples=["cible"],
    )
    text_title: Optional[str] = Field(
        None,
        alias="textTitle",
        description="Titre du texte lié",
        examples=["LOI n°2015-990 du 6 août 2015 - art. 53 (V)"],
    )
    article_id: Optional[str] = Field(
        None,
        alias="articleId",
        description="Identifiant de l'article lié",
        examples=["LEGIARTI000032930490"],
    )
    num_texte: Optional[str] = Field(None, alias="numTexte")


class DossierLegislatifRequest(BaseModel):
    id: str = Field(
        ...,
        description="Identifiant du dossier législatif",
        examples=["JORFDOLE000038049286"],
    )


class CodeListResult(BaseModel):
    date_debut: Optional[str] = Field(
        None,
        alias="dateDebut",
        description="Date de début",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    titre: Optional[str] = Field(
        None, description="Titre du code", examples=["Code civil"]
    )
    etat: Optional[str] = Field(
        None, description="Etat juridique", examples=["VIGUEUR"]
    )
    id: Optional[str] = Field(
        None, description="Identifiant unique", examples=["LEGITEXT000006070721"]
    )
    last_update: Optional[str] = Field(
        None,
        alias="lastUpdate",
        description="Dernière date de mise à jour",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    pdf_file_size: Optional[str] = Field(None, alias="pdfFileSize")
    pdf_file_path: Optional[str] = Field(None, alias="pdfFilePath")
    cid: Optional[str] = Field(
        None, description="Chronical ID", examples=["LEGITEXT000006070721"]
    )
    date_fin: Optional[str] = Field(
        None,
        alias="dateFin",
        description="Date de fin",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    pdf_file_name: Optional[str] = Field(None, alias="pdfFileName")


class TypeRecherche(Enum):
    un_des_mots = "UN_DES_MOTS"
    exacte = "EXACTE"
    tous_les_mots_dans_un_champ = "TOUS_LES_MOTS_DANS_UN_CHAMP"
    aucun_des_mots = "AUCUN_DES_MOTS"
    aucune_correspondance_a_cette_expression = (
        "AUCUNE_CORRESPONDANCE_A_CETTE_EXPRESSION"
    )


class CritereDTO(BaseModel):
    proximite: Optional[int] = Field(
        None,
        description="Proximité maximum entre les mots du champ valeur. La proximité représente la distance maximale, en mots, entre deux termes recherchés.",
        examples=[2],
    )
    valeur: str = Field(
        ..., description="Mot(s)/expression recherchés", examples=["dispositions"]
    )
    criteres: Optional[list[CritereDTO]] = Field(
        None,
        description="Sous-critère/Sous-groupe de critères",
        examples=[
            [
                {"valeur": "soins", "operateur": "ET", "typeRecherche": "UN_DES_MOTS"},
                {
                    "proximite": "3",
                    "valeur": "fonction publique",
                    "operateur": "ET",
                    "typeRecherche": "TOUS_LES_MOTS_DANS_UN_CHAMP",
                },
            ]
        ],
    )
    operateur: Operateur = Field(
        ..., description="Opérateur entre les sous-critères", examples=["ET"]
    )
    type_recherche: TypeRecherche = Field(
        ...,
        alias="typeRecherche",
        description="Type de recherche effectuée",
        examples=["UN_DES_MOTS"],
    )


class CnilConsultWithAncienId(BaseModel):
    ancien_id: Optional[str] = Field(
        None,
        alias="ancienId",
        description="Ancien Id afin de consulter un texte du fond CNIL",
        examples=["MCN97020008A"],
    )


class SearchExtract(BaseModel):
    date_debut: Optional[str] = Field(
        None,
        alias="dateDebut",
        description="Date de début",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    title: Optional[str] = None
    date_version: Optional[str] = Field(
        None,
        alias="dateVersion",
        description="Date de la version (date de début ou date de fin)",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    id: Optional[str] = None
    values: Optional[list[str]] = None
    search_field_name: Optional[str] = Field(None, alias="searchFieldName")
    legal_status: Optional[LegalStatu] = Field(None, alias="legalStatus")
    type: Optional[str] = None
    date_fin: Optional[str] = Field(
        None,
        alias="dateFin",
        description="Date de fin",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    num: Optional[str] = None


class KaliContConsultIdccRequest(BaseModel):
    id: str = Field(
        ...,
        description="Identifiant de la convention collective ou son numéro IDCC",
        examples=["1261"],
    )


class LienModification(BaseModel):
    link_type: Optional[str] = Field(
        None, alias="linkType", description="Type de lien", examples=["MODIFIE"]
    )
    text_cid: Optional[str] = Field(
        None,
        alias="textCid",
        description="Chronical ID du texte lié",
        examples=["JORFTEXT000030978561"],
    )
    nature_text: Optional[str] = Field(
        None, alias="natureText", description="Nature du texte lié", examples=["LOI"]
    )
    date_publi_texte: Optional[str] = Field(
        None,
        alias="datePubliTexte",
        description="Date de publication du texte lié",
        examples=["2015-08-07"],
    )
    article_num: Optional[str] = Field(
        None, alias="articleNum", description="Numéro de l'article lié", examples=["53"]
    )
    text_title: Optional[str] = Field(
        None,
        alias="textTitle",
        description="Titre du texte lié",
        examples=["LOI n°2015-990 du 6 août 2015 - art. 53 (V)"],
    )
    link_orientation: Optional[str] = Field(
        None,
        alias="linkOrientation",
        description="Sens de la modification",
        examples=["cible"],
    )
    date_signa_texte: Optional[str] = Field(
        None,
        alias="dateSignaTexte",
        description="Date de signature du texte lié",
        examples=["2015-08-06"],
    )
    article_id: Optional[str] = Field(
        None,
        alias="articleId",
        description="Identifiant de l'article lié",
        examples=["LEGIARTI000032930490"],
    )
    date_debut_cible: Optional[str] = Field(
        None,
        alias="dateDebutCible",
        description="Date de début de la cible",
        examples=["2016-07-24"],
    )


class SearchTitle(BaseModel):
    title: Optional[str] = Field(None, description="Titre", examples=["Code civil"])
    legal_status: Optional[str] = Field(
        None, alias="legalStatus", description="Etat juridique de la version"
    )
    id: Optional[str] = Field(None, description="Identifiant du texte")
    start_date: Optional[str] = Field(
        None,
        alias="startDate",
        description="Date de début de la version",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    end_date: Optional[str] = Field(
        None,
        alias="endDate",
        description="Date de fin de la version",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID du texte", examples=["LEGITEXT000006070721"]
    )
    nature: Optional[str] = Field(None, description="Nature du texte")


class TexteReference(BaseModel):
    url: Optional[str] = Field(None, description="Lien vers le texte")
    texte_reference: Optional[str] = Field(
        None, alias="texteReference", description="Texte de référence"
    )


class LawDecreeConsultRequest(BaseModel):
    searched_string: Optional[str] = Field(
        None,
        alias="searchedString",
        description="Texte de la recherche ayant aboutie à la consultation du texte",
        examples=["constitution 1958"],
    )
    date: str = Field(..., description="Date de consultation", examples=["2021-04-15"])
    from_suggest: Optional[bool] = Field(None, alias="fromSuggest")
    text_id: str = Field(
        ...,
        alias="textId",
        description="Chronical ID du texte",
        examples=["LEGITEXT000006075116"],
    )


class SectionsRevisionArticleResponse(BaseModel):
    new_texts: Optional[list[ArticleDTO]] = Field(
        None, alias="newTexts", description="Liste des nouveaux textes liés à l'article"
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    old_texts: Optional[list[ArticleDTO]] = Field(
        None, alias="oldTexts", description="Liste des anciens textes liés à l'article"
    )


class Arborescence(BaseModel):
    liens: Optional[list[Lien]] = Field(
        None, description="Liste des liens de premier niveau"
    )
    niveaux: Optional[list[Niveau]] = Field(
        None, description="Liste des niveaux enfants"
    )


class AccoConsultRequest(BaseModel):
    searched_string: Optional[str] = Field(
        None,
        alias="searchedString",
        description="Texte de la recherche ayant aboutie à la consultation du texte",
        examples=["constitution 1958"],
    )
    id: str = Field(
        ...,
        description="Identifiant de l'accord d'entreprise",
        examples=["ACCOTEXT000037731479"],
    )


class StructureLienArticle(BaseModel):
    date_debut: Optional[datetime] = Field(None, alias="dateDebut")
    id: Optional[str] = None
    etat: Optional[str] = None
    date_fin: Optional[datetime] = Field(None, alias="dateFin")
    url: Optional[str] = None


class Sort2(Enum):
    title_asc = "TITLE_ASC"


class CodeListRequest(BaseModel):
    sort: Optional[Sort2] = Field(
        None, description="Ordre de tri", examples=["TITLE_ASC"]
    )
    page_size: int = Field(
        ...,
        alias="pageSize",
        description="Nombre de résultats par page (max 100)",
        examples=[10],
    )
    states: Optional[list[LegalStatu]] = Field(
        None,
        description="Liste des états juridiques à filtrer",
        examples=[["VIGUEUR", "ABROGE", "VIGUEUR_DIFF"]],
    )
    page_number: int = Field(
        ...,
        alias="pageNumber",
        description="Numéro de la page à consulter",
        examples=[1],
    )
    code_name: Optional[str] = Field(
        None,
        alias="codeName",
        description="Titre de code à chercher",
        examples=["Code civil"],
    )


class CnilConsultRequest(BaseModel):
    searched_string: Optional[str] = Field(
        None,
        alias="searchedString",
        description="Texte de la recherche ayant aboutie à la consultation du texte",
        examples=["constitution 1958"],
    )
    text_id: str = Field(
        ...,
        alias="textId",
        description="Identifiant du texte",
        examples=["CNILTEXT000017652361"],
    )


class JuriConsultWithAncienId(BaseModel):
    ancien_id: Optional[str] = Field(
        None,
        alias="ancienId",
        description="Ancien Id afin de consulter un texte des fonds JURI",
        examples=["JG_L_2006_09_000000269553"],
    )


class LegiConsultRequest(BaseModel):
    searched_string: Optional[str] = Field(
        None,
        alias="searchedString",
        description="Texte de la recherche ayant aboutie à la consultation du texte",
        examples=["constitution 1958"],
    )
    date: str = Field(..., description="Date de consultation", examples=["2021-04-15"])
    text_id: str = Field(
        ...,
        alias="textId",
        description="Chronical ID du texte",
        examples=["LEGITEXT000006075116"],
    )


class ServicePublicLinksArticleResponse(BaseModel):
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    liens_sp: Optional[dict[str, str]] = Field(
        None,
        alias="liensSP",
        description="Liste des liens service public associés à notre article",
    )


class LastNElementRequest(BaseModel):
    nb_element: int = Field(
        ..., alias="nbElement", description="Nombre de JO à remonter", examples=[5]
    )


class Tms(BaseModel):
    liens_txt: Optional[list[LienTxt]] = Field(
        None,
        alias="liensTxt",
        description="Liste des liens vers les textes de la section courante",
    )
    ordre: Optional[int] = Field(
        None, description="Numéro d'ordre de la section", examples=[3]
    )
    tms: Optional[list[Tms]] = Field(
        None, description="Liste des sections enfants de la section courante"
    )
    titre: Optional[str] = Field(None, description="Titre de la section")
    niv: Optional[int] = Field(None, description="Niveau de la section", examples=[1])


class JorfConsultWithNorRequest(BaseModel):
    nor: str = Field(..., description="NOR", examples=["MAEJ9830052D"])


class DossiersLegislatifsListResponse(BaseModel):
    legislature: Optional[Legislature] = Field(None, description="Législature associée")
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    dossiers_legislatifs: Optional[list[DossierLegislatifResult]] = Field(
        None,
        alias="dossiersLegislatifs",
        description="Liste des dossiers législatifs répondant à la requête",
    )


class QuestionsEcritesParlementairesListResponse(BaseModel):
    total_result_number: Optional[int] = Field(
        None,
        alias="totalResultNumber",
        description="Nombre total de résultats",
        examples=[20],
    )
    types_parlement: Optional[Facet] = Field(
        None,
        alias="typesParlement",
        description="Facette listant les types de parlement (Assemblée ou Sénat)",
    )
    results: Optional[list[EsQuestionsEcritesParlementaires]] = Field(
        None, description="Liste des résultats de la page"
    )
    display_size: Optional[str] = Field(
        None,
        alias="displaySize",
        description="Taille du fichier avec son unité",
        examples=["45,24 Ko"],
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )


class GetJorfContResponse(BaseModel):
    total_nb_result: Optional[int] = Field(
        None, alias="totalNbResult", description="Nombre de résultats", examples=[5]
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    containers: Optional[list[Conteneur]] = Field(
        None, description="Liste des N derniers conteneurs"
    )


class DossierLegislatif(BaseModel):
    legislature: Optional[Legislature] = Field(None, description="Législature")
    url: Optional[str] = Field(None, description="chemin relatif vers le fichier xml")
    id: Optional[str] = Field(
        None, description="Identifiant du dossier", examples=["JORFDOLE000028196681"]
    )
    titre: Optional[str] = Field(
        None,
        description="Titre du dossier legislatif",
        examples=[
            "LOI n° 2013-1279 du 29 décembre 2013 de finances rectificative pour 2013"
        ],
    )
    id_tech_injection: Optional[str] = Field(
        None,
        alias="idTechInjection",
        description="Identifiant technique de l'élément injecté",
    )
    expose_motif: Optional[str] = Field(
        None, alias="exposeMotif", description="Texte html des motifs"
    )
    nature: Optional[str] = Field(None, description="nature")
    date_derniere_modification: Optional[datetime] = Field(
        None,
        alias="dateDerniereModification",
        description="Date de dernière modification",
        examples=["1391990400000"],
    )
    type: Optional[str] = Field(None, description="type", examples=["LOI_PUBLIEE"])
    dossiers: Optional[list[Dossier]] = Field(None, description="Liste des dossiers")
    date_maj_echeancier: Optional[datetime] = Field(
        None,
        alias="dateMajEcheancier",
        description="Date de dernière modification de l'échéancier",
        examples=["1391990400000"],
    )
    ancien_id: Optional[str] = Field(
        None,
        alias="ancienId",
        description="Ancien ID",
        examples=["JORFDOLE000028196699"],
    )
    origine: Optional[str] = Field(None, description="Origine", examples=["JORF"])
    date_creation: Optional[datetime] = Field(
        None,
        alias="dateCreation",
        description="Date de création",
        examples=["1388361600000"],
    )
    echeancier: Optional[str] = Field(None, description="Echéancier")
    ref_injection: Optional[str] = Field(
        None,
        alias="refInjection",
        description="Référence technique permettant d'identifier la date d'injection",
    )
    arborescence: Optional[Arborescence] = Field(None, description="Arborescence")


class LODAListResult(BaseModel):
    date_debut: Optional[str] = Field(
        None,
        alias="dateDebut",
        description="Date de début",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    etat: Optional[str] = Field(
        None, description="Etat juridique", examples=["VIGUEUR"]
    )
    id: Optional[str] = Field(
        None, description="Identifiant unique", examples=["LEGITEXT000033280430"]
    )
    last_update: Optional[str] = Field(
        None,
        alias="lastUpdate",
        description="Date de dernière mise à jour",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    titre: Optional[str] = Field(
        None,
        description="Titre",
        examples=[
            "Ordonnance n° 2016-1406 du 20 octobre 2016 portant adaptation et simplification de la législation relative à l'Etablissement français du sang et aux activités liées à la transfusion sanguine"
        ],
    )
    dossiers_legislatifs: Optional[list[DossierLegislatif]] = Field(
        None, alias="dossiersLegislatifs", description="Liste des dossiers législatifs"
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID", examples=["JORFTEXT000033279563"]
    )
    date_fin: Optional[str] = Field(
        None,
        alias="dateFin",
        description="Date de fin",
        examples=["2021-04-15T16:49:47.707+0000"],
    )


class Circulaire(BaseModel):
    nor: Optional[str] = Field(
        None, description="Numéro NOR", examples=["MENV1829930J"]
    )
    ministeres_deposants: Optional[list[str]] = Field(
        None, alias="ministeresDeposants", description="Liste des ministères déposants"
    )
    utilisateur_deposant_ministere_code: Optional[int] = Field(
        None,
        alias="utilisateurDeposantMinistereCode",
        description="Code du ministère déposant",
        examples=[7],
    )
    etat: Optional[str] = Field(None, description="Etat", examples=["V"])
    relevant_date: Optional[datetime] = Field(None, alias="relevantDate")
    numero_cerfa: Optional[str] = Field(
        None, alias="numeroCerfa", description="Numéro CERFA"
    )
    resume: Optional[str] = Field(None, description="Résumé")
    taille_fichier_pdf: Optional[int] = Field(
        None,
        alias="tailleFichierPdf",
        description="Taille du fichier PDF en octets",
        examples=[644810],
    )
    date_opposabilite: Optional[datetime] = Field(
        None,
        alias="dateOpposabilite",
        description="Date de déclaration d'opposabilité",
        examples=["1543190400000"],
    )
    date_export: Optional[datetime] = Field(
        None,
        alias="dateExport",
        description="Date d'export",
        examples=["1543536000000"],
    )
    type_service: Optional[str] = Field(None, alias="typeService", examples=["oui"])
    ref_injection: Optional[str] = Field(
        None,
        alias="refInjection",
        description="Référence technique permettant d'identifier la date d'injection",
    )
    size_to_display: Optional[str] = Field(
        None,
        alias="sizeToDisplay",
        description="Taille du fichier PDF avec son unité",
        examples=["629,7 Ko"],
    )
    email_deposant: Optional[str] = Field(
        None, alias="emailDeposant", description="Email déposant"
    )
    mots_cles: Optional[list[str]] = Field(
        None,
        alias="motsCles",
        description="Liste des mots clés",
        examples=[["Enseignement, Education  et Sciences et techniques"]],
    )
    attachment: Optional[Attachment] = None
    opposable: Optional[str] = Field(
        None, description="Indique si la circulaire est opposable", examples=["O"]
    )
    mots_cles_libres: Optional[str] = Field(
        None,
        alias="motsClesLibres",
        description="Liste des mots clés libres",
        examples=["périscolaire ; accueils collectifs de mineurs ; Plan mercredi"],
    )
    nota: Optional[str] = Field(None, description="Nota")
    remplace: Optional[str] = Field(
        None,
        examples=[
            "À compter du 15 décembre 2017 : Instruction n° 225/DEF/TM/T du 29 mars 1995 (BOC, p. 1661 ; BOEM 404.3.3)."
        ],
    )
    annexes: Optional[str] = Field(None, description="Annexes", examples=["4"])
    attachment_name: Optional[str] = Field(
        None,
        alias="attachmentName",
        description="Nom du fichier PDF lié",
        examples=["cir_44128.pdf"],
    )
    id: Optional[str] = Field(None, description="Identifiant", examples=["44128"])
    titre: Optional[str] = Field(
        None,
        description="Titre de la circulaire",
        examples=["Instruction relative à la mise en oeuvre du Plan mercredi"],
    )
    numero_interne: Optional[str] = Field(
        None, alias="numeroInterne", description="Numéro interne", examples=["2018-139"]
    )
    id_tech_injection: Optional[str] = Field(
        None,
        alias="idTechInjection",
        description="Identifiant technique de l'élément injecté",
    )
    origine: Optional[str] = Field(None, description="Origine", examples=["CIRC"])
    attachment_url: Optional[str] = Field(
        None, alias="attachmentUrl", description="Chemin vers le fichier PDF"
    )
    date_signature: Optional[datetime] = Field(
        None,
        alias="dateSignature",
        description="Date de signature",
        examples=["1543190400000"],
    )
    textes_references: Optional[list[TexteReference]] = Field(
        None, alias="textesReferences", description="Liste des textes de référence"
    )
    signataire: Optional[str] = Field(
        None,
        description="Signataire",
        examples=[
            "A LAURENT, SG-MCAS, JP VINQUANT, DGCS et A BURSTIN, Directrice de la CNSA"
        ],
    )
    date_mise_application: Optional[datetime] = Field(
        None, alias="dateMiseApplication", description="Date de mise en application"
    )
    auteur: Optional[str] = Field(
        None,
        description="Auteur",
        examples=["Le ministre de l'éducation nationale et de la jeunesse"],
    )
    reference_publication_jo_bo: Optional[str] = Field(
        None,
        alias="referencePublicationJoBo",
        description="Référence de publication",
        examples=["7293"],
    )
    categories: Optional[list[str]] = Field(None, description="Liste des catégories")
    type_gouv: Optional[str] = Field(None, alias="typeGouv", examples=["oui"])
    date_depot: Optional[datetime] = Field(
        None, alias="dateDepot", description="Date de dépôt", examples=["1543449600000"]
    )
    destinataire: Optional[str] = Field(None, description="Destinataire")
    domaines: Optional[list[str]] = Field(
        None,
        description="Liste des domaines",
        examples=[["Jeunesse, sports, vie associative"]],
    )
    data: Optional[str] = Field(None, description="Contenu du fichier en base64")
    utilisateur_deposant_ministere: Optional[str] = Field(
        None,
        alias="utilisateurDeposantMinistere",
        description="Nom du ministère déposant",
        examples=["MEN - Education nationale"],
    )
    nota_html: Optional[str] = Field(
        None, alias="notaHtml", description="Texte HTML des notas"
    )


class BodmrListResponse(BaseModel):
    total_result_number: Optional[int] = Field(
        None,
        alias="totalResultNumber",
        description="Nombre de résultats",
        examples=[12],
    )
    years: Optional[Facet] = Field(
        None, description="Facette listant les années disponibles"
    )
    display_size: Optional[str] = Field(
        None,
        alias="displaySize",
        description="Taille du fichier avec son unité",
        examples=["45,24 Ko"],
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    pdf_metadatas: Optional[list[PdfMetadata]] = Field(
        None, alias="pdfMetadatas", description="Liste des metadata concernant les pdfs"
    )
    results: Optional[list[Bodmr]] = Field(
        None, description="Liste des résultats de la page"
    )


class Debat(BaseModel):
    date_parution: Optional[datetime] = Field(None, alias="dateParution")
    display_size: Optional[str] = Field(None, alias="displaySize")
    id: Optional[str] = None
    numero_parution: Optional[int] = Field(None, alias="numeroParution")
    id_tech_injection: Optional[str] = Field(None, alias="idTechInjection")
    origine: Optional[str] = None
    attachment_url: Optional[str] = Field(None, alias="attachmentUrl")
    annee_parution: Optional[int] = Field(None, alias="anneeParution")
    type_assemblee: Optional[str] = Field(None, alias="typeAssemblee")
    legislature: Optional[int] = None
    id_eli: Optional[str] = Field(None, alias="idEli")
    date_seance: Optional[datetime] = Field(None, alias="dateSeance")
    attachment: Optional[Attachment] = None
    session: Optional[str] = None
    ref_injection: Optional[str] = Field(None, alias="refInjection")
    data: Optional[str] = None
    path_to_file: Optional[str] = Field(None, alias="pathToFile")
    nom_session: Optional[str] = Field(None, alias="nomSession")


class ConventionsListResponse(BaseModel):
    total_result_number: Optional[int] = Field(
        None,
        alias="totalResultNumber",
        description="Nombre de résultats",
        examples=[12],
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    legal_status: Optional[Facet] = Field(
        None,
        alias="legalStatus",
        description="Facette listant les différents états juridiques",
    )
    results: Optional[list[ConventionsListResult]] = Field(
        None, description="Liste des résultats de la page"
    )
    type_texte: Optional[Facet] = Field(
        None,
        alias="typeTexte",
        description="Facette listant les différents type de Texte",
    )
    mote_cles: Optional[Facet] = Field(
        None, alias="moteCles", description="Facette listant les mots clés"
    )


class SuggestAccoResponse(BaseModel):
    total_result_number: Optional[int] = Field(None, alias="totalResultNumber")
    results: Optional[dict[str, dict[str, SuggestAccoValue]]] = Field(
        None, description="Liste des suggestions"
    )
    execution_time: Optional[int] = Field(None, alias="executionTime")


class ConsultCirculaireResponse(BaseModel):
    dereferenced: Optional[bool] = Field(
        None,
        description="Identifie si le contenu est référençable par les robots d'indexation",
        examples=[True],
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    circulaire: Optional[Circulaire] = Field(None, description="Circulaire")


class EsParutionBocc(BaseModel):
    texts: Optional[list[EsTextBocc]] = None
    ref_injection: Optional[str] = Field(None, alias="refInjection")
    global_bocc: Optional[EsGlobalBocc] = Field(None, alias="globalBocc")
    id: Optional[str] = None
    id_tech_injection: Optional[str] = Field(None, alias="idTechInjection")


class Context(BaseModel):
    nombre_version_parent: Optional[int] = Field(
        None,
        alias="nombreVersionParent",
        description="Nombre de versions existantes pour le parent",
        examples=[1],
    )
    longeur_chemin: Optional[int] = Field(
        None, alias="longeurChemin", description="Longueur du chemin", examples=[53]
    )
    titre_txt: Optional[list[DetailContext]] = Field(
        None,
        alias="titreTxt",
        description="Liste des versions de titres pour le texte parent",
    )
    titres_tm: Optional[list[DetailContext]] = Field(
        None, alias="titresTM", description="Liste des sections parentes de l'élément"
    )


class DocsAdminsListResponse(BaseModel):
    total_result_number: Optional[int] = Field(
        None,
        alias="totalResultNumber",
        description="Nombre de résultats",
        examples=[12],
    )
    results: Optional[list[DocumentAdministratif]] = Field(
        None, description="Liste des résultats de la page"
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    years: Optional[Facet] = Field(
        None, description="Facette listant les années disponibles"
    )


class CodeListResponse(BaseModel):
    total_result_number: Optional[int] = Field(
        None,
        alias="totalResultNumber",
        description="Nombre de résultats",
        examples=[12],
    )
    states: Optional[Facet] = Field(
        None, description="Facette listant les différents états juridiques"
    )
    results: Optional[list[CodeListResult]] = Field(
        None, description="Liste des résultats de la page"
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    code_names: Optional[Facet] = Field(
        None,
        alias="codeNames",
        description="Facette listant les titres des codes disponibles",
    )


class Accord(BaseModel):
    date_effet: Optional[datetime] = Field(
        None,
        alias="dateEffet",
        description="Date d'effet de l'accord",
        examples=["1539820800000"],
    )
    themes: Optional[list[Theme]] = Field(None, description="Liste des thèmes")
    conforme_version_integrale: Optional[bool] = Field(
        None,
        alias="conformeVersionIntegrale",
        description="Indique si l'accord consulté est conforme à la version intégrale",
        examples=[True],
    )
    date_maj: Optional[datetime] = Field(
        None,
        alias="dateMaj",
        description="Date de mise à jour",
        examples=["1542672000000"],
    )
    nature: Optional[str] = Field(None, description="Nature", examples=["ACCORD"])
    signataires: Optional[list[str]] = Field(
        None, description="Liste des signataires", examples=[["01"]]
    )
    date_diffusion: Optional[datetime] = Field(
        None,
        alias="dateDiffusion",
        description="Date de diffusion",
        examples=["1543968000000"],
    )
    date_texte: Optional[datetime] = Field(
        None, alias="dateTexte", description="Date du texte", examples=["1539820800000"]
    )
    relevant_date: Optional[datetime] = Field(None, alias="relevantDate")
    attachment: Optional[Attachment] = Field(
        None, description="Détail du fichier attaché"
    )
    titre_texte: Optional[str] = Field(
        None,
        alias="titreTexte",
        description="Titre du texte",
        examples=[
            "Un Protocole d'Accord relatif à l'Organisation de la Négociation Annuelle Obligatoire"
        ],
    )
    ref_injection: Optional[str] = Field(
        None,
        alias="refInjection",
        description="Référence technique permettant d'identifier la date d'injection",
    )
    url: Optional[str] = Field(None, description="Chemin vers le fichier xml")
    secteur: Optional[str] = Field(
        None,
        description="Secteur d'activité",
        examples=["Construction de véhicules automobiles"],
    )
    id: Optional[str] = Field(
        None, description="Identifiant", examples=["ACCOTEXT000037731479"]
    )
    code_idcc: Optional[str] = Field(None, alias="codeIdcc", description="IDCC")
    raison_sociale: Optional[str] = Field(
        None,
        alias="raisonSociale",
        description="Raison sociale",
        examples=["SAS G.P - GROUPE PILOTE"],
    )
    id_tech_injection: Optional[str] = Field(
        None,
        alias="idTechInjection",
        description="Identifiant technique de l'élément injecté",
    )
    origine: Optional[str] = Field(None, description="Origine", examples=["ACCO"])
    numero: Optional[str] = Field(
        None, description="Numéro de l'accord", examples=["T04418002188"]
    )
    date_fin: Optional[datetime] = Field(
        None, alias="dateFin", description="Date de fin", examples=["1543276800000"]
    )
    syndicats: Optional[list[Syndicat]] = Field(None, description="Liste des syndicats")
    attachement_url: Optional[str] = Field(
        None, alias="attachementUrl", description="Chemin vers le fichier attaché"
    )
    code_ape: Optional[str] = Field(
        None, alias="codeApe", description="Code APE", examples=["2910Z"]
    )
    adresses_postales: Optional[list[AdressePostale]] = Field(
        None, alias="adressesPostales", description="Liste des addresses postales"
    )
    file_size: Optional[str] = Field(
        None,
        alias="fileSize",
        description="Taille du fichier attaché avec son unité",
        examples=["17,5 Ko"],
    )
    date_depot: Optional[datetime] = Field(
        None, alias="dateDepot", description="Date de dépôt", examples=["1542326400000"]
    )
    code_unite_signataire: Optional[str] = Field(
        None,
        alias="codeUniteSignataire",
        description="Code du signataire",
        examples=["05"],
    )
    data: Optional[str] = Field(
        None, description="Contenu du fichier attaché en base64"
    )
    siret: Optional[str] = Field(None, description="SIRET", examples=["87280278000025"])


class Section(BaseModel):
    date_debut: Optional[datetime] = Field(None, alias="dateDebut")
    id: Optional[str] = None
    titre: Optional[str] = None
    liens_section: Optional[list[StructureLienSection]] = Field(
        None, alias="liensSection"
    )
    liens_article: Optional[list[StructureLienArticle]] = Field(
        None, alias="liensArticle"
    )
    commentaire: Optional[str] = None
    cid: Optional[str] = None
    date_fin: Optional[datetime] = Field(None, alias="dateFin")
    id_tech_injection: Optional[str] = Field(None, alias="idTechInjection")
    nota: Optional[str] = None
    liens_modification: Optional[list[Lien]] = Field(None, alias="liensModification")
    context: Optional[Context] = None
    nota_html: Optional[str] = Field(None, alias="notaHtml")
    ref_injection: Optional[str] = Field(None, alias="refInjection")


class ChampDTO(BaseModel):
    criteres: Optional[list[CritereDTO]] = Field(
        None,
        description="Liste des critères/groupes de critères de recherche pour ce champ",
    )
    operateur: Optional[Operateur] = Field(
        None, description="Opérateur entre les critères de recherche", examples=["ET"]
    )
    type_champ: Optional[TypeChamp] = Field(
        None,
        alias="typeChamp",
        description="Type de champ. Il est possible d'utiliser la valeur ALL pour rechercher dans tous les champs.",
        examples=["TITLE"],
    )


class GetTableResponse(BaseModel):
    total_nb_result: Optional[int] = Field(None, alias="totalNbResult")
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    tables: Optional[list[FileMetadata]] = Field(
        None, description="Liste des tables trouvées"
    )


class SearchNearestVersionResponse(BaseModel):
    title: Optional[SearchTitle] = Field(
        None, description="Données sur la version d'un texte"
    )
    section_title: Optional[str] = Field(
        None,
        alias="sectionTitle",
        description="Titre de la version de la section trouvée si une section est recherchée",
        examples=["Titre Ier : De la distinction des biens"],
    )


class RelatedLinksArticleResponse(BaseModel):
    liens_cite_par: Optional[list[LiensRelatifsDTO]] = Field(
        None,
        alias="liensCitePar",
        description="Liste des liens vers les éléments qui citent notre article",
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    liens_cite: Optional[list[LiensRelatifsDTO]] = Field(
        None,
        alias="liensCite",
        description="Liste des liens vers les éléments que notre article cite",
    )


class BoccTextsListResponse(BaseModel):
    idccs: Optional[Facet] = Field(
        None, description="Facette listant les IDCCs relatifs aux textes BOCC"
    )
    total_result_number: Optional[int] = Field(
        None, alias="totalResultNumber", description="Nombre total de résultats"
    )
    texts: Optional[list[EsTextBocc]] = Field(
        None, description="Liste des texts unitaires de la page"
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    departments: Optional[Facet] = Field(
        None, description="Facette listant les émetteurs des BOCC (AGR ou TRA)"
    )


class FiltreDTO(BaseModel):
    dates: Optional[DatePeriod] = Field(
        None, description="Période de dates dans le cas d'un filtre par période"
    )
    valeurs: Optional[list[str]] = Field(
        None,
        description="Liste des valeurs du filtre dans le cas d'un filtre textuel ou d'un filtre via option textuelle",
        examples=[["TRIBUNAL_ADMINISTATIF", "COURS_APPEL"]],
    )
    single_date: Optional[datetime] = Field(
        None,
        alias="singleDate",
        description="Date unique dans le cas d'un filtre par date",
        examples=["2016-01-01"],
    )
    facette: Optional[str] = Field(
        None,
        description="Nom de la facette => nom du filtre",
        examples=["JURIDICTION_NATURE"],
    )
    multi_valeurs: Optional[dict[str, list[str]]] = Field(
        None,
        alias="multiValeurs",
        description="Map des sous-valeur d'une valeur de filtre dans le cas d'un filtre par option texte. La clé doit être la valeur correspondante au parent dans la liste 'valeurs'",
        examples=[{"TRIBUNAL_ADMINISTATIF": ["Bordeaux", "Lille"]}],
    )


class SearchSection(BaseModel):
    title: Optional[str] = None
    date_version: Optional[str] = Field(
        None,
        alias="dateVersion",
        description="Date de version",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    id: Optional[str] = None
    legal_status: Optional[LegalStatu] = Field(None, alias="legalStatus")
    extracts: Optional[list[SearchExtract]] = None


class ConsultArticle(BaseModel):
    modificator_title: Optional[str] = Field(
        None,
        alias="modificatorTitle",
        description="Titre de l'élément modificateur de l'article",
        examples=["LOI n°2015-990 du 6 août 2015 - art. 53 (V)"],
    )
    condition_differe: Optional[str] = Field(
        None, alias="conditionDiffere", description="Condition differée"
    )
    infos_complementaires: Optional[str] = Field(
        None, alias="infosComplementaires", description="Informations complémentaires"
    )
    multiple_versions: Optional[bool] = Field(None, alias="multipleVersions")
    comporte_liens_sp: Optional[bool] = Field(
        None,
        alias="comporteLiensSP",
        description="Indique si l'article contient des liens du service-publique. Utiliser l'API servicePublicLinksArticle pour récupérer la liste des liens.",
        examples=[True],
    )
    etat: Optional[str] = Field(
        None, description="Etat juridique", examples=["VIGUEUR"]
    )
    dereferenced: Optional[bool] = Field(
        None,
        description="Identifie si le contenu est référençable par les robots d'indexation",
        examples=[True],
    )
    int_ordre: Optional[int] = Field(
        None,
        alias="intOrdre",
        description="Numéro indiquant l'ordre d'affichage",
        examples=[3],
    )
    nota: Optional[str] = Field(None, description="Nota")
    version_label: Optional[str] = Field(None, alias="versionLabel")
    infos_restructuration_branche: Optional[str] = Field(
        None,
        alias="infosRestructurationBranche",
        description="Informations restructuration de branche",
    )
    path: Optional[str] = Field(
        None,
        description="Chemin de l'article",
        examples=["/LEGISCTA000006107964/LEGIARTI000006791830"],
    )
    surtitre: Optional[str] = Field(None, description="Surtitre")
    nota_sections_aafficher: Optional[list[str]] = Field(
        None,
        alias="notaSectionsAafficher",
        description="Liste de nota section à afficher",
    )
    num: Optional[str] = Field(None, description="Numéro de l'article", examples=["52"])
    type: Optional[str] = Field(None, description="Type", examples=["AUTONOME"])
    content: Optional[str] = Field(None, description="Contenu HTML de l'article")
    date_debut: Optional[datetime] = Field(
        None, alias="dateDebut", description="Date de début de l'article"
    )
    lst_lien_citation: Optional[list[LienCitation]] = Field(
        None,
        alias="lstLienCitation",
        description="Liste des liens de citation. Toujours vide (voir propriété comporteLiens)",
    )
    modificator_date: Optional[str] = Field(
        None,
        alias="modificatorDate",
        description="Date de modification par l'élément modificateur",
        examples=["2016-07-25"],
    )
    id: Optional[str] = Field(
        None, description="Identifiant", examples=["LEGISCTA000006092887"]
    )
    article_version: Optional[str] = Field(
        None,
        alias="articleVersion",
        description="Version de l'article",
        examples=["2.0"],
    )
    infos_restructuration_branche_html: Optional[str] = Field(
        None,
        alias="infosRestructurationBrancheHtml",
        description="Texte HTML des informations restructuration de branche",
    )
    historique: Optional[str] = Field(None, description="Historique")
    comporte_liens: Optional[bool] = Field(
        None,
        alias="comporteLiens",
        description="Indique si l'article contient des liens de citation. Utiliser l'API relatedLinksArticle pour récupérer la liste des liens.",
        examples=[True],
    )
    date_fin: Optional[datetime] = Field(
        None, alias="dateFin", description="Date de fin de l'article"
    )
    modificator_cid: Optional[str] = Field(
        None,
        alias="modificatorCid",
        description="Chronical ID de l'élément modificateur de l'article",
        examples=["JORFTEXT000030978561"],
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID", examples=["LEGISCTA000006092887"]
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    renvoi: Optional[str] = None
    path_title: Optional[list[str]] = Field(
        None,
        alias="pathTitle",
        description="Titre des sections du chemin de l'article",
        examples=[["Partie législative", "Livre Ier : Le contrat"]],
    )
    lst_lien_modification: Optional[list[LienModification]] = Field(
        None, alias="lstLienModification", description="Liste des liens de modification"
    )
    infos_complementaires_html: Optional[str] = Field(
        None,
        alias="infosComplementairesHtml",
        description="Texte HTML des informations complémentaires",
    )


class LODAListRequest(BaseModel):
    sort: Optional[Sort1] = Field(
        None, description="Ordre de tri", examples=["PUBLICATION_DATE_ASC"]
    )
    legal_status: Optional[list[LegalStatu]] = Field(
        None,
        alias="legalStatus",
        description="Liste des états juridiques à filtrer",
        examples=[["VIGUEUR", "ABROGE", "VIGUEUR_DIFF"]],
    )
    page_number: int = Field(
        ...,
        alias="pageNumber",
        description="Numéro de la page à consulter",
        examples=[1],
    )
    natures: Optional[list[Nature2]] = Field(
        None,
        description="Liste des natures à filtrer",
        examples=[["LOI", "ORDONNANCE", "DECRET"]],
    )
    second_sort: Optional[Sort1] = Field(
        None,
        alias="secondSort",
        description="Ordre de tri",
        examples=["PUBLICATION_DATE_ASC"],
    )
    signature_date: Optional[DatePeriod] = Field(
        None, alias="signatureDate", description="Date ou période de signature"
    )
    page_size: int = Field(
        ...,
        alias="pageSize",
        description="Nombre de résultats par page (max 100)",
        examples=[10],
    )
    publication_date: Optional[DatePeriod] = Field(
        None, alias="publicationDate", description="Date ou période de publication"
    )


class ActionChronoDTO(BaseModel):
    action: Optional[Action] = Field(
        None, description="Action effectuée", examples=["MODIFICATION"]
    )
    parents: Optional[dict[str, ParentChronoDTO]] = Field(
        None,
        description="Map listant les noeuds parents sur lesquels les actions sont faites (texte, section..). La clé correspond à l'ID du parent.",
    )


class ArticleModificateurDTO(BaseModel):
    actions: Optional[dict[str, ActionChronoDTO]] = Field(
        None,
        description="Map listant les actions effectuées par cet article sur le texte. La clé correspond au type d'action.",
    )
    nature: Optional[Nature] = Field(
        None, description="Nature/type de l'article", examples=["CODE"]
    )
    id: Optional[str] = Field(
        None, description="ID de l'article", examples=["LEGIARTI000036828112"]
    )
    title: Optional[str] = Field(
        None,
        description="Titre de l'article modificateur (titre du texte + numéro article)",
        examples=["LOI n°2018-287 du 20 avril 2018 - art. 6"],
    )
    date_debut_cible: Optional[datetime] = Field(
        None,
        alias="dateDebutCible",
        description="Date de début de l'article",
        examples=["1538352000000"],
    )


class GetListPlanClassementJuriResponse(BaseModel):
    total_nb_result: Optional[int] = Field(
        None, alias="totalNbResult", description="Nombre de résultats", examples=[12]
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    list_plan_classement_juri: Optional[list[Nomenclature]] = Field(
        None, alias="listPlanClassementJuri"
    )


class ConsultDossierLegislatifResponse(BaseModel):
    dossier_legislatif: Optional[DossierLegislatif] = Field(
        None, alias="dossierLegislatif", description="Dossier législatif"
    )
    dereferenced: Optional[bool] = Field(
        None,
        description="Identifie si le contenu est référençable par les robots d'indexation",
        examples=[True],
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )


class ConsultAccoResponse(BaseModel):
    acco: Optional[Accord] = Field(None, description="Accord d'entreprise")
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    dereferenced: Optional[bool] = Field(
        None,
        description="Identifie si le contenu est référençable par les robots d'indexation",
        examples=[True],
    )


class BoccGlobalListResponse(BaseModel):
    total_result_number: Optional[int] = Field(None, alias="totalResultNumber")
    results: Optional[list[EsParutionBocc]] = None
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    total_result_bocc: Optional[int] = Field(None, alias="totalResultBocc")
    total_result_idcc: Optional[int] = Field(None, alias="totalResultIdcc")


class StructureTxt(BaseModel):
    liens: Optional[list[LienTxt]] = Field(
        None,
        description="Liste des liens vers les textes de premier niveau dans le conteneur",
    )
    tms: Optional[list[Tms]] = Field(
        None, description="Liste des sections de premier niveau dans le conteneur"
    )


class GetListSectionResponse(BaseModel):
    list_section: Optional[list[Section]] = Field(
        None, alias="listSection", description="Liste des sections"
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )


class DebatsParlementairesListResponse(BaseModel):
    total_result_number: Optional[int] = Field(
        None,
        alias="totalResultNumber",
        description="Nombre de résultats",
        examples=[12],
    )
    display_size: Optional[str] = Field(
        None,
        alias="displaySize",
        description="Taille du fichier avec son unité",
        examples=["918,4 Ko"],
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    types_publication: Optional[Facet] = Field(
        None,
        alias="typesPublication",
        description="Facette listant les types de publication",
    )
    results: Optional[list[Debat]] = Field(
        None, description="Liste des résultats de la page"
    )
    type_publication_facet: Optional[Facet] = Field(
        None,
        alias="typePublicationFacet",
        description="Facette listant les types de publications des débats parlementaires",
    )


class VersionDTO(BaseModel):
    date_debut: Optional[datetime] = Field(
        None,
        alias="dateDebut",
        description="Date de début de la version",
        examples=["1538352000000"],
    )
    is_end_version: Optional[bool] = Field(
        None,
        alias="isEndVersion",
        description="Détermine s'il s'agit de la dernière version.",
    )
    articles_modificateurs: Optional[dict[str, ArticleModificateurDTO]] = Field(
        None,
        alias="articlesModificateurs",
        description="Map listant les articles ayant apportés des modifications pour cette version. La clé correspond à la date de la version au format AAAA-MM-JJ.",
    )


class TextTitle(BaseModel):
    nor: Optional[str] = Field(None, description="Numéro NOR")
    visas: Optional[str] = Field(None, description="Visas")
    date_texte: Optional[datetime] = Field(
        None, alias="dateTexte", description="Date du texte"
    )
    travaux_preparatoires: Optional[str] = Field(
        None, alias="travauxPreparatoires", description="Travaux préparatoires"
    )
    titre: Optional[str] = Field(None, description="Titre")
    date_texte_computed: Optional[datetime] = Field(
        None,
        alias="dateTexteComputed",
        description="Date de la version courante du texte",
    )
    nature: Optional[str] = Field(None, description="Nature du texte")
    signataires: Optional[str] = Field(None, description="Signataires")
    nota: Optional[str] = Field(None, description="Nota")
    etat: Optional[str] = Field(None, description="Etat juridique")
    id: Optional[str] = Field(None, description="Identifiant")
    notice: Optional[str] = Field(None, description="Notice")
    num: Optional[str] = Field(None, description="Numéro du texte")
    date_debut: Optional[datetime] = Field(
        None, alias="dateDebut", description="Date de début"
    )
    num_parution: Optional[str] = Field(
        None, alias="numParution", description="Numéro de parution"
    )
    titre_long: Optional[str] = Field(None, alias="titreLong", description="Titre long")
    date_publi_computed: Optional[datetime] = Field(
        None,
        alias="datePubliComputed",
        description="Date de publication de la version courante",
    )
    date_publi: Optional[datetime] = Field(
        None, alias="datePubli", description="Date de publication"
    )
    appli_geo: Optional[str] = Field(
        None, alias="appliGeo", description="Portée Géographique"
    )
    codes_nomenclatures: Optional[list[str]] = Field(
        None, alias="codesNomenclatures", description="Liste des code de nomenclature"
    )
    cid: Optional[str] = Field(None, description="Chronical ID")
    date_fin: Optional[datetime] = Field(
        None, alias="dateFin", description="Date de fin"
    )
    origine_publi: Optional[str] = Field(
        None, alias="originePubli", description="Origine de la publication"
    )
    ancien_id: Optional[str] = Field(
        None,
        alias="ancienId",
        description="ID référençant le code lié à l'article cible.",
    )
    appellations: Optional[list[str]] = Field(None, description="Appellations")
    dossiers_legislatifs: Optional[list[DossierLegislatif]] = Field(
        None, alias="dossiersLegislatifs", description="Liste des dossiers législatifs"
    )


class LODAListResponse(BaseModel):
    total_result_number: Optional[int] = Field(
        None,
        alias="totalResultNumber",
        description="Nombre de résultats",
        examples=[12],
    )
    results: Optional[list[LODAListResult]] = Field(
        None, description="Liste des résultats de la page"
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    natures: Optional[Facet] = Field(
        None, description="Facette listant les différentes natures de texte"
    )
    legal_status: Optional[Facet] = Field(
        None,
        alias="legalStatus",
        description="Facette listant les différents états juridiques",
    )


class TexteSimple(BaseModel):
    travaux_preparatoires_html: Optional[str] = Field(
        None,
        alias="travauxPreparatoiresHtml",
        description="Texte HTML des travaux préparatoires",
    )
    visas: Optional[str] = Field(None, description="Visas")
    condition_differe: Optional[str] = Field(
        None,
        alias="conditionDiffere",
        description="Condition de différé",
        examples=[
            "Le présent avenant entrera en vigueur le premier jour du mois suivant la date de parution du Journal officiel de son arrêté d'extension."
        ],
    )
    infos_complementaires: Optional[str] = Field(
        None, alias="infosComplementaires", description="Informations complémentaires"
    )
    titre_loi_def: Optional[str] = Field(
        None, alias="titreLoiDef", description="Titre de la loi déférée"
    )
    lien_jo: Optional[str] = Field(None, alias="lienJo", description="Lien vers le JO")
    origine_publi: Optional[str] = Field(
        None, alias="originePubli", description="Origine de la publication"
    )
    texte_html: Optional[str] = Field(
        None, alias="texteHtml", description="Texte au format HTML"
    )
    citation_jp_html: Optional[str] = Field(
        None,
        alias="citationJpHtml",
        description="Texte HTML des citations jurisprudentielles",
    )
    nota_sections_aafficher: Optional[list[str]] = Field(
        None,
        alias="notaSectionsAafficher",
        description="Texte HTML des informations complémentaires",
    )
    observations: Optional[str] = Field(
        None, description="Observations d'une directive européenne"
    )
    page_pdf: Optional[str] = Field(None, alias="pagePdf", description="Numéro de pdf")
    date_debut: Optional[datetime] = Field(
        None, alias="dateDebut", description="Date de début"
    )
    titre_long: Optional[str] = Field(
        None, alias="titreLong", description="Titre long du texte"
    )
    date_publi_computed: Optional[datetime] = Field(
        None,
        alias="datePubliComputed",
        description="Date de publication si la date est valide, vide autrement (elle vaut null si la date du texte est null ou >= 2222-01-01)",
        examples=["1546819200000"],
    )
    numero_affaire: Optional[list[str]] = Field(
        None,
        alias="numeroAffaire",
        description="Liste des numéros d'affaire",
        examples=[["17/030701", "17/030702"]],
    )
    origine: Optional[str] = Field(
        None, description="Origine du texte", examples=["JURI"]
    )
    rapporteur: Optional[str] = Field(None, description="Rapporteur")
    date_loi_def: Optional[datetime] = Field(
        None, alias="dateLoiDef", description="Date de signature de la loi déférée"
    )
    date_fin: Optional[datetime] = Field(
        None, alias="dateFin", description="Date de fin"
    )
    decision_attaquee: Optional[DecisionAttaquee] = Field(
        None, alias="decisionAttaquee", description="Décision attaquée"
    )
    ecli: Optional[str] = Field(None, description="ECLI")
    version: Optional[str] = Field(None, description="Version")
    avocats: Optional[str] = Field(None, description="Avocats")
    ministere: Optional[str] = Field(None, description="Ministere")
    type_decision: Optional[str] = Field(
        None, alias="typeDecision", description="Type de décision"
    )
    anne_publication_bulletin: Optional[str] = Field(
        None,
        alias="annePublicationBulletin",
        description="Année de publication au bulletin",
    )
    url_cc: Optional[str] = Field(
        None, alias="urlCC", description="Chemin vers la convention collective"
    )
    nor: Optional[str] = Field(None, description="Numéro NOR")
    president: Optional[str] = Field(None, description="Président")
    date_texte: Optional[datetime] = Field(
        None, alias="dateTexte", description="Date du texte", examples=["1546819200000"]
    )
    num_loi_def: Optional[str] = Field(
        None,
        alias="numLoiDef",
        description="Numéro de la loi déférée",
        examples=["2001-419"],
    )
    signataires_html: Optional[str] = Field(
        None, alias="signatairesHtml", description="Texte HTML des signataires"
    )
    solution: Optional[str] = Field(None, description="Solution")
    signataires: Optional[str] = Field(None, description="Signataires")
    signataire_kali: Optional[SignataireKali] = Field(
        None, alias="signataireKali", description="Signataire convention collective"
    )
    infos_restructuration_branche: Optional[str] = Field(
        None,
        alias="infosRestructurationBranche",
        description="Informations restructuration de branche",
    )
    id_eli: Optional[str] = Field(None, alias="idEli", description="Lien ELI")
    id_texte_jo: Optional[str] = Field(
        None, alias="idTexteJo", description="Identifiant du JO"
    )
    ref_injection: Optional[str] = Field(
        None,
        alias="refInjection",
        description="référence permettant le suivi d'injection du mode delta",
    )
    numsequence: Optional[str] = Field(None, description="Numéro de séquence")
    texte: Optional[str] = Field(None, description="Contenu du texte")
    formation: Optional[str] = Field(None, description="formation", examples=["JX"])
    id: Optional[str] = Field(
        None, description="Identifiant du texte", examples=["JURITEXT000037999394"]
    )
    type_publication_bulletin: Optional[str] = Field(
        None, alias="typePublicationBulletin", description="Type de publication"
    )
    date_publi: Optional[datetime] = Field(
        None,
        alias="datePubli",
        description="Date de publication",
        examples=["1546819200000"],
    )
    infos_restructuration_branche_html: Optional[str] = Field(
        None,
        alias="infosRestructurationBrancheHtml",
        description="Texte HTML des informations restructuration de branche",
    )
    juridiction_judiciaire: Optional[str] = Field(
        None,
        alias="juridictionJudiciaire",
        description="Juridiction judiciaire",
        examples=["Juridictions d'appel"],
    )
    ancien_id: Optional[str] = Field(None, alias="ancienId")
    date_jo: Optional[datetime] = Field(None, alias="dateJo", description="Date du JO")
    renvoi: Optional[str] = Field(None, description="Renvoi")
    visas_html: Optional[str] = Field(
        None, alias="visasHtml", description="Texte HTML des visas"
    )
    nota_html: Optional[str] = Field(
        None, alias="notaHtml", description="Texte HTML des notas"
    )
    type_texte: Optional[TypeTexte] = Field(
        None, alias="typeTexte", description="Type de texte", examples=["TEXTE_BASE"]
    )
    description_fusion_html: Optional[str] = Field(
        None,
        alias="descriptionFusionHtml",
        description="Texte HTML de la description de fusion",
    )
    numero_publication_bulletin: Optional[str] = Field(
        None,
        alias="numeroPublicationBulletin",
        description="Numéro de publication au bulletin",
    )
    num_texte_jo: Optional[str] = Field(
        None, alias="numTexteJo", description="Numéro du texte JO"
    )
    resume_html: Optional[str] = Field(
        None,
        alias="resumeHtml",
        description="Texte HTML des résumés de directive européenne",
    )
    titre: Optional[str] = Field(None, description="Titre du texte")
    description_fusion: Optional[str] = Field(
        None, alias="descriptionFusion", description="Description de fusion"
    )
    nature: Optional[str] = Field(
        None, description="Nature du texte", examples=["ARRET"]
    )
    commissaire: Optional[str] = Field(None, description="Commissaire")
    titrages: Optional[list[str]] = Field(
        None, description="Liste des éléments de titrage"
    )
    etat: Optional[str] = Field(None, description="Etat juridique")
    autorite: Optional[str] = Field(None, description="Autorité")
    relevant_date: Optional[datetime] = Field(
        None,
        alias="relevantDate",
        description="Contient la date du texte si elle existe (!= null && != 2999-01-01) sinon contient la date de publication  pour les texte",
        examples=["1546819200000"],
    )
    mots_cles: Optional[list[str]] = Field(
        None, alias="motsCles", description="Liste des mots clés"
    )
    citation_jp: Optional[str] = Field(
        None, alias="citationJp", description="Citations jurisprudentielles"
    )
    emetteur: Optional[str] = Field(None, description="Emetteur")
    codes_nomenclatures: Optional[list[str]] = Field(
        None, alias="codesNomenclatures", description="Liste des codes de nomenclature"
    )
    id_eli_alias: Optional[str] = Field(
        None, alias="idEliAlias", description="Alias ELI"
    )
    id_conteneur: Optional[str] = Field(
        None, alias="idConteneur", description="Identifiant du conteneur"
    )
    type_controle_normes: Optional[str] = Field(
        None,
        alias="typeControleNormes",
        description="Type de contrôle",
        examples=["Contrôle de constitutionnalité"],
    )
    travaux_preparatoires: Optional[str] = Field(
        None, alias="travauxPreparatoires", description="Travaux préparatoires"
    )
    date_derniere_modif: Optional[datetime] = Field(
        None,
        alias="dateDerniereModif",
        description="Date de dernière modification",
        examples=["1546819200000"],
    )
    id_tech_injection: Optional[str] = Field(
        None,
        alias="idTechInjection",
        description="Identifiant technique permettant le suivi d'injection du mode delta",
    )
    appli_geo: Optional[str] = Field(
        None, alias="appliGeo", description="Portée géographique", examples=["NATIONAL"]
    )
    demandeur: Optional[str] = Field(None, description="Demandeur du texte")
    inap: Optional[bool] = Field(None, description="INAP")
    juridiction: Optional[str] = Field(
        None, description="Juridiction", examples=["Cour d'appel de Nancy"]
    )
    dossiers_legislatifs: Optional[list[DossierLegislatif]] = Field(
        None, alias="dossiersLegislatifs", description="Liste des dossiers législatifs"
    )
    nature_juridiction: Optional[str] = Field(
        None,
        alias="natureJuridiction",
        description="Nature de la juridiction",
        examples=["Cour d'appel"],
    )
    provenance: Optional[str] = Field(None, description="provenance", examples=["CAPP"])
    sommaire: Optional[list[TexteSommaire]] = Field(
        None, description="Liste des éléments de sommaire"
    )
    num_parution: Optional[str] = Field(
        None, alias="numParution", description="Numéro de parution"
    )
    date_texte_computed: Optional[datetime] = Field(
        None,
        alias="dateTexteComputed",
        description="Date du texte si la date est valide, vide autrement (elle vaut null si la date du texte est null ou >= 2222-01-01)",
        examples=["1546819200000"],
    )
    nature_delib: Optional[str] = Field(
        None,
        alias="natureDelib",
        description="Nature de la délibération",
        examples=["AUTORISATION DE TRANSFERTS"],
    )
    nota: Optional[str] = Field(None, description="Notas")
    rectificatif: Optional[str] = Field(
        None, description="Rectificatif d'une directive européenne"
    )
    nature_qualifiee: Optional[str] = Field(
        None, alias="natureQualifiee", description="Nature qualifiée"
    )
    appellations: Optional[list[str]] = Field(
        None, description="Liste des appellations non officielles"
    )
    resume: Optional[str] = Field(None, description="Résumé d'une directive européenne")
    num_jo: Optional[str] = Field(None, alias="numJo", description="Numéro du JO")
    notice: Optional[str] = Field(None, description="Notice")
    conteneurs: Optional[list[Conteneur]] = Field(
        None, description="Liste des conteneurs"
    )
    num: Optional[str] = Field(None, description="Numéro du texte")
    publication_recueil: Optional[str] = Field(
        None,
        alias="publicationRecueil",
        description="Indique la publication au recueil Lebon",
        examples=["C"],
    )
    numero_bo: Optional[str] = Field(None, alias="numeroBo", description="Numéro BO")
    nature_numero: Optional[str] = Field(None, alias="natureNumero")
    cid: Optional[str] = Field(None, description="Chronical ID du texte")
    liens: Optional[list[TexteLien]] = Field(
        None, description="Liste de liens vers d'autres textes"
    )
    notice_html: Optional[str] = Field(
        None, alias="noticeHtml", description="Texte HTML de la notice"
    )
    siege_appel: Optional[str] = Field(
        None, alias="siegeAppel", description="Siège d'appel", examples=["NANCY"]
    )
    date_versement: Optional[datetime] = Field(
        None, alias="dateVersement", description="Date de versement"
    )
    avocat_gl: Optional[str] = Field(
        None, alias="avocatGl", description="Avocat général"
    )
    titre_jo: Optional[str] = Field(
        None, alias="titreJo", description="Titre du JO lié"
    )
    infos_complementaires_html: Optional[str] = Field(
        None,
        alias="infosComplementairesHtml",
        description="Texte HTML des informations complémentaires",
    )
    titrages_key: Optional[list[Titrage]] = Field(
        None, alias="titragesKey", description="Liste des éléments de titrage"
    )


class ConsultDebatResponse(BaseModel):
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    dereferenced: Optional[bool] = Field(
        None,
        description="Identifie si le contenu est référençable par les robots d'indexation",
        examples=[True],
    )
    debat: Optional[Debat] = Field(None, description="Débat parlementaire")


class FullConteneur(BaseModel):
    structure: Optional[StructureTxt] = Field(
        None, description="Structure du conteneur"
    )
    etat: Optional[str] = Field(None, description="Etat juridique du conteneur")
    id: Optional[str] = Field(
        None, description="Identifiant du conteneur", examples=["JORFCONT000038052140"]
    )
    titre: Optional[str] = Field(
        None, description="Titre", examples=["JORF n°0021 du 25 janvier 2019"]
    )
    date_publi: Optional[datetime] = Field(
        None,
        alias="datePubli",
        description="Date de publication",
        examples=["1548374400000"],
    )
    origine: Optional[str] = Field(None, description="Origine", examples=["JORF"])
    nature: Optional[str] = Field(
        None, description="Nature du conteneur", examples=["JO"]
    )
    id_tech_injection: Optional[str] = Field(
        None,
        alias="idTechInjection",
        description="Identifiant technique de l'élément injecté",
    )
    url: Optional[str] = Field(
        None,
        description="chemin vers le conteneur",
        examples=["conteneur/JORF/CONT/00/00/38/05/21/JORFCONT000038052140.xml"],
    )
    ancien_id: Optional[str] = Field(
        None, alias="ancienId", description="Ancien Identifiant"
    )
    id_eli: Optional[str] = Field(
        None,
        alias="idEli",
        description="Identifiant ELI",
        examples=["/eli/jo/2019/1/25/0021"],
    )
    numero: Optional[str] = None
    ref_injection: Optional[str] = Field(
        None,
        alias="refInjection",
        description="Référence technique permettant d'identifier la date d'injection",
    )
    num: Optional[str] = Field(None, description="Numéro de JO", examples=["0021"])
    relevant_date: Optional[datetime] = Field(None, alias="relevantDate")


class ConsultBoccResponse(BaseModel):
    date_parution: Optional[str] = Field(
        None,
        alias="dateParution",
        description="Date de parution",
        examples=["2021-04-15"],
    )
    file_name: Optional[str] = Field(None, alias="fileName")
    display_size: Optional[str] = Field(None, alias="displaySize")
    title: Optional[str] = None
    num_parution: Optional[str] = Field(None, alias="numParution")
    bocc: Optional[EsParutionBocc] = None
    for_global_bocc: Optional[bool] = Field(None, alias="forGlobalBocc")
    path_to_file: Optional[str] = Field(None, alias="pathToFile")


class Article(BaseModel):
    condition_differe: Optional[str] = Field(
        None,
        alias="conditionDiffere",
        description="Condition différée => Spécifique conventions collectives",
    )
    infos_complementaires: Optional[str] = Field(
        None, alias="infosComplementaires", description="Informations complémentaires"
    )
    surtitre: Optional[str] = Field(
        None, description="Surtitre => Spécifique conventions collectives"
    )
    nature: Optional[str] = Field(None, description="Nature", examples=["Article"])
    texte_html: Optional[str] = Field(
        None, alias="texteHtml", description="Contenu HTML de l'article"
    )
    type: Optional[str] = Field(None, description="Type", examples=["AUTONOME"])
    article_versions: Optional[list[ArticleVersion]] = Field(
        None, alias="articleVersions", description="Liste des versions de l'article"
    )
    activite_pro: Optional[list[str]] = Field(
        None, alias="activitePro", description="Liste des activités"
    )
    lien_autres: Optional[list[Lien]] = Field(
        None, alias="lienAutres", description="Autres liens de l'article"
    )
    computed_nums: Optional[list[str]] = Field(
        None, alias="computedNums", description="Liste des numéros de l'article"
    )
    date_fin_extension: Optional[datetime] = Field(
        None,
        alias="dateFinExtension",
        description="Date de fin si extension",
        examples=["32472144000000"],
    )
    version_precedente: Optional[str] = Field(
        None, alias="versionPrecedente", description="Version précédente"
    )
    date_debut: Optional[datetime] = Field(
        None, alias="dateDebut", description="Date de début", examples=["1104537600000"]
    )
    numero_brochure: Optional[list[str]] = Field(
        None, alias="numeroBrochure", description="Liste des numéros de brochure"
    )
    ref_injection: Optional[str] = Field(
        None,
        alias="refInjection",
        description="Référence technique permettant d'identifier la date d'injection",
    )
    lien_modifications: Optional[list[LienModification]] = Field(
        None,
        alias="lienModifications",
        description="Liste des liens de modification de l'article",
    )
    id_texte: Optional[str] = Field(
        None, alias="idTexte", description="Identifiant du texte"
    )
    id_tech_injection: Optional[str] = Field(
        None,
        alias="idTechInjection",
        description="Identifiant technique de l'élément injecté",
    )
    calipsos: Optional[list[str]] = Field(None, description="Liste des calipsos")
    origine: Optional[str] = Field(None, description="Origine", examples=["LEGI"])
    conteneurs: Optional[list[Conteneur]] = Field(
        None, description="Liste d'id de conteneurs"
    )
    date_debut_extension: Optional[datetime] = Field(
        None,
        alias="dateDebutExtension",
        description="Date de début si extension",
        examples=["32472144000000"],
    )
    date_fin: Optional[datetime] = Field(
        None, alias="dateFin", description="Date de fin", examples=["1104451200000"]
    )
    id_eli_alias: Optional[str] = Field(
        None, alias="idEliAlias", description="Alias ELI"
    )
    cid_texte: Optional[str] = Field(
        None, alias="cidTexte", description="Chronical ID du texte"
    )
    section_parent_id: Optional[str] = Field(
        None,
        alias="sectionParentId",
        description="Identifiant technique de la section parente",
        examples=["LEGISCTA000006191588"],
    )
    text_titles: Optional[list[TextTitle]] = Field(
        None,
        alias="textTitles",
        description="Liste des versions du texte contenant l'article",
    )
    multiple_versions: Optional[bool] = Field(None, alias="multipleVersions")
    etat: Optional[str] = Field(
        None, description="Etat juridique", examples=["MODIFIE_MORT_NE"]
    )
    version_article: Optional[str] = Field(
        None, alias="versionArticle", description="Version", examples=["28.0"]
    )
    comporte_liens_sp: Optional[bool] = Field(
        None,
        alias="comporteLiensSP",
        description="Determine si l'article possède des liens Service Public à afficher",
    )
    section_parent_titre: Optional[str] = Field(
        None,
        alias="sectionParentTitre",
        description="Titre de la section parente",
        examples=["I : Revenu imposable"],
    )
    ordre: Optional[int] = Field(
        None,
        description="Numéro d'ordre permettant le tri des articles dans leur élément parent.",
        examples=[644235],
    )
    infos_restructuration_branche: Optional[str] = Field(
        None,
        alias="infosRestructurationBranche",
        description="Informations restructuration de branche",
    )
    id_eli: Optional[str] = Field(None, alias="idEli", description="Identifiant ELI")
    section_parent_cid: Optional[str] = Field(
        None,
        alias="sectionParentCid",
        description="Chronical ID de la section parente",
        examples=["LEGISCTA000006191588"],
    )
    nota: Optional[str] = Field(None, description="Contenu nota")
    num: Optional[str] = Field(
        None, description="Numéro de l'article", examples=["156"]
    )
    numero_bo: Optional[str] = Field(
        None, alias="numeroBo", description="Numéro du bulletin officiel"
    )
    texte: Optional[str] = Field(None, description="Contenu textuel de l'article")
    id: Optional[str] = Field(
        None, description="Identifiant de l'article", examples=["LEGIARTI000006307920"]
    )
    lien_citations: Optional[list[LienCitation]] = Field(
        None,
        alias="lienCitations",
        description="Liste des liens de citation de l'article",
    )
    infos_restructuration_branche_html: Optional[str] = Field(
        None,
        alias="infosRestructurationBrancheHtml",
        description="Texte HTML des informations restructuration de branche",
    )
    historique: Optional[str] = Field(
        None, description="Historique => Spécifique conventions collectives"
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID", examples=["LEGIARTI000006307893"]
    )
    lien_concordes: Optional[list[LienConcorde]] = Field(
        None,
        alias="lienConcordes",
        description="Liste des liens de concordance de l'article",
    )
    infos_complementaires_html: Optional[str] = Field(
        None,
        alias="infosComplementairesHtml",
        description="Texte HTML des informations complémentaires",
    )
    renvoi: Optional[str] = Field(
        None, description="Renvoi sur contenu d'article (Exemple : (1))"
    )
    full_sections_titre: Optional[str] = Field(
        None,
        alias="fullSectionsTitre",
        description="Concaténation de l'ensemble des titres de la chaine parente",
    )
    context: Optional[Context] = Field(None, description="Contexte de l'article")
    nota_html: Optional[str] = Field(
        None, alias="notaHtml", description="Contenu nota au format HTML"
    )
    inap: Optional[str] = Field(None, description="INAP")


class GetJorfContResponseItem(BaseModel):
    jo_inap: Optional[FileMetadata] = Field(
        None, alias="joInap", description="Métadonnées du JOINAP s'il en existe un"
    )
    jo_cont: Optional[FullConteneur] = Field(
        None, alias="joCont", description="Conteneur du JO"
    )
    jo_ea: Optional[FileMetadata] = Field(
        None, alias="joEA", description="Métadonnées du JOEA s'il en existe un"
    )
    jos_pat: Optional[list[FileMetadata]] = Field(
        None, alias="josPat", description="Liste des métadonnées des JO patrimoniaux"
    )


class ConsultJuriTextResponse(BaseModel):
    text: Optional[TexteSimple] = Field(None, description="Texte")
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    dereferenced: Optional[bool] = Field(
        None,
        description="Identifie si le contenu est référençable par les robots d'indexation",
        examples=[True],
    )


class RegroupementDTO(BaseModel):
    versions: Optional[dict[str, VersionDTO]] = Field(
        None,
        description="Map listant les versions dans l'ordre antéchronologique.  La clé correspond à la date de la version",
    )
    title: Optional[str] = Field(
        None, description="Titre du regroupement", examples=["2015"]
    )
    detail_loaded: Optional[bool] = Field(None, alias="detailLoaded")


class SearchResult(BaseModel):
    nor: Optional[str] = None
    etat: Optional[str] = None
    themes: Optional[list[str]] = None
    nature: Optional[str] = None
    dossiers_legislatifs: Optional[list[DossierLegislatif]] = Field(
        None, alias="dossiersLegislatifs"
    )
    type: Optional[str] = None
    date_publication: Optional[str] = Field(
        None,
        alias="datePublication",
        description="Date de publication",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    id_attachment: Optional[str] = Field(None, alias="idAttachment")
    appellations: Optional[list[str]] = None
    reference: Optional[str] = None
    mots_cles: Optional[list[str]] = Field(None, alias="motsCles")
    more_article: Optional[bool] = Field(None, alias="moreArticle")
    additional_result: Optional[dict[str, SearchAdditionalResult]] = Field(
        None, alias="additionalResult"
    )
    num: Optional[str] = None
    sections: Optional[list[SearchSection]] = None
    autre_resume: Optional[list[str]] = Field(None, alias="autreResume")
    num_parution: Optional[str] = Field(None, alias="numParution")
    resume_principal: Optional[list[str]] = Field(None, alias="resumePrincipal")
    raison_sociale: Optional[str] = Field(None, alias="raisonSociale")
    date_signature: Optional[str] = Field(
        None,
        alias="dateSignature",
        description="Date de signature",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    titles: Optional[list[SearchTitle]] = None
    conforme: Optional[bool] = None
    text: Optional[str] = None
    origin: Optional[str] = None
    jorf_text: Optional[str] = Field(None, alias="jorfText")
    date_diffusion: Optional[str] = Field(
        None,
        alias="dateDiffusion",
        description="Date diffusion",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    size_attachment: Optional[str] = Field(None, alias="sizeAttachment")
    description_fusion_html: Optional[str] = Field(None, alias="descriptionFusionHtml")
    idcc: Optional[str] = None
    date: Optional[str] = Field(
        None, description="Date utile", examples=["2021-04-15T16:49:47.707+0000"]
    )


class RechercheSpecifiqueDTO(BaseModel):
    filtres: Optional[list[FiltreDTO]] = Field(
        None,
        description="Liste des filtres à appliquer. La requête est effectuée automatiquement avec un opérateur ET entre les filtres listés.",
        examples=[
            [
                {"valeurs": ["LOI", "ORDONNANCE", "ARRETE"], "facette": "NATURE"},
                {
                    "dates": {"start": "2015-01-01", "end": "2018-01-31"},
                    "facette": "DATE_SIGNATURE",
                },
            ]
        ],
    )
    sort: str = Field(
        ...,
        description="Tri des éléments trouvés (Les tris possibles dépendent du fonds recherché)",
        examples=["SIGNATURE_DATE_DESC"],
    )
    from_advanced_recherche: Optional[bool] = Field(
        None,
        alias="fromAdvancedRecherche",
        description="Déterminer s'il s'agit d'une recherche avancée",
        examples=[False],
    )
    second_sort: Optional[str] = Field(
        None,
        alias="secondSort",
        description="Tri des éléments trouvés (Les tris possibles dépendent du fonds recherché)",
        examples=["ID"],
    )
    champs: list[ChampDTO] = Field(
        ...,
        description="Liste des champs dans lesquels appliquer la recherche",
        examples=[
            [
                {
                    "criteres": [
                        {
                            "proximite": 2,
                            "valeur": "dispositions",
                            "criteres": [
                                {
                                    "valeur": "soins",
                                    "operateur": "ET",
                                    "typeRecherche": "UN_DES_MOTS",
                                },
                                {
                                    "proximite": "3",
                                    "valeur": "fonction publique",
                                    "operateur": "ET",
                                    "typeRecherche": "TOUS_LES_MOTS_DANS_UN_CHAMP",
                                },
                            ],
                            "operateur": "ET",
                            "typeRecherche": "UN_DES_MOTS",
                        }
                    ],
                    "operateur": "ET",
                    "typeChamp": "TITLE",
                }
            ]
        ],
    )
    page_size: int = Field(
        ...,
        alias="pageSize",
        description="Nombre d'éléments par page (max=100)",
        examples=[10],
    )
    operateur: Operateur = Field(
        ..., description="Opérateur entre les champs de recherche", examples=["ET"]
    )
    type_pagination: TypePagination = Field(
        ...,
        alias="typePagination",
        description="Type de pagination. Spécifique pour les recherches dans les articles d'un texte, dans les autres cas la valeur sera toujours DEFAULT. Lors de la navigation dans plusieurs pages, il est nécessaire de passer la valeur reçue dans la réponse précédente.",
        examples=["DEFAUT"],
    )
    page_number: int = Field(
        ...,
        alias="pageNumber",
        description="Numéro de la page à consulter",
        examples=[1],
    )


class ConsultSection(BaseModel):
    date_debut: Optional[str] = Field(
        None, alias="dateDebut", description="Date de début de la version de la section"
    )
    title: Optional[str] = Field(
        None,
        description="Titre de la section",
        examples=["Titre II : Régime du notariat"],
    )
    etat: Optional[str] = Field(
        None, description="Etat juridique", examples=["VIGUEUR"]
    )
    id: Optional[str] = Field(
        None, description="Identifiant", examples=["LEGISCTA000006092887"]
    )
    commentaire: Optional[str] = Field(
        None,
        examples=["Le présent chapitre ne comporte pas de dispositions réglementaires"],
    )
    date_fin: Optional[str] = Field(
        None, alias="dateFin", description="Date de fin de la version de la section"
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID", examples=["LEGISCTA000006092887"]
    )
    dereferenced: Optional[bool] = Field(
        None,
        description="Identifie si le contenu est référençable par les robots d'indexation",
        examples=[True],
    )
    int_ordre: Optional[int] = Field(
        None,
        alias="intOrdre",
        description="Numéro indiquant l'ordre d'affichage",
        examples=[3],
    )
    section_consultee: Optional[bool] = Field(
        None,
        alias="sectionConsultee",
        description="Indique si la section est celle demandée en consultation",
        examples=[True],
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    renvoi: Optional[str] = Field(
        None, examples=["Le présent chapitre contient un renvoi"]
    )
    articles: Optional[list[ConsultArticle]] = Field(
        None,
        description="Liste des articles enfants de la section. La liste est ordonnée",
    )
    date_modif: Optional[str] = Field(
        None, alias="dateModif", description="Date de dernière modification"
    )
    renvoi_num: Optional[str] = Field(
        None,
        alias="renvoiNum",
        examples=["Le présent chapitre contient un renvoi numerote"],
    )
    nota_html: Optional[str] = Field(
        None, alias="notaHtml", examples=["Nota html de la section"]
    )
    nota_sections_aafficher: Optional[list[str]] = Field(
        None,
        alias="notaSectionsAafficher",
        examples=["Nota html de section pouvant être affichés"],
    )
    sections: Optional[list[ConsultSection]] = Field(
        None,
        description="Liste des sections enfants de la section (peut être un texte dans le cas des conventions collectives). La liste est ordonnée",
    )


class ChronolegiResponse(BaseModel):
    date_publication: Optional[str] = Field(
        None,
        alias="datePublication",
        description="Date de publication",
        examples=["2021-04-15T16:49:47.707+0000"],
    )
    regroupements: Optional[list[RegroupementDTO]] = Field(
        None, description="Liste des regroupements d'années"
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )


class GetListArticleResponse(BaseModel):
    list_article: Optional[list[Article]] = Field(
        None, alias="listArticle", description="Liste des versions de l'article"
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )


ConsultCnilTextResponse = ConsultJuriTextResponse


class ConsultKaliContResponse(BaseModel):
    activite_pro: Optional[list[str]] = Field(
        None, alias="activitePro", description="Liste des activités professionelles"
    )
    id: Optional[str] = Field(
        None, description="Identifiant", examples=["KALICONT000005635384"]
    )
    titre: Optional[str] = Field(
        None,
        description="Titre",
        examples=[
            "Convention collective nationale des acteurs du lien social et familial : centres sociaux et socioculturels, associations d'accueil de jeunes enfants, associations de développement social local  du 4 juin 1983.  Etendue par arrêté du 22 janvier 1987 JORF 12 février 1987. (1)"
        ],
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    numero_texte: Optional[str] = Field(
        None, alias="numeroTexte", description="numéro du texte", examples=["IDCC 1261"]
    )
    texte_base_id: Optional[list[str]] = Field(
        None,
        alias="texteBaseId",
        description="Liste des identifiants des textes de base",
        examples=[["KALITEXT000005677408"]],
    )
    categorisation: Optional[list[str]] = Field(
        None, description="Liste des catégories"
    )
    nature: Optional[str] = Field(None, description="Nature", examples=["IDCC"])
    description_fusion_html: Optional[str] = Field(
        None,
        alias="descriptionFusionHtml",
        description="Texte HTML de la description de fusion",
    )
    num: Optional[str] = Field(None, description="Numéro", examples=["1261"])
    sections: Optional[list[ConsultSection]] = Field(
        None, description="Liste des conventions collectives"
    )


class GetJosResponse(BaseModel):
    total_nb_result: Optional[int] = Field(
        None, alias="totalNbResult", description="Nombre de résultats", examples=[12]
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    items: Optional[list[GetJorfContResponseItem]] = Field(
        None, description="Liste des éléments trouvés"
    )


class GetArticleResponse(BaseModel):
    article: Optional[Article] = Field(None, description="Détail de l'article")
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    dereferenced: Optional[bool] = Field(
        None,
        description="Identifie si le contenu est référençable par les robots d'indexation",
        examples=[True],
    )


class SearchResponseDTO(BaseModel):
    total_result_number: Optional[int] = Field(
        None,
        alias="totalResultNumber",
        description="Nombre de résultats",
        examples=[1560],
    )
    facets: Optional[list[Facet]] = Field(None, description="Liste des facettes liées")
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    total_article_result_number: Optional[int] = Field(
        None, alias="totalArticleResultNumber"
    )
    results: Optional[list[SearchResult]] = Field(
        None, description="Liste des résultats de la page"
    )
    description_fusion_html: Optional[str] = Field(
        None, alias="descriptionFusionHtml", description="Description fusion"
    )
    type_pagination: Optional[TypePagination] = Field(
        None,
        alias="typePagination",
        description="Type de pagination. Spécifique pour les recherches dans les articles d'un texte spécifique, dans les autres cas la valeur sera toujours DEFAULT.",
        examples=["DEFAULT"],
    )


class ConsultKaliTextResponse(BaseModel):
    text_number: Optional[str] = Field(
        None, alias="textNumber", description="Numéro de texte"
    )
    visas_html: Optional[str] = Field(
        None, alias="visasHtml", description="Texte HTML des visas"
    )
    title: Optional[str] = Field(
        None,
        description="Titre du texte",
        examples=["Loi contenant organisation du notariat (loi 25 ventôse an XI)"],
    )
    condition_differe: Optional[str] = Field(
        None, alias="conditionDiffere", description="Condition différée"
    )
    resume: Optional[str] = Field(None, description="Résumé")
    signataires: Optional[SignataireKali] = Field(None, description="Signataire")
    nature: Optional[str] = Field(None, description="Nature")
    libelle_extension: Optional[str] = Field(None, alias="libelleExtension")
    visas: Optional[str] = Field(None, description="Visas")
    juris_date: Optional[str] = Field(
        None, alias="jurisDate", description="Date d'état juridique"
    )
    date_texte: Optional[datetime] = Field(
        None, alias="dateTexte", description="Date de signature"
    )
    articles: Optional[list[ConsultArticle]] = Field(
        None, description="Liste des articles racine du texte. La liste est ordonnée"
    )
    signers: Optional[str] = Field(None, description="Signataires")
    notice: Optional[str] = Field(None, description="Notice")
    alias: Optional[str] = Field(None, description="Alias")
    observations: Optional[str] = Field(None, description="Observations")
    page_pdf: Optional[str] = Field(
        None,
        alias="pagePdf",
        description="Le numéro de la page de l'article dans le journal officiel",
        examples=["14"],
    )
    num_parution: Optional[str] = Field(
        None, alias="numParution", description="Numéro de parution"
    )
    file_name: Optional[str] = Field(None, alias="fileName")
    version_label: Optional[str] = Field(None, alias="versionLabel")
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    inap: Optional[bool] = Field(None, description="INAP")
    origine_publi: Optional[str] = Field(
        None, alias="originePubli", description="Origine de la publication"
    )
    date_fin_version: Optional[str] = Field(
        None, alias="dateFinVersion", description="Date de fin de la version"
    )
    sections: Optional[list[ConsultSection]] = Field(
        None,
        description="Liste des sections de premier niveau du texte. La liste est ordonnée",
    )
    dossiers_legislatifs: Optional[list[DossierLegislatif]] = Field(
        None, alias="dossiersLegislatifs", description="Liste des dossiers legislatifs"
    )
    juris_state: Optional[str] = Field(
        None, alias="jurisState", description="Etat juridique du texte"
    )
    nor: Optional[str] = Field(
        None, description="Numéro NOR", examples=["NCCX8900064L"]
    )
    date_parution: Optional[datetime] = Field(
        None, alias="dateParution", description="Date de parution"
    )
    etat: Optional[str] = Field(None, description="Etat du texte")
    type_texte: Optional[str] = Field(
        None, alias="typeTexte", description="Type de texte", examples=["TEXTE_BASE"]
    )
    modif_date: Optional[str] = Field(
        None, alias="modifDate", description="Date de modification"
    )
    id_conteneur: Optional[str] = Field(
        None,
        alias="idConteneur",
        description="Identifiant du conteneur du texte lorsqu'il en existe un.",
    )
    libelle_elargissement: Optional[str] = Field(None, alias="libelleElargissement")
    dereferenced: Optional[bool] = Field(
        None,
        description="Identifie si le contenu est référençable par les robots d'indexation",
        examples=[True],
    )
    nota: Optional[str] = Field(None, description="Nota")
    rectificatif: Optional[str] = Field(None, description="Rectificatif")
    appellations: Optional[list[str]] = Field(None, description="Appellations")
    mots_cles: Optional[list[str]] = Field(
        None,
        alias="motsCles",
        description="Liste des mots clés",
        examples=[["LIEN FAMILIAL", "CENTRES SOCIAUX"]],
    )
    id: Optional[str] = Field(
        None,
        description="Identifiant du texte",
        examples=["LEGITEXT000006070994_01-08-2016"],
    )
    conteneurs: Optional[list[Conteneur]] = Field(
        None, description="Liste des conteneurs du texte"
    )
    numero_bo: Optional[str] = Field(
        None, alias="numeroBo", description="Numéro Bulletin Officiel"
    )
    date_debut_version: Optional[str] = Field(
        None, alias="dateDebutVersion", description="Date de début de la version"
    )
    eli: Optional[str] = Field(
        None,
        description="identifiant européen de la \u200elégislation ou European Legislation Identifier",
        examples=["/eli/arrete/2019/1/18/TREK1901124A/jo/texte"],
    )
    infos_restructuration_branche_html: Optional[str] = Field(
        None,
        alias="infosRestructurationBrancheHtml",
        description="Texte HTML des informations restructuration de branche",
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID du texte", examples=["JORFTEXT000000882738"]
    )
    liens: Optional[list[TexteLien]] = Field(None, description="Liens")
    codes_nomenclature: Optional[list[str]] = Field(
        None, alias="codesNomenclature", description="Liste des codes de nomenclature"
    )
    renvoi: Optional[str] = Field(None, description="Numero renvoi")
    file_size: Optional[str] = Field(None, alias="fileSize")
    jorf_text: Optional[str] = Field(
        None, alias="jorfText", description="Titre du texte correspondant"
    )
    prep_work: Optional[str] = Field(
        None, alias="prepWork", description="Travaux préparatoires"
    )
    visa: Optional[str] = Field(None, description="Visas")
    file_path: Optional[str] = Field(None, alias="filePath")
    description_fusion_html: Optional[str] = Field(
        None, alias="descriptionFusionHtml", description="Description fusion"
    )
    infos_complementaires_html: Optional[str] = Field(
        None,
        alias="infosComplementairesHtml",
        description="Texte HTML des informations complémentaires",
    )
    text_abroge: Optional[bool] = Field(
        None, alias="textAbroge", description="Indique si le texte est abrogé"
    )


class ConsultJorfResponse(BaseModel):
    text_number: Optional[str] = Field(
        None, alias="textNumber", description="Numéro de texte"
    )
    id: Optional[str] = Field(
        None,
        description="Identifiant du texte",
        examples=["LEGITEXT000006070994_01-08-2016"],
    )
    title: Optional[str] = Field(
        None,
        description="Titre du texte",
        examples=["Loi contenant organisation du notariat (loi 25 ventôse an XI)"],
    )
    file_path: Optional[str] = Field(None, alias="filePath")
    resume: Optional[str] = Field(None, description="Résumé")
    nature: Optional[str] = Field(None, description="Nature")
    dereferenced: Optional[bool] = Field(
        None,
        description="Identifie si le contenu est référençable par les robots d'indexation",
        examples=[True],
    )
    juris_date: Optional[str] = Field(
        None, alias="jurisDate", description="Date d'état juridique"
    )
    date_texte: Optional[datetime] = Field(
        None, alias="dateTexte", description="Date de signature"
    )
    articles: Optional[list[ConsultArticle]] = Field(
        None, description="Liste des articles racine du texte. La liste est ordonnée"
    )
    has_single_pdf: Optional[bool] = Field(
        None,
        alias="hasSinglePdf",
        description="Indique si la requête a remonté un seul pdf",
    )
    notice: Optional[str] = Field(None, description="Notice")
    alias: Optional[str] = Field(None, description="Alias")
    sections: Optional[list[ConsultSection]] = Field(
        None,
        description="Liste des sections de premier niveau du texte. La liste est ordonnée",
    )
    page_pdf: Optional[str] = Field(
        None,
        alias="pagePdf",
        description="Le numéro de la page de l'article dans le journal officiel",
        examples=["14"],
    )
    num_parution: Optional[str] = Field(
        None, alias="numParution", description="Numéro de parution"
    )
    file_name: Optional[str] = Field(None, alias="fileName")
    inap: Optional[bool] = Field(None, description="INAP")
    date_fin_version: Optional[str] = Field(
        None, alias="dateFinVersion", description="Date de fin de la version"
    )
    observations: Optional[str] = Field(None, description="Observations")
    dossiers_legislatifs: Optional[list[DossierLegislatif]] = Field(
        None, alias="dossiersLegislatifs", description="Liste des dossiers legislatifs"
    )
    juris_state: Optional[str] = Field(
        None, alias="jurisState", description="Etat juridique du texte"
    )
    nor: Optional[str] = Field(
        None, description="Numéro NOR", examples=["NCCX8900064L"]
    )
    date_parution: Optional[datetime] = Field(
        None, alias="dateParution", description="Date de parution"
    )
    etat: Optional[str] = Field(None, description="Etat du texte")
    modif_date: Optional[str] = Field(
        None, alias="modifDate", description="Date de modification"
    )
    id_conteneur: Optional[str] = Field(
        None,
        alias="idConteneur",
        description="Identifiant du conteneur du texte lorsqu'il en existe un.",
    )
    jorf_file_metadata: Optional[list[FileMetadata]] = Field(
        None,
        alias="jorfFileMetadata",
        description="Liste des métadonnées des fichiers attachés au document",
    )
    nota: Optional[str] = Field(None, description="Nota")
    rectificatif: Optional[str] = Field(None, description="Rectificatif")
    appellations: Optional[list[str]] = Field(None, description="Appellations")
    mots_cles: Optional[list[str]] = Field(
        None, alias="motsCles", description="Mots-clés"
    )
    signers: Optional[str] = Field(None, description="Signataires")
    date_debut_version: Optional[str] = Field(
        None, alias="dateDebutVersion", description="Date de début de la version"
    )
    eli: Optional[str] = Field(
        None,
        description="identifiant européen de la \u200elégislation ou European Legislation Identifier",
        examples=["/eli/arrete/2019/1/18/TREK1901124A/jo/texte"],
    )
    has_loda: Optional[bool] = Field(
        None,
        alias="hasLoda",
        description="Indique si le texte a une version consolidée",
    )
    cid: Optional[str] = Field(
        None, description="Chronical ID du texte", examples=["JORFTEXT000000882738"]
    )
    liens: Optional[list[TexteLien]] = Field(None, description="Liens")
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    file_size: Optional[str] = Field(None, alias="fileSize")
    jorf_text: Optional[str] = Field(
        None, alias="jorfText", description="Titre du texte correspondant"
    )
    prep_work: Optional[str] = Field(
        None, alias="prepWork", description="Travaux préparatoires"
    )
    visa: Optional[str] = Field(None, description="Visas")
    text_abroge: Optional[bool] = Field(
        None, alias="textAbroge", description="Indique si le texte est abrogé"
    )


class SearchRequestDTO(BaseModel):
    recherche: RechercheSpecifiqueDTO = Field(
        ..., description="Objet définissant la recherche"
    )
    fond: Fond = Field(
        ...,
        description="Fonds sur lequel appliquer la recherche. Pour rechercher dans tous les fonds, il faut définir la valeur ALL. Pour les fonds LODA et CODE il existe deux types de recherche : la recherche par date (_DATE) de version ou la recherche par état juridique (_ETAT)",
        examples=["LODA_DATE"],
    )


class ConsultTextResponse(BaseModel):
    mots_cles: Optional[list[str]] = Field(
        None, alias="motsCles", description="Mots-clés"
    )
    date_parution: Optional[datetime] = Field(
        None, alias="dateParution", description="Date de parution"
    )
    title: Optional[str] = Field(
        None,
        description="Titre du texte",
        examples=["Loi contenant organisation du notariat (loi 25 ventôse an XI)"],
    )
    etat: Optional[str] = Field(None, description="Etat du texte")
    eli: Optional[str] = Field(
        None,
        description="identifiant européen de la \u200elégislation ou European Legislation Identifier",
        examples=["/eli/arrete/2019/1/18/TREK1901124A/jo/texte"],
    )
    modif_date: Optional[str] = Field(
        None, alias="modifDate", description="Date de modification"
    )
    num_parution: Optional[str] = Field(
        None, alias="numParution", description="Numéro de parution"
    )
    resume: Optional[str] = Field(None, description="Résumé")
    nature: Optional[str] = Field(None, description="Nature")
    dossiers_legislatifs: Optional[list[DossierLegislatif]] = Field(
        None, alias="dossiersLegislatifs", description="Liste des dossiers legislatifs"
    )
    dereferenced: Optional[bool] = Field(
        None,
        description="Identifie si le contenu est référençable par les robots d'indexation",
        examples=[True],
    )
    juris_date: Optional[str] = Field(
        None, alias="jurisDate", description="Date d'état juridique"
    )
    prep_work: Optional[str] = Field(
        None, alias="prepWork", description="Travaux préparatoires"
    )
    appellations: Optional[list[str]] = Field(None, description="Appellations")
    articles: Optional[list[ConsultArticle]] = Field(
        None, description="Liste des articles racine du texte. La liste est ordonnée"
    )
    signers: Optional[str] = Field(None, description="Signataires")
    nor: Optional[str] = Field(
        None, description="Numéro NOR", examples=["NCCX8900064L"]
    )
    id: Optional[str] = Field(
        None,
        description="Identifiant du texte",
        examples=["LEGITEXT000006070994_01-08-2016"],
    )
    nota: Optional[str] = Field(None, description="Nota")
    notice: Optional[str] = Field(None, description="Notice")
    observations: Optional[str] = Field(None, description="Observations")
    page_pdf: Optional[str] = Field(
        None,
        alias="pagePdf",
        description="Le numéro de la page de l'article dans le journal officiel",
        examples=["14"],
    )
    text_number: Optional[str] = Field(
        None, alias="textNumber", description="Numéro de texte"
    )
    id_conteneur: Optional[str] = Field(
        None,
        alias="idConteneur",
        description="Identifiant du conteneur du texte lorsqu'il en existe un.",
    )
    file_name: Optional[str] = Field(None, alias="fileName")
    date_debut_version: Optional[str] = Field(
        None, alias="dateDebutVersion", description="Date de début de la version"
    )
    alias: Optional[str] = Field(None, description="Alias")
    rectificatif: Optional[str] = Field(None, description="Rectificatif")
    inap: Optional[bool] = Field(None, description="INAP")
    cid: Optional[str] = Field(
        None, description="Chronical ID du texte", examples=["JORFTEXT000000882738"]
    )
    sections: Optional[list[ConsultSection]] = Field(
        None,
        description="Liste des sections de premier niveau du texte. La liste est ordonnée",
    )
    liens: Optional[list[TexteLien]] = Field(None, description="Liens")
    date_fin_version: Optional[str] = Field(
        None, alias="dateFinVersion", description="Date de fin de la version"
    )
    execution_time: Optional[int] = Field(
        None, alias="executionTime", description="Temps d'exécution"
    )
    file_size: Optional[str] = Field(None, alias="fileSize")
    visa: Optional[str] = Field(None, description="Visas")
    jorf_text: Optional[str] = Field(
        None, alias="jorfText", description="Titre du texte correspondant"
    )
    juris_state: Optional[str] = Field(
        None, alias="jurisState", description="Etat juridique du texte"
    )
    date_texte: Optional[datetime] = Field(
        None, alias="dateTexte", description="Date de signature"
    )
    file_path: Optional[str] = Field(None, alias="filePath")
    text_abroge: Optional[bool] = Field(
        None, alias="textAbroge", description="Indique si le texte est abrogé"
    )


Niveau.model_rebuild()
Facet.model_rebuild()
CritereDTO.model_rebuild()
Tms.model_rebuild()
ConsultSection.model_rebuild()
