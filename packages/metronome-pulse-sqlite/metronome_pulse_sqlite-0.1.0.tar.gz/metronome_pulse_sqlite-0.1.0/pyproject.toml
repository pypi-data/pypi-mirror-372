[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "metronome-pulse-sqlite"
dynamic = ["version"]
description = "High-performance SQLite connector for DataPulse - async-first, local storage, and development features"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "DataMetronome Team", email = "team@datametronome.dev"}
]
maintainers = [
    {name = "DataMetronome Team", email = "team@datametronome.dev"}
]
keywords = ["sqlite", "database", "connector", "async", "data-pipeline", "etl", "data-quality", "local-storage"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: AsyncIO",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    "metronome-pulse-core>=0.1.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0; python_version < '3.12'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
]
performance = [
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.61.0",
    "psutil>=5.9.0",
]

[project.urls]
Homepage = "https://github.com/datametronome/metronome-pulse-sqlite"
Repository = "https://github.com/datametronome/metronome-pulse-sqlite"
Documentation = "https://datametronome.dev/docs/pulse-sqlite"
Issues = "https://github.com/datametronome/metronome-pulse-sqlite/issues"
Changelog = "https://github.com/datametronome/metronome-pulse-sqlite/blob/main/CHANGELOG.md"
Download = "https://pypi.org/project/metronome-pulse-sqlite/#files"

[tool.hatch.version]
path = "metronome_pulse_sqlite/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["metronome_pulse_sqlite"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["metronome_pulse_sqlite"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --tb=short"
testpaths = ["tests"]
markers = [
    "unit: Unit tests (fast)",
    "integration: Integration tests (slower)",
    "slow: Slow tests (benchmarks, etc.)",
    "asyncio: Async tests",
]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["metronome_pulse_sqlite"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]



