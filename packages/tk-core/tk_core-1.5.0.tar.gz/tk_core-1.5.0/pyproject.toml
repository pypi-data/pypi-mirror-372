[project]
name = "tk_core"
version = "1.5.0"
description = "Centralized core functionality for Terakeet SD, DS, DE, etc."
readme = "README.md"
dependencies = [
  "boto3",
  "botocore",
  "pandas==2.1.4",
  "pydantic",
  "python-dotenv",
  "scrapingbee",
  "serpapi",
  "snowflake-connector-python[pandas]",
  "snowflake-snowpark-python[pandas]",
  "ujson",
  "redis==5.3.0",
  "retry",
  "rich",
  "trafilatura==1.7.0",
  "extruct",
  "beautifulsoup4",
  "newspaper3k",
  "opengraph",
  "jsonschema",
  "psutil",
  "tqdm",
  "lxml==5.1.0",
]
[project.optional-dependencies]
dev = [
  "pre-commit",
  "ruff",
  "build",
  "twine",
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-mock",
  "moto",
  "requests-mock"
]

[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
# addopts = "--cov=src"
testpaths = "test"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.ruff]
line-length = 127
exclude = ["test","examples"]

[tool.ruff.lint]
select = [
  "ANN", # annotations
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  #flake8-bandit
  "S"
]

ignore = [
    "ANN002", # Args type hint skip
    "ANN003", # Kwargs type hint skip
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "ANN204", # Missing return type annotation for special method `__init__`
    "ANN401", # Allow Any type declaration
    "COM812", # Missing trailing comma in Python 3.5+
    "SIM108", # ternary operator required
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

