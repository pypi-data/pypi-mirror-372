# coding: utf-8

"""
    Wrk Automation Platform - API v1

    The Wrk API is organized around REST. Our API has predictable resource-oriented URLs, accepts and returns JSON-encoded requests and responses. It uses standard HTTP response codes, authentication, and verbs.  Please note you need will an API key with the appropriate access to use the following APIs. The API key can be obtained from [this page](https://account.wrk.com/api-key) in your Wrk account. To elevate access to your account, please [contact your Sales team](https://www.wrk.com/meet-automation-expert).

    The version of the OpenAPI document: 3.2.2
    Contact: support@wrk.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wrk_platform_sdk.api.launches_api import LaunchesApi


class TestLaunchesApi(unittest.TestCase):
    """LaunchesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = LaunchesApi()

    def tearDown(self) -> None:
        pass

    def test_get_launch_by_id(self) -> None:
        """Test case for get_launch_by_id

        Fetch a specific Wrkflow Launch
        """
        pass

    def test_get_launches(self) -> None:
        """Test case for get_launches

        Fetch multiple Wrkflow Launches
        """
        pass

    def test_launch_wrkflow(self) -> None:
        """Test case for launch_wrkflow

        Launch a Wrkflow
        """
        pass

    def test_launch_wrkflow_sync(self) -> None:
        """Test case for launch_wrkflow_sync

        Launches the wrkflow via a POST request and returns the result of the wrkflow, or a default response if no results were produced within the specified timeout.
        """
        pass

    def test_pause_launch(self) -> None:
        """Test case for pause_launch

        Pause a Wrkflow Launch
        """
        pass

    def test_resume_launch(self) -> None:
        """Test case for resume_launch

        Resume a Wrkflow Launch
        """
        pass


if __name__ == '__main__':
    unittest.main()
