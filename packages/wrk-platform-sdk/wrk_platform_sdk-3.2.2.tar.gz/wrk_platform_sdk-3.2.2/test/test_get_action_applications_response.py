# coding: utf-8

"""
    Wrk Automation Platform - API v1

    The Wrk API is organized around REST. Our API has predictable resource-oriented URLs, accepts and returns JSON-encoded requests and responses. It uses standard HTTP response codes, authentication, and verbs.  Please note you need will an API key with the appropriate access to use the following APIs. The API key can be obtained from [this page](https://account.wrk.com/api-key) in your Wrk account. To elevate access to your account, please [contact your Sales team](https://www.wrk.com/meet-automation-expert).

    The version of the OpenAPI document: 3.2.2
    Contact: support@wrk.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wrk_platform_sdk.models.get_action_applications_response import GetActionApplicationsResponse

class TestGetActionApplicationsResponse(unittest.TestCase):
    """GetActionApplicationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetActionApplicationsResponse:
        """Test GetActionApplicationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetActionApplicationsResponse`
        """
        model = GetActionApplicationsResponse()
        if include_optional:
            return GetActionApplicationsResponse(
                action_applications = [
                    wrk_platform_sdk.models.action_application.ActionApplication(
                        metadata = wrk_platform_sdk.models.wrk_action_resource_metadata.WrkActionResourceMetadata(
                            organization = 'wrktech', 
                            library = 'core', 
                            name = 'wrktech/wrk-action-resource', ), 
                        spec = wrk_platform_sdk.models.action_application_spec.ActionApplication_spec(
                            description = 'Accesswire is a press release distribution service that helps businesses distribute their news and announcements to various media outlets.', 
                            display_name = 'Accesswire', 
                            id = '1877', 
                            publisher = 'Accesswire', 
                            synonyms = ["Accesswire Canada"], 
                            tags = ["Data Providers","Databases"], 
                            website_url = 'https://www.accesswire.ca/', ), )
                    ]
            )
        else:
            return GetActionApplicationsResponse(
                action_applications = [
                    wrk_platform_sdk.models.action_application.ActionApplication(
                        metadata = wrk_platform_sdk.models.wrk_action_resource_metadata.WrkActionResourceMetadata(
                            organization = 'wrktech', 
                            library = 'core', 
                            name = 'wrktech/wrk-action-resource', ), 
                        spec = wrk_platform_sdk.models.action_application_spec.ActionApplication_spec(
                            description = 'Accesswire is a press release distribution service that helps businesses distribute their news and announcements to various media outlets.', 
                            display_name = 'Accesswire', 
                            id = '1877', 
                            publisher = 'Accesswire', 
                            synonyms = ["Accesswire Canada"], 
                            tags = ["Data Providers","Databases"], 
                            website_url = 'https://www.accesswire.ca/', ), )
                    ],
        )
        """

    def testGetActionApplicationsResponse(self):
        """Test GetActionApplicationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
