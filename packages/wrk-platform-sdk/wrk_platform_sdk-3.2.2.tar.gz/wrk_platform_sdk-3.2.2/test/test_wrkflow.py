# coding: utf-8

"""
    Wrk Automation Platform - API v1

    The Wrk API is organized around REST. Our API has predictable resource-oriented URLs, accepts and returns JSON-encoded requests and responses. It uses standard HTTP response codes, authentication, and verbs.  Please note you need will an API key with the appropriate access to use the following APIs. The API key can be obtained from [this page](https://account.wrk.com/api-key) in your Wrk account. To elevate access to your account, please [contact your Sales team](https://www.wrk.com/meet-automation-expert).

    The version of the OpenAPI document: 3.2.2
    Contact: support@wrk.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wrk_platform_sdk.models.wrkflow import Wrkflow

class TestWrkflow(unittest.TestCase):
    """Wrkflow unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Wrkflow:
        """Test Wrkflow
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Wrkflow`
        """
        model = Wrkflow()
        if include_optional:
            return Wrkflow(
                uuid = '08856ce3-8d86-4206-857f-56c5f0ab71b8',
                name = 'My automated workflow',
                short_description = 'This workflow will complete a bunch of automated task',
                long_description = 'Simply launch this workflow, sit back and relax',
                launch_parameters_json_schema = {"type":"object","required":["name"],"properties":{"name":{"key":"name","type":"string","title":"A name field required","format":"text","propertyOrder":1000},"color":{"key":"color","type":"string","title":"An optional field for color","format":"text","propertyOrder":1010}}},
                webhook_url = 'https://webhook.wrkapi.com/v1/webhooks-execute/08856ce3-8d86-4206-857f-56c5f0ab71b8',
                schedules = [{"schedule":"0 06 1/1 * ? *","description":"At 06:00 AM"}],
                wrkflow_definition = wrk_platform_sdk.models.wrkflow_definition.WrkflowDefinition(
                    uuid = '08856ce3-8d86-4206-857f-56c5f0ab71b8', 
                    name = 'My automated workflow', 
                    input_schema = {"type":"object","required":["name"],"properties":{"name":{"key":"name","type":"string","title":"A name field required","format":"text","propertyOrder":1000},"color":{"key":"color","type":"string","title":"An optional field for color","format":"text","propertyOrder":1010}}}, 
                    actions = [
                        wrk_platform_sdk.models.wrk_action_definition.WrkActionDefinition(
                            wrk_action_ref = wrk_platform_sdk.models.wrk_action_resource_reference.WrkActionResourceReference(
                                organization = 'wrktech', 
                                library = 'core', 
                                name = 'wrktech/wrk-action-resource', ), 
                            input_values = {"First name":"John","Last name":"Doe"}, 
                            fields_to_capture = {"type":"object","required":[],"properties":{"result":{"key":"result","type":"string","title":"An output of the Wrk Action","format":"text","propertyOrder":1000}}}, )
                        ], 
                    entry_action_index = 0, 
                    links = [
                        wrk_platform_sdk.models.wrk_action_link.WrkActionLink(
                            from = 0, 
                            to = 1, 
                            outcome_ref = wrk_platform_sdk.models.wrk_action_resource_reference.WrkActionResourceReference(
                                organization = 'wrktech', 
                                library = 'core', 
                                name = 'wrktech/wrk-action-resource', ), )
                        ], )
            )
        else:
            return Wrkflow(
                uuid = '08856ce3-8d86-4206-857f-56c5f0ab71b8',
                name = 'My automated workflow',
        )
        """

    def testWrkflow(self):
        """Test Wrkflow"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
