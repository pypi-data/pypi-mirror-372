# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper
from shellcardmanagementapis.models.card_bundle import CardBundle


class SummaryofbundleResponse(object):

    """Implementation of the 'SummaryofbundleResponse' model.

    Attributes:
        payer_id (int): Payer Id of the bundles and cards. Example: 123456
        payer_number (str): Payer Number of the bundles and cards. Example:
            GB000000123
        account_id (int): The model property of type int.
        account_number (str): Account Number of the bundle. Example:
            GB000000123
        count_of_cards_not_in_bundle (int): Count of cards that are not part
            of the bundle in a given account.
        card_bundles (CardBundle): The model property of type CardBundle.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "payer_id": 'PayerId',
        "payer_number": 'PayerNumber',
        "account_id": 'AccountId',
        "account_number": 'AccountNumber',
        "count_of_cards_not_in_bundle": 'CountOfCardsNotInBundle',
        "card_bundles": 'CardBundles'
    }

    _optionals = [
        'payer_id',
        'payer_number',
        'account_id',
        'account_number',
        'count_of_cards_not_in_bundle',
        'card_bundles',
    ]

    def __init__(self,
                 payer_id=APIHelper.SKIP,
                 payer_number=APIHelper.SKIP,
                 account_id=APIHelper.SKIP,
                 account_number=APIHelper.SKIP,
                 count_of_cards_not_in_bundle=APIHelper.SKIP,
                 card_bundles=APIHelper.SKIP):
        """Constructor for the SummaryofbundleResponse class"""

        # Initialize members of the class
        if payer_id is not APIHelper.SKIP:
            self.payer_id = payer_id 
        if payer_number is not APIHelper.SKIP:
            self.payer_number = payer_number 
        if account_id is not APIHelper.SKIP:
            self.account_id = account_id 
        if account_number is not APIHelper.SKIP:
            self.account_number = account_number 
        if count_of_cards_not_in_bundle is not APIHelper.SKIP:
            self.count_of_cards_not_in_bundle = count_of_cards_not_in_bundle 
        if card_bundles is not APIHelper.SKIP:
            self.card_bundles = card_bundles 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        payer_id = dictionary.get("PayerId") if dictionary.get("PayerId") else APIHelper.SKIP
        payer_number = dictionary.get("PayerNumber") if dictionary.get("PayerNumber") else APIHelper.SKIP
        account_id = dictionary.get("AccountId") if dictionary.get("AccountId") else APIHelper.SKIP
        account_number = dictionary.get("AccountNumber") if dictionary.get("AccountNumber") else APIHelper.SKIP
        count_of_cards_not_in_bundle = dictionary.get("CountOfCardsNotInBundle") if dictionary.get("CountOfCardsNotInBundle") else APIHelper.SKIP
        card_bundles = CardBundle.from_dictionary(dictionary.get('CardBundles')) if 'CardBundles' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(payer_id,
                   payer_number,
                   account_id,
                   account_number,
                   count_of_cards_not_in_bundle,
                   card_bundles)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'payer_id={(self.payer_id if hasattr(self, "payer_id") else None)!r}, '
                f'payer_number={(self.payer_number if hasattr(self, "payer_number") else None)!r}, '
                f'account_id={(self.account_id if hasattr(self, "account_id") else None)!r}, '
                f'account_number={(self.account_number if hasattr(self, "account_number") else None)!r}, '
                f'count_of_cards_not_in_bundle={(self.count_of_cards_not_in_bundle if hasattr(self, "count_of_cards_not_in_bundle") else None)!r}, '
                f'card_bundles={(self.card_bundles if hasattr(self, "card_bundles") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'payer_id={(self.payer_id if hasattr(self, "payer_id") else None)!s}, '
                f'payer_number={(self.payer_number if hasattr(self, "payer_number") else None)!s}, '
                f'account_id={(self.account_id if hasattr(self, "account_id") else None)!s}, '
                f'account_number={(self.account_number if hasattr(self, "account_number") else None)!s}, '
                f'count_of_cards_not_in_bundle={(self.count_of_cards_not_in_bundle if hasattr(self, "count_of_cards_not_in_bundle") else None)!s}, '
                f'card_bundles={(self.card_bundles if hasattr(self, "card_bundles") else None)!s})')
