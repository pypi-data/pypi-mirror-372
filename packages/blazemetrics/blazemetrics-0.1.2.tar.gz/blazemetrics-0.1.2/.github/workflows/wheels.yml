# name: Build and Publish Wheels

# on:
#   push:
#     tags:
#       - 'v*'
#   release:
#     types: [published]
#   workflow_dispatch:

# jobs:
#   build-wheels:
#     name: Build wheels (${{ matrix.os }})
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-latest, macos-latest, windows-latest]
#     steps:
#       - uses: actions/checkout@v4

#       # Build wheels for all supported Python versions on each OS
#       - name: Build wheels with maturin
#         uses: PyO3/maturin-action@v1
#         with:
#           # manylinux for Linux wheels; universal2 for macOS; MSVC for Windows
#           manylinux: auto
#           command: build
#           args: -o dist

#       - name: Build sdist
#         if: matrix.os == 'ubuntu-latest'
#         uses: PyO3/maturin-action@v1
#         with:
#           command: sdist
#           args: -o dist

#       - name: Upload build artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: wheels-${{ matrix.os }}
#           path: dist/*

#   publish:
#     name: Publish to PyPI
#     needs: build-wheels
#     runs-on: ubuntu-latest
#     if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'release'
#     steps:
#       - uses: actions/download-artifact@v4
#         with:
#           path: dist

#       - name: Flatten artifact directory
#         shell: bash
#         run: |
#           mkdir -p upload
#           find dist -type f -name "*.whl" -exec cp {} upload/ \;
#           find dist -type f -name "*.tar.gz" -exec cp {} upload/ \;
#           ls -la upload

#       - name: Publish to PyPI
#         uses: pypa/gh-action-pypi-publish@release/v1
#         with:
#           packages-dir: upload
#           password: ${{ secrets.PYPI_API_TOKEN }} 