[tool.poetry]
name = "django-content-license"
version = "v0.2.2"
description = "Store license information alongside your Django data models"
authors = ["Sam Jennings"]
license = "MIT"
readme = "README.md"
packages = [{include = "licensing"}]
homepage = "https://github.com/SamuelJennings/django-content-license"
keywords = ["django", "research", "science", "datasets", "research management", "open source", "open science", "FAIR"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
django = ">=3.2"

[tool.poetry.group.dev.dependencies]
coverage = "^7.2.1"
black = "^23.1.0"
pytest = "^7.2.2"
django-coverage-plugin = "^3.0.0"
pytest-django = "^4.5.2"
django-stubs = "^1.15.0"
pylint-django = "^2.5.3"
invoke = "^2.0.0"
tox = "^4.4.6"
deptry = "^0.8.0"
mypy = "^1.2.0"
pre-commit = "^3.2.2"
pytest-cov = "^4.0.0"
types-requests = "^2.28.11.17"
types-python-dateutil = "^2.8.19.12"
pytest-sugar = "^0.9.7"
fairdm-dev-tools = {git = "https://github.com/FAIR-DM/dev-tools"}
ruff = "^0.12.10"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
target-version = ['py38']
preview = true

[tool.isort]
profile = "black"

[tool.mypy]
files = ["licensing"]
disallow_untyped_defs = "False"
disallow_any_unimported = "False"
ignore_missing_imports = "True"
no_implicit_optional = "True"
check_untyped_defs = "False"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
exclude = ["docs/","migrations/","tests/settings.py"]
mypy_path = "licensing/"
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "tests.settings"
ignore_missing_model_attributes = "True"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
exclude = ['docs/']
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101","S105"]
# "**/models.py" = ["A003",]
# "docs/conf.py" = ["*"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
pythonpath = [".", "tests"]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py", "tests.py", "*_tests.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--reuse-db",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

filterwarnings = [
    "ignore",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.report]
skip_empty = true
show_missing = true

[tool.coverage.run]
branch = "true"
source = ["licensing"]


[tool.deptry]
extend_exclude = [
    "tasks.py",
    "docs/"
]
ignore_transitive = [
    "toml",
]


[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist = true
envlist = py38, py39, py310, py311

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
passenv = PYTHON_VERSION
setenv =
    DJANGO_SETTINGS_MODULE=tests.settings
allowlist_externals = poetry
commands =
    pip install -r requirements.txt
    pytest --cov --cov-config=pyproject.toml --cov-report=xml
"""
