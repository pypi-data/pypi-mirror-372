name: Publish to PyPI and TestPyPI (Trusted Publishing)

on:
  push:
    branches: ["main"]
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    name: Build sdist and wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build twine
      - name: Build distributions
        run: python -m build
      - name: Verify metadata
        run: python -m twine check dist/*
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/*
          if-no-files-found: error

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: testpypi
      url: https://test.pypi.org/p/workspace-qdrant-mcp # optional, for nice links in the UI
    permissions:
      id-token: write # required for Trusted Publishing
      contents: read # good practice
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/
      - name: Publish to TestPyPI (OIDC)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true # convenient for CI reruns on TestPyPI

  publish-to-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/p/workspace-qdrant-mcp # optional
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/
      - name: Publish to PyPI (OIDC)
        uses: pypa/gh-action-pypi-publish@release/v1
        # By default, the action runs `twine check`, uploads all files, and (since v1.11) emits PEP 740 attestations.
