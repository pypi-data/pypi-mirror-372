r'''
 _     _____ _   _ _____   _____ _   _  ____ ___  ____  _____ ____  ____
| |   | ____| \ | |__  /  | ____| \ | |/ ___/ _ \|  _ \| ____|  _ \/ ___|
| |   |  _| |  \| | / /   |  _| |  \| | |  | | | | | | |  _| | |_) \___ \
| |___| |___| |\  |/ /_   | |___| |\  | |__| |_| | |_| | |___|  _ < ___) |
|_____|_____|_| \_/____|  |_____|_| \_|\____\___/|____/|_____|_| \_|____/


Calculate the BiSS C CRC6 checksum for a 32-bit data word using a precomputed lookup table.

    This implementation uses the standard BiSS CRC6 polynomial (x⁶ + x + 1) with an initial value
    of 0x3F and final XOR of 0x00. The calculation is optimized using a 256-byte lookup table
    for efficient processing of 32-bit data words.

Author:
    LENZ ENCODERS, 2020-2025
'''


def biss_crc6_calc(data: int) -> int:
    """
    Calculate the BiSS C CRC6 checksum for a 32-bit data word.

    Args:
        data (int): A 32-bit integer representing the data for which to calculate the CRC6 checksum.

    Returns:
        int: The calculated 6-bit CRC checksum.
    """
    crc6_table = [
        0x00, 0x0C, 0x18, 0x14, 0x30, 0x3C, 0x28, 0x24, 0x60, 0x6C, 0x78, 0x74, 0x50, 0x5C, 0x48, 0x44,
        0xC0, 0xCC, 0xD8, 0xD4, 0xF0, 0xFC, 0xE8, 0xE4, 0xA0, 0xAC, 0xB8, 0xB4, 0x90, 0x9C, 0x88, 0x84,
        0x8C, 0x80, 0x94, 0x98, 0xBC, 0xB0, 0xA4, 0xA8, 0xEC, 0xE0, 0xF4, 0xF8, 0xDC, 0xD0, 0xC4, 0xC8,
        0x4C, 0x40, 0x54, 0x58, 0x7C, 0x70, 0x64, 0x68, 0x2C, 0x20, 0x34, 0x38, 0x1C, 0x10, 0x04, 0x08,
        0x14, 0x18, 0x0C, 0x00, 0x24, 0x28, 0x3C, 0x30, 0x74, 0x78, 0x6C, 0x60, 0x44, 0x48, 0x5C, 0x50,
        0xD4, 0xD8, 0xCC, 0xC0, 0xE4, 0xE8, 0xFC, 0xF0, 0xB4, 0xB8, 0xAC, 0xA0, 0x84, 0x88, 0x9C, 0x90,
        0x98, 0x94, 0x80, 0x8C, 0xA8, 0xA4, 0xB0, 0xBC, 0xF8, 0xF4, 0xE0, 0xEC, 0xC8, 0xC4, 0xD0, 0xDC,
        0x58, 0x54, 0x40, 0x4C, 0x68, 0x64, 0x70, 0x7C, 0x38, 0x34, 0x20, 0x2C, 0x08, 0x04, 0x10, 0x1C,
        0x28, 0x24, 0x30, 0x3C, 0x18, 0x14, 0x00, 0x0C, 0x48, 0x44, 0x50, 0x5C, 0x78, 0x74, 0x60, 0x6C,
        0xE8, 0xE4, 0xF0, 0xFC, 0xD8, 0xD4, 0xC0, 0xCC, 0x88, 0x84, 0x90, 0x9C, 0xB8, 0xB4, 0xA0, 0xAC,
        0xA4, 0xA8, 0xBC, 0xB0, 0x94, 0x98, 0x8C, 0x80, 0xC4, 0xC8, 0xDC, 0xD0, 0xF4, 0xF8, 0xEC, 0xE0,
        0x64, 0x68, 0x7C, 0x70, 0x54, 0x58, 0x4C, 0x40, 0x04, 0x08, 0x1C, 0x10, 0x34, 0x38, 0x2C, 0x20,
        0x3C, 0x30, 0x24, 0x28, 0x0C, 0x00, 0x14, 0x18, 0x5C, 0x50, 0x44, 0x48, 0x6C, 0x60, 0x74, 0x78,
        0xFC, 0xF0, 0xE4, 0xE8, 0xCC, 0xC0, 0xD4, 0xD8, 0x9C, 0x90, 0x84, 0x88, 0xAC, 0xA0, 0xB4, 0xB8,
        0xB0, 0xBC, 0xA8, 0xA4, 0x80, 0x8C, 0x98, 0x94, 0xD0, 0xDC, 0xC8, 0xC4, 0xE0, 0xEC, 0xF8, 0xF4,
        0x70, 0x7C, 0x68, 0x64, 0x40, 0x4C, 0x58, 0x54, 0x10, 0x1C, 0x08, 0x04, 0x20, 0x2C, 0x38, 0x34
    ]

    crc = crc6_table[(data >> 24) & 0x3]
    crc = crc6_table[((data >> 16) & 0xFF) ^ crc]
    crc = crc6_table[((data >> 8) & 0xFF) ^ crc]
    crc = crc6_table[(data & 0xFF) ^ crc]
    crc = ((crc ^ 0xFF) >> 2) & 0x3F
    return crc
