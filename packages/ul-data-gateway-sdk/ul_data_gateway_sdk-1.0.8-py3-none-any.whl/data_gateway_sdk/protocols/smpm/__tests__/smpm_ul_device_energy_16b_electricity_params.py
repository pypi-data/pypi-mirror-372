from data_gateway_sdk.protocols.smpm.smpm_ul_device_energy_16b_electricity_params import SmpmUlDeviceEnergy16BElectricityParamsData
from data_gateway_sdk.utils.buf_ref import BufRef


def test_smpm_ul_device_energy_16b_electricity_params() -> None:
    case_serialized = bytes.fromhex("bcd34834128d841b376e8585851a0900")
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=23.3, current_ch_2=23.3, current_ch_3=23.3, voltage_ch1=220, voltage_ch2=220, voltage_ch3=220, k_ch1=0.33, k_ch2=0.33, k_ch3=0.33, freq=53.3) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=23.3, current_ch_2=23.3, current_ch_3=23.3, voltage_ch1=220, voltage_ch2=220, voltage_ch3=220, k_ch1=0.33, k_ch2=0.33, k_ch3=0.33, freq=53.3))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000000000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0fffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f0000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0fffffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000000000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0fffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f0000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0fffffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000000000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0fffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f0000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0fffffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000000000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0fffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f0000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0fffffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000000000000000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0ffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ffffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000000000000000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0ffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ffffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000000000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0ffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f00000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ffffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000000000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0ffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f0000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ffffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000000000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0fffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f0000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0fffffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000000000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0fffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f0000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0fffffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000000000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0fffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f0000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0fffffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000000000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0fffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f0000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0fffffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000000000000000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0ffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ffffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000000000000000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0ffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ffffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000000000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0ffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f00000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ffffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000000000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000000080ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c07f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc030000000000c0ffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f0000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e03f80ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ff7f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300000000e0ffffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f000000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0fffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f0000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080fffffffffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f000000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0fffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f0000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080fffffffffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f000000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0fffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f0000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080fffffffffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f000000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0fffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f0000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080fffffffffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f00000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0ffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffffffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f00000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0ffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffffffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0000000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0ffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f00000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffffffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f000000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0ffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f0000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffffffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f000000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0fffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f0000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080fffffffffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f000000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0fffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f0000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080fffffffffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f000000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0fffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f0000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080fffffffffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f000000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0fffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f0000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080fffffffffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f00000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0ffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffffffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f00000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0ffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffffffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0000000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0ffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f00000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffffffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f000000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1f0080ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc07f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ff1fc0ffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f0000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffff3f80ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffff7f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc03000080ffffffffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000000000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0fffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f0000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0fffffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000000000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0fffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f0000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0fffffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000000000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0fffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f0000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0fffffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000000000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0fffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f0000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0fffffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f000000000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0ffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ffffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f000000000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0ffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ffffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000000000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0ffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f00000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ffffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000000000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0ffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f0000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ffffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000000000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0fffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f0000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0fffffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000000000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0fffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f0000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0fffffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000000000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0fffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f0000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0fffffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000000000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0fffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f0000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0fffffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f000000000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0ffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ffffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f000000000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0ffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ffffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000000000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0ffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f00000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ffffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000000000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00000080ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c07f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f0000c0ffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f0000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e03f80ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ff7f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fe7f00e0ffffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f000000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0fffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f0000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fefffffffffffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f000000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0fffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f0000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fefffffffffffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f000000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0fffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f0000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fefffffffffffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f000000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0fffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f0000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fefffffffffffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f00000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0ffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffffffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f00000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0ffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffffffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0000000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0ffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f00000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffffffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f000000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0ffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f0000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffffffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f000000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0fffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f0000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fefffffffffffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f000000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0fffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f0000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fefffffffffffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f000000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0fffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f0000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fefffffffffffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f000000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0fffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f0000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300fefffffffffffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f00000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0ffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffffffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f00000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0ffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffffffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0000000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0ffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f00000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffffffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f000000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1f0080ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc07f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffff1fc0ffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f0000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffff3f80ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffff7f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bc0300feffffffffffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=0.0, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000000000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0fffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f0000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0fffffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000000000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0fffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f0000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0fffffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000000000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0fffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f0000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0fffffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000000000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0fffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f0000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0fffffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0100000000000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0ffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ffffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0100000000000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0ffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ffffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000000000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0ffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f00000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ffffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000000000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0ffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f0000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ffffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000000000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0fffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f0000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0fffffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000000000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0fffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f0000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0fffffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000000000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0fffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f0000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0fffffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000000000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0fffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f0000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0fffffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0100000000000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0ffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ffffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0100000000000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0ffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ffffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000000000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0ffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f00000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ffffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000000000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000000080ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c07f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff01000000c0ffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f0000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e03f80ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ff7f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff010000e0ffffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f000000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0fffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f0000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180fffffffffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f000000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0fffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f0000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180fffffffffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f000000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0fffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f0000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180fffffffffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f000000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0fffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f0000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180fffffffffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f00000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0ffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffffffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f00000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0ffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffffffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0000000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0ffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f00000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffffffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f000000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0ffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f0000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffffffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f000000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0fffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f0000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180fffffffffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f000000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0fffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f0000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180fffffffffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f000000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0fffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f0000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180fffffffffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f000000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0fffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f0000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180fffffffffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f00000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0ffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffffffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f00000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0ffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffffffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0000000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0ffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f00000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffffffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f000000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1f0080ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc07f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ff1fc0ffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f0000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffff3f80ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffff7f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbff0180ffffffffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=0.0, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000000000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0fffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f0000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0fffffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000000000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0fffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f0000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0fffffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000000000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0fffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f0000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0fffffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000000000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0fffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f0000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0fffffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f000000000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0ffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ffffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f000000000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0ffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ffffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000000000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0ffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f00000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ffffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000000000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0ffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f0000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ffffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000000000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0fffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f0000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0fffffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000000000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0fffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f0000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0fffffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000000000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0fffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f0000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0fffffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000000000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0fffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f0000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0fffffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f000000000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0ffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ffffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f000000000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0ffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ffffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000000000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0ffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f00000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ffffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000000000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00000080ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c07f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f0000c0ffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f0000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e03f80ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ff7f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffff7f00e0ffffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=0.0, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f000000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0fffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f0000fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80fffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f00fefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbfffffffffffffffffefefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f000000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0fffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f0000fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80fffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f00fefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbfffffffffffffffffefe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f000000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0fffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f0000fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80fffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f00fe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbfffffffffffffffffe00feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f000000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0fffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f0000fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80fffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f00fe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbfffffffffffffffffe0000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f00000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0ffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f000000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80ff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f0000fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffffffff00fefeff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f00000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0ffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f000000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80ff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f0000fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffffffff00fe00ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0000000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0ffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f00000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80ff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f000000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffffffff0000feff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f000000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0ffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f0000000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80ff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f00000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffffffff000000ff0f00")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=70.95) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=70.95, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f000000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0fffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f0000fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80fffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f00fefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbfffffffffffffffffefefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f000000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0fffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f0000fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80fffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f00fefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbfffffffffffffffffefe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f000000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0fffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f0000fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80fffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f00fe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbfffffffffffffffffe00fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f000000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0fffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f0000fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80fffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f00fe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbfffffffffffffffffe0000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=1.54, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f00000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0ffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f000000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80ff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f0000fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffffffff00fefe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f00000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0ffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f000000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80ff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f0000fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffffffff00fe00000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=1.54, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0000000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0ffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f00000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80ff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f000000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffffffff0000fe000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=1.54, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f000000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1f0080ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc07f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffff1fc0ffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=0, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f0000000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffff3f80ff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=0, voltage_ch3=511))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffff7f00000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=0))  # noqa: E501
    case_serialized = bytes.fromhex("bcfbffffffffffffffff000000000000")  # overflow
    assert SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, freq=30.0) == SmpmUlDeviceEnergy16BElectricityParamsData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceEnergy16BElectricityParamsData.serialize(SmpmUlDeviceEnergy16BElectricityParamsData(current_ch_1=163.83, current_ch_2=163.83, current_ch_3=163.83, freq=30.0, k_ch1=-1.0, k_ch2=-1.0, k_ch3=-1.0, voltage_ch1=511, voltage_ch2=511, voltage_ch3=511))  # noqa: E501
