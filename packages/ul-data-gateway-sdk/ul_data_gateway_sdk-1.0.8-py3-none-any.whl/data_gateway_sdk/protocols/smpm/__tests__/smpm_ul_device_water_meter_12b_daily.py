from datetime import timedelta

from data_gateway_sdk.protocols.smpm.smpm_ul_device_water_meter_12b_daily import SmpmUlDeviceWaterMeter12BDailyData
from data_gateway_sdk.utils.buf_ref import BufRef


def test_smpm_ul_device_water_meter_12b_daily() -> None:
    case_serialized = bytes.fromhex("63c0e4eab1062337bae1e42a")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=False, event_reset=True, event_sensor_error=True, direct_flow_volume=112323.3, direct_flow_volume_day_ago=3.5, event_magnet=False, direct_flow_volume_2days_ago=5.5, event_continues_consumption=False, temperature=23, event_temperature_limits=True, battery_volts=3.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=2.788, event_flow_reverse=False, event_no_resource=True, event_system_error=False) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=False, event_reset=True, event_sensor_error=True, direct_flow_volume=112323.3, direct_flow_volume_day_ago=3.5, event_magnet=False, direct_flow_volume_2days_ago=5.5, event_continues_consumption=False, temperature=23, event_temperature_limits=True, battery_volts=3.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=112323.3, event_flow_reverse=False, event_no_resource=True, event_system_error=False))  # noqa: E501
    case_serialized = bytes.fromhex("63e0000000008080ffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000808080c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e0000000008080ffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000808080c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff80ffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff8080c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff80ffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff8080c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ffffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ff80c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ffffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ff80c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffffffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffff80c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffffffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffff80c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e0000000008080ffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000808080c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e0000000008080ffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000808080c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff80ffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff8080c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff80ffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff8080c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ffffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ff80c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ffffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ff80c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffffffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffff80c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffffffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffff80c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff000000008080ffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000808080c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff000000008080ffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000808080c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff80ffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff8080c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff80ffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff8080c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ffffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ff80c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ffffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ff80c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffffffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffff80c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffffffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffff80c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff000000008080ffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000808080c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff000000008080ffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000808080c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff80ffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff8080c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff80ffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff8080c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ffffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ff80c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ffffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ff80c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffffffc00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffff80c00070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffffffc0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffff80c0ff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=0.0, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=0.0, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e0000000008080ffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000808080ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e0000000008080ffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000808080ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff80ffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff8080ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff80ffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff8080ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ffffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ff80ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ffffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ff80ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffffffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffff80ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffffffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffff80ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e0000000008080ffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000808080ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e0000000008080ffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000808080ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff80ffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff8080ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff80ffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ff8080ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ffffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ff80ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ffffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e00000000080ff80ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffffffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffff80ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffffffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63e000000000ffff80ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=0.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=0.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff000000008080ffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000808080ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff000000008080ffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000808080ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff80ffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff8080ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff80ffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff8080ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ffffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ff80ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ffffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ff80ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffffffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffff80ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffffffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffff80ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=0.0, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff000000008080ffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000808080ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff000000008080ffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000808080ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff80ffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff8080ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff80ffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ff8080ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=0.0, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=0.0, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ffffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ff80ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ffffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff0000000080ff80ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=0.0, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=0.0, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffffffff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffff80ff0070")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=0.0, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=0.0, temperature=-35))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffffffffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=92, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=92))  # noqa: E501
    case_serialized = bytes.fromhex("63ff00000000ffff80ffff7f")  # overflow
    assert SmpmUlDeviceWaterMeter12BDailyData(days_ago=timedelta(seconds=2678400.0), event_case_was_opened=True, event_reset=True, event_sensor_error=True, direct_flow_volume=0.0, direct_flow_volume_day_ago=12.7, event_magnet=True, direct_flow_volume_2days_ago=12.7, event_continues_consumption=True, temperature=-35, event_temperature_limits=True, battery_volts=6.3, event_battery_warn=True, event_flow_speed_is_over_limit=True, reverse_flow_volume=4.095, event_flow_reverse=True, event_no_resource=True, event_system_error=True) == SmpmUlDeviceWaterMeter12BDailyData.parse(BufRef(case_serialized))  # noqa: E501
    assert case_serialized == SmpmUlDeviceWaterMeter12BDailyData.serialize(SmpmUlDeviceWaterMeter12BDailyData(battery_volts=6.3, days_ago=timedelta(seconds=2678400.0), direct_flow_volume=8589934.592, direct_flow_volume_2days_ago=12.7, direct_flow_volume_day_ago=12.7, event_battery_warn=True, event_case_was_opened=True, event_continues_consumption=True, event_flow_reverse=True, event_flow_speed_is_over_limit=True, event_magnet=True, event_no_resource=True, event_reset=True, event_sensor_error=True, event_system_error=True, event_temperature_limits=True, reverse_flow_volume=8.191, temperature=-35))  # noqa: E501
