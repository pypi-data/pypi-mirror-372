name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish:
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
      - name: Install Flit
        run: pip install flit
      - name: Install Dependencies
        run: flit install --symlink
      - name: mint API token
        id: mint-token
        run: |
          # retrieve the ambient OIDC token
          resp=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=pypi")
          oidc_token=$(jq -r '.value' <<< "${resp}")

          # exchange the OIDC token for an API token
          resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\": \"${oidc_token}\"}")
          api_token=$(jq -r '.token' <<< "${resp}")

          # mask the newly minted API token, so that we don't accidentally leak it
          echo "::add-mask::${api_token}"

          # see the next step in the workflow for an example of using this step output
          echo "api-token=${api_token}" >> "${GITHUB_OUTPUT}"
      - name: Publish
        env:
          # FLIT_USERNAME: ${{ secrets.FLIT_USERNAME }}
          # FLIT_PASSWORD: ${{ secrets.FLIT_PASSWORD }}
          FLIT_USERNAME: __token__
          FLIT_PASSWORD: ${{ steps.mint-token.outputs.api-token }}
        run: flit publish
