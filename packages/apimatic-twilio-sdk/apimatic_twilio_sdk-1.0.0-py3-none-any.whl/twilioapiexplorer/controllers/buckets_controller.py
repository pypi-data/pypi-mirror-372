# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.created_76 import Created76
from twilioapiexplorer.models.ok_282 import OK282
from twilioapiexplorer.models.ok_283 import OK283


class BucketsController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(BucketsController, self).__init__(config)

    def create_bucket(self,
                      service_sid,
                      rate_limit_sid,
                      accept,
                      max,
                      interval):
        """Does a POST request to /v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets.

        Create a new Bucket for a Rate Limit

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) the
                resource is associated with.
            rate_limit_sid (str): (Required) The Twilio-provided string that
                uniquely identifies the Rate Limit resource.
            accept (str): The request header parameter.
            max (int): (Required) Maximum number of requests permitted in
                during the interval.
            interval (int): (Required) Number of seconds that the rate limit
                will be enforced over.

        Returns:
            Created76: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('RateLimitSid')
                            .value(rate_limit_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Max')
                        .value(max))
            .form_param(Parameter()
                        .key('Interval')
                        .value(interval))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created76.from_dictionary)
        ).execute()

    def list_bucket(self,
                    page_size,
                    service_sid,
                    rate_limit_sid,
                    accept):
        """Does a GET request to /v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets.

        Retrieve a list of all Buckets for a Rate Limit.

        Args:
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) the
                resource is associated with.
            rate_limit_sid (str): (Required) The Twilio-provided string that
                uniquely identifies the Rate Limit resource.
            accept (str): The request header parameter.

        Returns:
            OK282: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('RateLimitSid')
                            .value(rate_limit_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK282.from_dictionary)
        ).execute()

    def update_bucket(self,
                      service_sid,
                      rate_limit_sid,
                      sid,
                      accept,
                      max,
                      interval):
        """Does a POST request to /v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}.

        Update a specific Bucket.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) the
                resource is associated with.
            rate_limit_sid (str): (Required) The Twilio-provided string that
                uniquely identifies the Rate Limit resource.
            sid (str): (Required) A 34 character string that uniquely
                identifies this Bucket.
            accept (str): The request header parameter.
            max (int): Maximum number of requests permitted in during the
                interval.
            interval (int): Number of seconds that the rate limit will be
                enforced over.

        Returns:
            OK283: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('RateLimitSid')
                            .value(rate_limit_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Max')
                        .value(max))
            .form_param(Parameter()
                        .key('Interval')
                        .value(interval))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK283.from_dictionary)
        ).execute()

    def fetch_bucket(self,
                     service_sid,
                     rate_limit_sid,
                     sid,
                     accept):
        """Does a GET request to /v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}.

        Fetch a specific Bucket.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) the
                resource is associated with.
            rate_limit_sid (str): (Required) The Twilio-provided string that
                uniquely identifies the Rate Limit resource.
            sid (str): (Required) A 34 character string that uniquely
                identifies this Bucket.
            accept (str): The request header parameter.

        Returns:
            OK283: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('RateLimitSid')
                            .value(rate_limit_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK283.from_dictionary)
        ).execute()

    def delete_bucket(self,
                      service_sid,
                      rate_limit_sid,
                      sid):
        """Does a DELETE request to /v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}.

        Delete a specific Bucket.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) the
                resource is associated with.
            rate_limit_sid (str): (Required) The Twilio-provided string that
                uniquely identifies the Rate Limit resource.
            sid (str): (Required) A 34 character string that uniquely
                identifies this Bucket.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('RateLimitSid')
                            .value(rate_limit_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()
