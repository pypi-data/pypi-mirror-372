# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.ok_123 import OK123
from twilioapiexplorer.models.created_33 import Created33
from twilioapiexplorer.models.ok_125 import OK125


class ChatMembersController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(ChatMembersController, self).__init__(config)

    def fetch_member(self,
                     service_sid,
                     channel_sid,
                     sid,
                     accept):
        """Does a GET request to /Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to fetch the Member resource from.
            channel_sid (str): (Required) The SID of the
                [Channel](https://www.twilio.com/docs/chat/channels) the
                Member resource to fetch belongs to. This value can be the
                Channel resource's `sid` or `unique_name`.
            sid (str): (Required) The SID of the Member resource to fetch.
                This value can be either the Member's `sid` or its `identity`
                value.
            accept (str): The request header parameter.

        Returns:
            OK123: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_11)
            .path('/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('ChannelSid')
                            .value(channel_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK123.from_dictionary)
        ).execute()

    def delete_member(self,
                      service_sid,
                      channel_sid,
                      sid,
                      x_twilio_webhook_enabled):
        """Does a DELETE request to /Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to delete the Member resource from.
            channel_sid (str): (Required) The SID of the
                [Channel](https://www.twilio.com/docs/chat/channels) the
                Member resource to delete belongs to. This value can be the
                Channel resource's `sid` or `unique_name`.
            sid (str): (Required) The SID of the Member resource to delete.
                This value can be either the Member's `sid` or its `identity`
                value.
            x_twilio_webhook_enabled (bool): The X-Twilio-Webhook-Enabled HTTP
                request header

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_11)
            .path('/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('ChannelSid')
                            .value(channel_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('X-Twilio-Webhook-Enabled')
                          .value(x_twilio_webhook_enabled))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def update_member(self,
                      service_sid,
                      channel_sid,
                      sid,
                      x_twilio_webhook_enabled,
                      accept,
                      role_sid,
                      last_consumed_message_index,
                      last_consumption_timestamp,
                      date_created,
                      date_updated,
                      attributes):
        """Does a POST request to /Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to update the Member resource in.
            channel_sid (str): (Required) The SID of the
                [Channel](https://www.twilio.com/docs/chat/channels) the
                Member resource to update belongs to. This value can be the
                Channel resource's `sid` or `unique_name`.
            sid (str): (Required) The SID of the Member resource to update.
                This value can be either the Member's `sid` or its `identity`
                value.
            x_twilio_webhook_enabled (str): The X-Twilio-Webhook-Enabled HTTP
                request header
            accept (str): The request header parameter.
            role_sid (str): The SID of the
                [Role](https://www.twilio.com/docs/chat/rest/role-resource) to
                assign to the member. The default roles are those specified on
                the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e).
            last_consumed_message_index (int): The index of the last
                [Message](https://www.twilio.com/docs/chat/rest/message-resourc
                e) that the Member has read within the
                [Channel](https://www.twilio.com/docs/chat/channels).
            last_consumption_timestamp (str): The [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp of the
                last
                [Message](https://www.twilio.com/docs/chat/rest/message-resourc
                e) read event for the Member within the
                [Channel](https://www.twilio.com/docs/chat/channels).
            date_created (str): The date, specified in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format, to
                assign to the resource as the date it was created. The default
                value is the current time set by the Chat service.  Note that
                this parameter should only be used when a Member is being
                recreated from a backup/separate source.
            date_updated (str): The date, specified in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format, to
                assign to the resource as the date it was last updated.
            attributes (str): A valid JSON string that contains
                application-specific data.

        Returns:
            OK123: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_11)
            .path('/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('ChannelSid')
                            .value(channel_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('X-Twilio-Webhook-Enabled')
                          .value(x_twilio_webhook_enabled))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('RoleSid')
                        .value(role_sid))
            .form_param(Parameter()
                        .key('LastConsumedMessageIndex')
                        .value(last_consumed_message_index))
            .form_param(Parameter()
                        .key('LastConsumptionTimestamp')
                        .value(last_consumption_timestamp))
            .form_param(Parameter()
                        .key('DateCreated')
                        .value(date_created))
            .form_param(Parameter()
                        .key('DateUpdated')
                        .value(date_updated))
            .form_param(Parameter()
                        .key('Attributes')
                        .value(attributes))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK123.from_dictionary)
        ).execute()

    def create_member(self,
                      service_sid,
                      channel_sid,
                      x_twilio_webhook_enabled,
                      accept,
                      identity,
                      role_sid,
                      last_consumed_message_index,
                      last_consumption_timestamp,
                      date_created,
                      date_updated,
                      attributes):
        """Does a POST request to /v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to create the Member resource under.
            channel_sid (str): (Required) The SID of the
                [Channel](https://www.twilio.com/docs/chat/channels) the new
                Member resource belongs to. This value can be the Channel
                resource's `sid` or `unique_name`.
            x_twilio_webhook_enabled (str): The X-Twilio-Webhook-Enabled HTTP
                request header
            accept (str): The request header parameter.
            identity (str): (Required) The `identity` value that uniquely
                identifies the new resource's
                [User](https://www.twilio.com/docs/chat/rest/user-resource)
                within the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e). See [access
                tokens](https://www.twilio.com/docs/chat/create-tokens) for
                more info.
            role_sid (str): The SID of the
                [Role](https://www.twilio.com/docs/chat/rest/role-resource) to
                assign to the member. The default roles are those specified on
                the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e).
            last_consumed_message_index (int): The index of the last
                [Message](https://www.twilio.com/docs/chat/rest/message-resourc
                e) in the [Channel](https://www.twilio.com/docs/chat/channels)
                that the Member has read. This parameter should only be used
                when recreating a Member from a backup/separate source.
            last_consumption_timestamp (str): The [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp of the
                last
                [Message](https://www.twilio.com/docs/chat/rest/message-resourc
                e) read event for the Member within the
                [Channel](https://www.twilio.com/docs/chat/channels).
            date_created (str): The date, specified in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format, to
                assign to the resource as the date it was created. The default
                value is the current time set by the Chat service.  Note that
                this parameter should only be used when a Member is being
                recreated from a backup/separate source.
            date_updated (str): The date, specified in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format, to
                assign to the resource as the date it was last updated. The
                default value is `null`. Note that this parameter should only
                be used when a Member is being recreated from a
                backup/separate source and where a Member was previously
                updated.
            attributes (str): A valid JSON string that contains
                application-specific data.

        Returns:
            Created33: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('ChannelSid')
                            .value(channel_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('X-Twilio-Webhook-Enabled')
                          .value(x_twilio_webhook_enabled))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Identity')
                        .value(identity))
            .form_param(Parameter()
                        .key('RoleSid')
                        .value(role_sid))
            .form_param(Parameter()
                        .key('LastConsumedMessageIndex')
                        .value(last_consumed_message_index))
            .form_param(Parameter()
                        .key('LastConsumptionTimestamp')
                        .value(last_consumption_timestamp))
            .form_param(Parameter()
                        .key('DateCreated')
                        .value(date_created))
            .form_param(Parameter()
                        .key('DateUpdated')
                        .value(date_updated))
            .form_param(Parameter()
                        .key('Attributes')
                        .value(attributes))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created33.from_dictionary)
        ).execute()

    def list_member(self,
                    identity,
                    page_size,
                    service_sid,
                    channel_sid,
                    accept):
        """Does a GET request to /v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members.

        Args:
            identity (str): The
                [User](https://www.twilio.com/docs/chat/rest/user-resource)'s
                `identity` value of the Member resources to read. See [access
                tokens](https://www.twilio.com/docs/chat/create-tokens) for
                more details.
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to read the Member resources from.
            channel_sid (str): (Required) The SID of the
                [Channel](https://www.twilio.com/docs/chat/channels) the
                Member resources to read belong to. This value can be the
                Channel resource's `sid` or `unique_name`.
            accept (str): The request header parameter.

        Returns:
            OK125: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('Identity')
                         .value(identity))
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('ChannelSid')
                            .value(channel_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK125.from_dictionary)
        ).execute()
