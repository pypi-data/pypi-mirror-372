# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.created_14 import Created14
from twilioapiexplorer.models.ok_52 import OK52


class SIPDomainsController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(SIPDomainsController, self).__init__(config)

    def create_sip_domain(self,
                          accept,
                          domain_name,
                          friendly_name,
                          voice_url,
                          voice_method,
                          voice_fallback_url,
                          voice_fallback_method,
                          voice_status_callback_url,
                          voice_status_callback_method,
                          sip_registration,
                          emergency_calling_enabled,
                          secure,
                          byoc_trunk_sid,
                          emergency_caller_sid,
                          account_sid):
        """Does a POST request to /{AccountSid}/SIP/Domains.json.

        Args:
            accept (str): The request header parameter.
            domain_name (str): (Required) The unique address you reserve on
                Twilio to which you route your SIP traffic. Domain names can
                contain letters, digits, and "-" and must end with
                `sip.twilio.com`.
            friendly_name (str): A descriptive string that you created to
                describe the resource. It can be up to 64 characters long.
            voice_url (str): The URL we should when the domain receives a call.
            voice_method (str): The HTTP method we should use to call
                `voice_url`. Can be: `GET` or `POST`.
            voice_fallback_url (str): The URL that we should call when an
                error occurs while retrieving or executing the TwiML from
                `voice_url`.
            voice_fallback_method (str): The HTTP method we should use to call
                `voice_fallback_url`. Can be: `GET` or `POST`.
            voice_status_callback_url (str): The URL that we should call to
                pass status parameters (such as call ended) to your
                application.
            voice_status_callback_method (str): The HTTP method we should use
                to call `voice_status_callback_url`. Can be: `GET` or `POST`.
            sip_registration (bool): Whether to allow SIP Endpoints to
                register with the domain to receive calls. Can be `true` or
                `false`. `true` allows SIP Endpoints to register with the
                domain to receive calls, `false` does not.
            emergency_calling_enabled (bool): Whether emergency calling is
                enabled for the domain. If enabled, allows emergency calls on
                the domain from phone numbers with validated addresses.
            secure (bool): Whether secure SIP is enabled for the domain. If
                enabled, TLS will be enforced and SRTP will be negotiated on
                all incoming calls to this sip domain.
            byoc_trunk_sid (str): The SID of the BYOC Trunk(Bring Your Own
                Carrier) resource that the Sip Domain will be associated with.
            emergency_caller_sid (str): Whether an emergency caller sid is
                configured for the domain. If present, this phone number will
                be used as the callback for the emergency call.
            account_sid (str): The request template parameter.

        Returns:
            Created14: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_4)
            .path('/{AccountSid}/SIP/Domains.json')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('DomainName')
                        .value(domain_name))
            .form_param(Parameter()
                        .key('FriendlyName')
                        .value(friendly_name))
            .form_param(Parameter()
                        .key('VoiceUrl')
                        .value(voice_url))
            .form_param(Parameter()
                        .key('VoiceMethod')
                        .value(voice_method))
            .form_param(Parameter()
                        .key('VoiceFallbackUrl')
                        .value(voice_fallback_url))
            .form_param(Parameter()
                        .key('VoiceFallbackMethod')
                        .value(voice_fallback_method))
            .form_param(Parameter()
                        .key('VoiceStatusCallbackUrl')
                        .value(voice_status_callback_url))
            .form_param(Parameter()
                        .key('VoiceStatusCallbackMethod')
                        .value(voice_status_callback_method))
            .form_param(Parameter()
                        .key('SipRegistration')
                        .value(sip_registration))
            .form_param(Parameter()
                        .key('EmergencyCallingEnabled')
                        .value(emergency_calling_enabled))
            .form_param(Parameter()
                        .key('Secure')
                        .value(secure))
            .form_param(Parameter()
                        .key('ByocTrunkSid')
                        .value(byoc_trunk_sid))
            .form_param(Parameter()
                        .key('EmergencyCallerSid')
                        .value(emergency_caller_sid))
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created14.from_dictionary)
        ).execute()

    def list_sip_domain(self,
                        page_size,
                        accept,
                        account_sid):
        """Does a GET request to /{AccountSid}/SIP/Domains.json.

        Args:
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            accept (str): The request header parameter.
            account_sid (str): The request template parameter.

        Returns:
            OK52: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_4)
            .path('/{AccountSid}/SIP/Domains.json')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK52.from_dictionary)
        ).execute()
