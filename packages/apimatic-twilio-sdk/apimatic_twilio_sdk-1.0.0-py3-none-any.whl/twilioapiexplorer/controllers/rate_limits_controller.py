# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.created_82 import Created82
from twilioapiexplorer.models.ok_297 import OK297
from twilioapiexplorer.models.ok_298 import OK298


class RateLimitsController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(RateLimitsController, self).__init__(config)

    def create_rate_limit(self,
                          service_sid,
                          accept,
                          unique_name,
                          description):
        """Does a POST request to /v2/Services/{ServiceSid}/RateLimits.

        Create a new Rate Limit for a Service

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) the
                resource is associated with.
            accept (str): The request header parameter.
            unique_name (str): (Required) Provides a unique and addressable
                name to be assigned to this Rate Limit, assigned by the
                developer, to be optionally used in addition to SID. **This
                value should not contain PII.**
            description (str): Description of this Rate Limit

        Returns:
            Created82: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/RateLimits')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('UniqueName')
                        .value(unique_name))
            .form_param(Parameter()
                        .key('Description')
                        .value(description))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created82.from_dictionary)
        ).execute()

    def list_rate_limit(self,
                        page_size,
                        service_sid,
                        accept):
        """Does a GET request to /v2/Services/{ServiceSid}/RateLimits.

        Retrieve a list of all Rate Limits for a service.

        Args:
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) the
                resource is associated with.
            accept (str): The request header parameter.

        Returns:
            OK297: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/RateLimits')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK297.from_dictionary)
        ).execute()

    def update_rate_limit(self,
                          service_sid,
                          sid,
                          accept,
                          description):
        """Does a POST request to /v2/Services/{ServiceSid}/RateLimits/{Sid}.

        Update a specific Rate Limit.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) the
                resource is associated with.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Rate Limit resource to fetch.
            accept (str): The request header parameter.
            description (str): Description of this Rate Limit

        Returns:
            OK298: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/RateLimits/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Description')
                        .value(description))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK298.from_dictionary)
        ).execute()

    def fetch_rate_limit(self,
                         service_sid,
                         sid,
                         accept):
        """Does a GET request to /v2/Services/{ServiceSid}/RateLimits/{Sid}.

        Fetch a specific Rate Limit.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) the
                resource is associated with.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Rate Limit resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK298: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/RateLimits/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK298.from_dictionary)
        ).execute()

    def delete_rate_limit(self,
                          service_sid,
                          sid):
        """Does a DELETE request to /v2/Services/{ServiceSid}/RateLimits/{Sid}.

        Delete a specific Rate Limit.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) the
                resource is associated with.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Rate Limit resource to fetch.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/RateLimits/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()
