# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.ok_29 import OK29
from twilioapiexplorer.models.ok_31 import OK31
from twilioapiexplorer.models.created_8 import Created8


class CallerIdsController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(CallerIdsController, self).__init__(config)

    def fetch_outgoing_caller_id(self,
                                 accept,
                                 account_sid,
                                 sid):
        """Does a GET request to /{AccountSid}/OutgoingCallerIds/{Sid}.json.

        Args:
            accept (str): The request header parameter.
            account_sid (str): The request template parameter.
            sid (str): The request template parameter.

        Returns:
            OK29: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_4)
            .path('/{AccountSid}/OutgoingCallerIds/{Sid}.json')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK29.from_dictionary)
        ).execute()

    def update_outgoing_caller_id(self,
                                  accept,
                                  friendly_name,
                                  account_sid,
                                  sid):
        """Does a POST request to /{AccountSid}/OutgoingCallerIds/{Sid}.json.

        Args:
            accept (str): The request header parameter.
            friendly_name (str): A descriptive string that you create to
                describe the resource. It can be up to 64 characters long.
            account_sid (str): The request template parameter.
            sid (str): The request template parameter.

        Returns:
            OK29: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_4)
            .path('/{AccountSid}/OutgoingCallerIds/{Sid}.json')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('FriendlyName')
                        .value(friendly_name))
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK29.from_dictionary)
        ).execute()

    def delete_outgoing_caller_id(self,
                                  account_sid,
                                  sid):
        """Does a DELETE request to /{AccountSid}/OutgoingCallerIds/{Sid}.json.

        Args:
            account_sid (str): The request template parameter.
            sid (str): The request template parameter.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_4)
            .path('/{AccountSid}/OutgoingCallerIds/{Sid}.json')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def list_outgoing_caller_id(self,
                                phone_number,
                                friendly_name,
                                page_size,
                                accept,
                                account_sid):
        """Does a GET request to /{AccountSid}/OutgoingCallerIds.json.

        Args:
            phone_number (str): The phone number of the OutgoingCallerId
                resources to read.
            friendly_name (str): The string that identifies the
                OutgoingCallerId resources to read.
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            accept (str): The request header parameter.
            account_sid (str): The request template parameter.

        Returns:
            OK31: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_4)
            .path('/{AccountSid}/OutgoingCallerIds.json')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PhoneNumber')
                         .value(phone_number))
            .query_param(Parameter()
                         .key('FriendlyName')
                         .value(friendly_name))
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK31.from_dictionary)
        ).execute()

    def create_validation_request(self,
                                  accept,
                                  phone_number,
                                  friendly_name,
                                  call_delay,
                                  extension,
                                  status_callback,
                                  status_callback_method,
                                  account_sid):
        """Does a POST request to /{AccountSid}/OutgoingCallerIds.json.

        Args:
            accept (str): The request header parameter.
            phone_number (str): (Required) The phone number to verify in
                [E.164](https://www.twilio.com/docs/glossary/what-e164)
                format, which consists of a + followed by the country code and
                subscriber number.
            friendly_name (str): A descriptive string that you create to
                describe the new caller ID resource. It can be up to 64
                characters long. The default value is a formatted version of
                the phone number.
            call_delay (int): The number of seconds to delay before initiating
                the verification call. Can be an integer between `0` and `60`,
                inclusive. The default is `0`.
            extension (str): The digits to dial after connecting the
                verification call.
            status_callback (str): The URL we should call using the
                `status_callback_method` to send status information about the
                verification process to your application.
            status_callback_method (str): The HTTP method we should use to
                call `status_callback`. Can be: `GET` or `POST`, and the
                default is `POST`.
            account_sid (str): The request template parameter.

        Returns:
            Created8: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_4)
            .path('/{AccountSid}/OutgoingCallerIds.json')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('PhoneNumber')
                        .value(phone_number))
            .form_param(Parameter()
                        .key('FriendlyName')
                        .value(friendly_name))
            .form_param(Parameter()
                        .key('CallDelay')
                        .value(call_delay))
            .form_param(Parameter()
                        .key('Extension')
                        .value(extension))
            .form_param(Parameter()
                        .key('StatusCallback')
                        .value(status_callback))
            .form_param(Parameter()
                        .key('StatusCallbackMethod')
                        .value(status_callback_method))
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created8.from_dictionary)
        ).execute()
