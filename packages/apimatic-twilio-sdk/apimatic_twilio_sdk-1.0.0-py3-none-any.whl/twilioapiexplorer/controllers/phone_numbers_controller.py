# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.created_3 import Created3
from twilioapiexplorer.models.ok_5 import OK5
from twilioapiexplorer.models.ok_6 import OK6
from twilioapiexplorer.models.created_29 import Created29
from twilioapiexplorer.models.ok_107 import OK107
from twilioapiexplorer.models.ok_108 import OK108
from twilioapiexplorer.models.created_62 import Created62
from twilioapiexplorer.models.ok_237 import OK237
from twilioapiexplorer.models.ok_238 import OK238


class PhoneNumbersController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(PhoneNumbersController, self).__init__(config)

    def create_phone_number(self,
                            service_sid,
                            accept,
                            phone_number_sid):
        """Does a POST request to /Services/{ServiceSid}/PhoneNumbers.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to create the resource under.
            accept (str): The request header parameter.
            phone_number_sid (str): (Required) The SID of the Phone Number
                being added to the Service.

        Returns:
            Created3: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_2)
            .path('/Services/{ServiceSid}/PhoneNumbers')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('PhoneNumberSid')
                        .value(phone_number_sid))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created3.from_dictionary)
        ).execute()

    def list_phone_number(self,
                          page_size,
                          service_sid,
                          accept):
        """Does a GET request to /Services/{ServiceSid}/PhoneNumbers.

        Args:
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to read the resources from.
            accept (str): The request header parameter.

        Returns:
            OK5: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_2)
            .path('/Services/{ServiceSid}/PhoneNumbers')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK5.from_dictionary)
        ).execute()

    def delete_phone_number(self,
                            service_sid,
                            sid):
        """Does a DELETE request to /Services/{ServiceSid}/PhoneNumbers/{Sid}.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to delete the resource from.
            sid (str): (Required) The SID of the PhoneNumber resource to
                delete.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_2)
            .path('/Services/{ServiceSid}/PhoneNumbers/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def fetch_phone_number(self,
                           service_sid,
                           sid,
                           accept):
        """Does a GET request to /Services/{ServiceSid}/PhoneNumbers/{Sid}.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to fetch the resource from.
            sid (str): (Required) The SID of the PhoneNumber resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK6: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_2)
            .path('/Services/{ServiceSid}/PhoneNumbers/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK6.from_dictionary)
        ).execute()

    def create_phone_number_1(self,
                              accept,
                              phone_number_sid,
                              trunk_sid):
        """Does a POST request to /Trunks/{TrunkSid}/PhoneNumbers.

        Args:
            accept (str): The request header parameter.
            phone_number_sid (str): (Required) The SID of the [Incoming Phone
                Number](https://www.twilio.com/docs/phone-numbers/api/incomingp
                honenumber-resource) that you want to associate with the trunk.
            trunk_sid (str): The request template parameter.

        Returns:
            Created29: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_10)
            .path('/Trunks/{TrunkSid}/PhoneNumbers')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('PhoneNumberSid')
                        .value(phone_number_sid))
            .template_param(Parameter()
                            .key('TrunkSid')
                            .value(trunk_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created29.from_dictionary)
        ).execute()

    def list_phone_number_2(self,
                            page_size,
                            accept,
                            trunk_sid):
        """Does a GET request to /Trunks/{TrunkSid}/PhoneNumbers.

        Args:
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            accept (str): The request header parameter.
            trunk_sid (str): The request template parameter.

        Returns:
            OK107: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_10)
            .path('/Trunks/{TrunkSid}/PhoneNumbers')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .template_param(Parameter()
                            .key('TrunkSid')
                            .value(trunk_sid)
                            .should_encode(True))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK107.from_dictionary)
        ).execute()

    def fetch_phone_number_2(self,
                             accept,
                             trunk_sid,
                             sid):
        """Does a GET request to /Trunks/{TrunkSid}/PhoneNumbers/{Sid}.

        Args:
            accept (str): The request header parameter.
            trunk_sid (str): The request template parameter.
            sid (str): The request template parameter.

        Returns:
            OK108: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_10)
            .path('/Trunks/{TrunkSid}/PhoneNumbers/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .template_param(Parameter()
                            .key('TrunkSid')
                            .value(trunk_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK108.from_dictionary)
        ).execute()

    def delete_phone_number_2(self,
                              trunk_sid,
                              sid):
        """Does a DELETE request to /Trunks/{TrunkSid}/PhoneNumbers/{Sid}.

        Args:
            trunk_sid (str): The request template parameter.
            sid (str): The request template parameter.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_10)
            .path('/Trunks/{TrunkSid}/PhoneNumbers/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('TrunkSid')
                            .value(trunk_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def create_phone_number_2(self,
                              service_sid,
                              accept,
                              sid,
                              phone_number,
                              is_reserved):
        """Does a POST request to /Services/{ServiceSid}/PhoneNumbers.

        Add a Phone Number to a Service's Proxy Number Pool.

        Args:
            service_sid (str): (Required) The SID parent
                [Service](https://www.twilio.com/docs/proxy/api/service)
                resource of the new PhoneNumber resource.
            accept (str): The request header parameter.
            sid (str): The SID of a Twilio
                [IncomingPhoneNumber](https://www.twilio.com/docs/phone-numbers
                /api/incomingphonenumber-resource) resource that represents
                the Twilio Number you would like to assign to your Proxy
                Service.
            phone_number (str): The phone number in
                [E.164](https://www.twilio.com/docs/glossary/what-e164)
                format.  E.164 phone numbers consist of a + followed by the
                country code and subscriber number without punctuation
                characters. For example, +14155551234.
            is_reserved (bool): Whether the new phone number should be
                reserved and not be assigned to a participant using proxy pool
                logic. See [Reserved Phone
                Numbers](https://www.twilio.com/docs/proxy/reserved-phone-numbe
                rs) for more information.

        Returns:
            Created62: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Services/{ServiceSid}/PhoneNumbers')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Sid')
                        .value(sid))
            .form_param(Parameter()
                        .key('PhoneNumber')
                        .value(phone_number))
            .form_param(Parameter()
                        .key('IsReserved')
                        .value(is_reserved))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created62.from_dictionary)
        ).execute()

    def list_phone_number_1(self,
                            page_size,
                            service_sid,
                            accept):
        """Does a GET request to /Services/{ServiceSid}/PhoneNumbers.

        Retrieve a list of all Phone Numbers in the Proxy Number Pool for a
        Service. A maximum of 100 records will be returned per page.

        Args:
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            service_sid (str): (Required) The SID of the parent
                [Service](https://www.twilio.com/docs/proxy/api/service) of
                the PhoneNumber resources to read.
            accept (str): The request header parameter.

        Returns:
            OK237: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/Services/{ServiceSid}/PhoneNumbers')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK237.from_dictionary)
        ).execute()

    def delete_phone_number_1(self,
                              service_sid,
                              sid):
        """Does a DELETE request to /v1/Services/{ServiceSid}/PhoneNumbers/{Sid}.

        Delete a specific Phone Number from a Service.

        Args:
            service_sid (str): (Required) The SID of the parent
                [Service](https://www.twilio.com/docs/proxy/api/service) of
                the PhoneNumber resource to delete.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the PhoneNumber resource to delete.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Services/{ServiceSid}/PhoneNumbers/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def fetch_phone_number_1(self,
                             service_sid,
                             sid,
                             accept):
        """Does a GET request to /v1/Services/{ServiceSid}/PhoneNumbers/{Sid}.

        Fetch a specific Phone Number.

        Args:
            service_sid (str): (Required) The SID of the parent
                [Service](https://www.twilio.com/docs/proxy/api/service) of
                the PhoneNumber resource to fetch.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the PhoneNumber resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK238: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Services/{ServiceSid}/PhoneNumbers/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK238.from_dictionary)
        ).execute()

    def update_phone_number(self,
                            service_sid,
                            sid,
                            accept,
                            is_reserved):
        """Does a POST request to /v1/Services/{ServiceSid}/PhoneNumbers/{Sid}.

        Update a specific Proxy Number.

        Args:
            service_sid (str): (Required) The SID of the parent
                [Service](https://www.twilio.com/docs/proxy/api/service) of
                the PhoneNumber resource to update.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the PhoneNumber resource to update.
            accept (str): The request header parameter.
            is_reserved (bool): Whether the phone number should be reserved
                and not be assigned to a participant using proxy pool logic.
                See [Reserved Phone
                Numbers](https://www.twilio.com/docs/proxy/reserved-phone-numbe
                rs) for more information.

        Returns:
            OK238: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Services/{ServiceSid}/PhoneNumbers/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('IsReserved')
                        .value(is_reserved))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK238.from_dictionary)
        ).execute()
