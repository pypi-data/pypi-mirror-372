# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.ok_319 import OK319
from twilioapiexplorer.models.ok_321 import OK321
from twilioapiexplorer.models.created_90 import Created90


class KeysController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(KeysController, self).__init__(config)

    def fetch_key(self,
                  account_sid,
                  sid):
        """Does a GET request to /2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json.

        Args:
            account_sid (str): The request template parameter.
            sid (str): The request template parameter.

        Returns:
            OK319: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK319.from_dictionary)
        ).execute()

    def update_key(self,
                   account_sid,
                   accept,
                   friendly_name,
                   sid):
        """Does a POST request to /2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json.

        Args:
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                created the Key resources to update.
            accept (str): The request header parameter.
            friendly_name (str): A descriptive string that you create to
                describe the resource. It can be up to 64 characters long.
            sid (str): The request template parameter.

        Returns:
            OK319: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('FriendlyName')
                        .value(friendly_name))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK319.from_dictionary)
        ).execute()

    def delete_key(self,
                   account_sid,
                   sid):
        """Does a DELETE request to /2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json.

        Args:
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                created the Key resources to delete.
            sid (str): The request template parameter.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def list_key(self,
                 page_size,
                 account_sid,
                 accept):
        """Does a GET request to /2010-04-01/Accounts/{AccountSid}/Keys.json.

        Args:
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                created the Key resources to read.
            accept (str): The request header parameter.

        Returns:
            OK321: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/2010-04-01/Accounts/{AccountSid}/Keys.json')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK321.from_dictionary)
        ).execute()

    def create_new_key(self,
                       account_sid,
                       accept,
                       friendly_name):
        """Does a POST request to /2010-04-01/Accounts/{AccountSid}/Keys.json.

        Args:
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                will be responsible for the new Key resource.
            accept (str): The request header parameter.
            friendly_name (str): A descriptive string that you create to
                describe the resource. It can be up to 64 characters long.

        Returns:
            Created90: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/2010-04-01/Accounts/{AccountSid}/Keys.json')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('FriendlyName')
                        .value(friendly_name))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created90.from_dictionary)
        ).execute()
