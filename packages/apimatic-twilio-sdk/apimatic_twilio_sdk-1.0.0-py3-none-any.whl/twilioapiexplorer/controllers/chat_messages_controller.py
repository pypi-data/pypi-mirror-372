# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.ok_131 import OK131
from twilioapiexplorer.models.created_36 import Created36
from twilioapiexplorer.models.ok_133 import OK133


class ChatMessagesController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(ChatMessagesController, self).__init__(config)

    def fetch_message(self,
                      service_sid,
                      channel_sid,
                      sid,
                      accept):
        """Does a GET request to /v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to fetch the Message resource from.
            channel_sid (str): (Required) The SID of the
                [Channel](https://www.twilio.com/docs/chat/channels) the
                Message resource to fetch belongs to. This value can be the
                Channel resource's `sid` or `unique_name`.
            sid (str): (Required) The SID of the Message resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK131: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('ChannelSid')
                            .value(channel_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK131.from_dictionary)
        ).execute()

    def delete_message(self,
                       service_sid,
                       channel_sid,
                       sid,
                       x_twilio_webhook_enabled):
        """Does a DELETE request to /v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to delete the Message resource from.
            channel_sid (str): (Required) The SID of the
                [Channel](https://www.twilio.com/docs/chat/channels) the
                Message resource to delete belongs to. This value can be the
                Channel resource's `sid` or `unique_name`.
            sid (str): (Required) The SID of the Message resource to delete.
            x_twilio_webhook_enabled (bool): The X-Twilio-Webhook-Enabled HTTP
                request header

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('ChannelSid')
                            .value(channel_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('X-Twilio-Webhook-Enabled')
                          .value(x_twilio_webhook_enabled))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def update_message(self,
                       service_sid,
                       channel_sid,
                       sid,
                       x_twilio_webhook_enabled,
                       accept,
                       body,
                       attributes,
                       date_created,
                       date_updated,
                       last_updated_by,
                       mfrom):
        """Does a POST request to /v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to update the Message resource in.
            channel_sid (str): (Required) The SID of the
                [Channel](https://www.twilio.com/docs/chat/channels) the
                Message resource to update belongs to. This value can be the
                Channel resource's `sid` or `unique_name`.
            sid (str): (Required) The SID of the Message resource to update.
            x_twilio_webhook_enabled (str): The X-Twilio-Webhook-Enabled HTTP
                request header
            accept (str): The request header parameter.
            body (str): The message to send to the channel. Can be an empty
                string or `null`, which sets the value as an empty string. You
                can send structured data in the body by serializing it as a
                string.
            attributes (str): A valid JSON string that contains
                application-specific data.
            date_created (str): The date, specified in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format, to
                assign to the resource as the date it was created. The default
                value is the current time set by the Chat service. This
                parameter should only be used when a Chat's history is being
                recreated from a backup/separate source.
            date_updated (str): The date, specified in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format, to
                assign to the resource as the date it was last updated.
            last_updated_by (str): The
                [Identity](https://www.twilio.com/docs/chat/identity) of the
                User who last updated the Message, if applicable.
            mfrom (str): The
                [Identity](https://www.twilio.com/docs/chat/identity) of the
                message's author.

        Returns:
            OK131: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('ChannelSid')
                            .value(channel_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('X-Twilio-Webhook-Enabled')
                          .value(x_twilio_webhook_enabled))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Body')
                        .value(body))
            .form_param(Parameter()
                        .key('Attributes')
                        .value(attributes))
            .form_param(Parameter()
                        .key('DateCreated')
                        .value(date_created))
            .form_param(Parameter()
                        .key('DateUpdated')
                        .value(date_updated))
            .form_param(Parameter()
                        .key('LastUpdatedBy')
                        .value(last_updated_by))
            .form_param(Parameter()
                        .key('From')
                        .value(mfrom))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK131.from_dictionary)
        ).execute()

    def create_message(self,
                       service_sid,
                       channel_sid,
                       x_twilio_webhook_enabled,
                       accept,
                       mfrom,
                       attributes,
                       date_created,
                       date_updated,
                       last_updated_by,
                       body,
                       media_sid):
        """Does a POST request to /v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to create the Message resource under.
            channel_sid (str): (Required) The SID of the
                [Channel](https://www.twilio.com/docs/chat/channels) the new
                Message resource belongs to. This value can be the Channel
                resource's `sid` or `unique_name`.
            x_twilio_webhook_enabled (str): The X-Twilio-Webhook-Enabled HTTP
                request header
            accept (str): The request header parameter.
            mfrom (str): The
                [Identity](https://www.twilio.com/docs/chat/identity) of the
                new message's author. The default value is `system`.
            attributes (str): A valid JSON string that contains
                application-specific data.
            date_created (str): The date, specified in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format, to
                assign to the resource as the date it was created. The default
                value is the current time set by the Chat service. This
                parameter should only be used when a Chat's history is being
                recreated from a backup/separate source.
            date_updated (str): The date, specified in [ISO
                8601](https://en.wikipedia.org/wiki/ISO_8601) format, to
                assign to the resource as the date it was last updated.
            last_updated_by (str): The
                [Identity](https://www.twilio.com/docs/chat/identity) of the
                User who last updated the Message, if applicable.
            body (str): The message to send to the channel. Can be an empty
                string or `null`, which sets the value as an empty string. You
                can send structured data in the body by serializing it as a
                string.
            media_sid (str): The SID of the
                [Media](https://www.twilio.com/docs/chat/rest/media) to attach
                to the new Message.

        Returns:
            Created36: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('ChannelSid')
                            .value(channel_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('X-Twilio-Webhook-Enabled')
                          .value(x_twilio_webhook_enabled))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('From')
                        .value(mfrom))
            .form_param(Parameter()
                        .key('Attributes')
                        .value(attributes))
            .form_param(Parameter()
                        .key('DateCreated')
                        .value(date_created))
            .form_param(Parameter()
                        .key('DateUpdated')
                        .value(date_updated))
            .form_param(Parameter()
                        .key('LastUpdatedBy')
                        .value(last_updated_by))
            .form_param(Parameter()
                        .key('Body')
                        .value(body))
            .form_param(Parameter()
                        .key('MediaSid')
                        .value(media_sid))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created36.from_dictionary)
        ).execute()

    def list_message(self,
                     order,
                     page_size,
                     service_sid,
                     channel_sid,
                     accept):
        """Does a GET request to /v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages.

        Args:
            order (str): The sort order of the returned messages. Can be:
                `asc` (ascending) or `desc` (descending) with `asc` as the
                default.
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/chat/rest/service-resourc
                e) to read the Message resources from.
            channel_sid (str): (Required) The SID of the
                [Channel](https://www.twilio.com/docs/chat/channels) the
                Message resource to read belongs to. This value can be the
                Channel resource's `sid` or `unique_name`.
            accept (str): The request header parameter.

        Returns:
            OK133: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('Order')
                         .value(order))
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('ChannelSid')
                            .value(channel_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK133.from_dictionary)
        ).execute()
