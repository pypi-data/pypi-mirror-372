# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.ok_257 import OK257
from twilioapiexplorer.models.ok_259 import OK259
from twilioapiexplorer.models.ok_265 import OK265
from twilioapiexplorer.models.ok_268 import OK268
from twilioapiexplorer.models.ok_270 import OK270
from twilioapiexplorer.models.ok_273 import OK273
from twilioapiexplorer.models.ok_278 import OK278


class SidController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(SidController, self).__init__(config)

    def fetch_field(self,
                    assistant_sid,
                    task_sid,
                    sid,
                    accept):
        """Does a GET request to /v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the Task associated with the resource
                to fetch.
            task_sid (str): (Required) The SID of the
                [Task](https://www.twilio.com/docs/autopilot/api/task)
                resource associated with the Field resource to fetch.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Field resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK257: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('TaskSid')
                            .value(task_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK257.from_dictionary)
        ).execute()

    def delete_field(self,
                     assistant_sid,
                     task_sid,
                     sid):
        """Does a DELETE request to /v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the Task associated with the resources
                to delete.
            task_sid (str): (Required) The SID of the
                [Task](https://www.twilio.com/docs/autopilot/api/task)
                resource associated with the Field resource to delete.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Field resource to delete.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('TaskSid')
                            .value(task_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def fetch_sample(self,
                     assistant_sid,
                     task_sid,
                     sid,
                     accept):
        """Does a GET request to /v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the Task associated with the resource
                to fetch.
            task_sid (str): (Required) The SID of the
                [Task](https://www.twilio.com/docs/autopilot/api/task)
                associated with the Sample resource to create.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Sample resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK259: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('TaskSid')
                            .value(task_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK259.from_dictionary)
        ).execute()

    def update_sample(self,
                      assistant_sid,
                      task_sid,
                      sid,
                      accept,
                      language,
                      tagged_text,
                      source_channel):
        """Does a POST request to /v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the Task associated with the resource
                to update.
            task_sid (str): (Required) The SID of the
                [Task](https://www.twilio.com/docs/autopilot/api/task)
                associated with the Sample resource to update.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Sample resource to update.
            accept (str): The request header parameter.
            language (str): The [ISO
                language-country](https://docs.oracle.com/cd/E13214_01/wli/docs
                92/xref/xqisocodes.html) string that specifies the language
                used for the sample. For example: `en-US`.
            tagged_text (str): The text example of how end users might express
                the task. The sample can contain [Field tag
                blocks](https://www.twilio.com/docs/autopilot/api/task-sample#f
                ield-tagging).
            source_channel (str): The communication channel from which the
                sample was captured. Can be: `voice`, `sms`, `chat`, `alexa`,
                `google-assistant`, `slack`, or null if not included.

        Returns:
            OK259: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('TaskSid')
                            .value(task_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Language')
                        .value(language))
            .form_param(Parameter()
                        .key('TaggedText')
                        .value(tagged_text))
            .form_param(Parameter()
                        .key('SourceChannel')
                        .value(source_channel))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK259.from_dictionary)
        ).execute()

    def delete_sample(self,
                      assistant_sid,
                      task_sid,
                      sid):
        """Does a DELETE request to /v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the Task associated with the resources
                to delete.
            task_sid (str): (Required) The SID of the
                [Task](https://www.twilio.com/docs/autopilot/api/task)
                associated with the Sample resource to delete.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Sample resource to delete.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('TaskSid')
                            .value(task_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def fetch_task(self,
                   assistant_sid,
                   sid,
                   accept):
        """Does a GET request to /v1/Assistants/{AssistantSid}/Tasks/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resource to fetch.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Task resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK265: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Tasks/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK265.from_dictionary)
        ).execute()

    def update_task(self,
                    assistant_sid,
                    sid,
                    accept,
                    friendly_name,
                    unique_name,
                    actions_url):
        """Does a POST request to /v1/Assistants/{AssistantSid}/Tasks/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resource to update.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Task resource to update.
            accept (str): The request header parameter.
            friendly_name (str): A descriptive string that you create to
                describe the resource. It is not unique and can be up to 255
                characters long.
            unique_name (str): An application-defined string that uniquely
                identifies the resource. This value must be 64 characters or
                less in length and be unique. It can be used as an alternative
                to the `sid` in the URL path to address the resource.
            actions_url (str): The URL from which the Assistant can fetch
                actions.

        Returns:
            OK265: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Tasks/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('FriendlyName')
                        .value(friendly_name))
            .form_param(Parameter()
                        .key('UniqueName')
                        .value(unique_name))
            .form_param(Parameter()
                        .key('ActionsUrl')
                        .value(actions_url))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK265.from_dictionary)
        ).execute()

    def delete_task(self,
                    assistant_sid,
                    sid):
        """Does a DELETE request to /v1/Assistants/{AssistantSid}/Tasks/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resources to delete.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Task resource to delete.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Tasks/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def fetch_field_type(self,
                         assistant_sid,
                         sid,
                         accept):
        """Does a GET request to /v1/Assistants/{AssistantSid}/FieldTypes/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resource to fetch.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the FieldType resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK268: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/FieldTypes/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK268.from_dictionary)
        ).execute()

    def update_field_type(self,
                          assistant_sid,
                          sid,
                          accept,
                          friendly_name,
                          unique_name):
        """Does a POST request to /v1/Assistants/{AssistantSid}/FieldTypes/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the to update.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the FieldType resource to update.
            accept (str): The request header parameter.
            friendly_name (str): A descriptive string that you create to
                describe the resource. It is not unique and can be up to 255
                characters long.
            unique_name (str): An application-defined string that uniquely
                identifies the resource. It can be used as an alternative to
                the `sid` in the URL path to address the resource. The first
                64 characters must be unique.

        Returns:
            OK268: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/FieldTypes/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('FriendlyName')
                        .value(friendly_name))
            .form_param(Parameter()
                        .key('UniqueName')
                        .value(unique_name))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK268.from_dictionary)
        ).execute()

    def delete_field_type(self,
                          assistant_sid,
                          sid):
        """Does a DELETE request to /v1/Assistants/{AssistantSid}/FieldTypes/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resources to delete.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the FieldType resource to delete.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/FieldTypes/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def fetch_field_value(self,
                          assistant_sid,
                          field_type_sid,
                          sid,
                          accept):
        """Does a GET request to /v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the FieldType associated with the
                resource to fetch.
            field_type_sid (str): (Required) The SID of the Field Type
                associated with the Field Value to fetch.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the FieldValue resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK270: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FieldTypeSid')
                            .value(field_type_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK270.from_dictionary)
        ).execute()

    def delete_field_value(self,
                           assistant_sid,
                           field_type_sid,
                           sid):
        """Does a DELETE request to /v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the FieldType associated with the
                resources to delete.
            field_type_sid (str): (Required) The SID of the Field Type
                associated with the Field Value to delete.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the FieldValue resource to delete.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('FieldTypeSid')
                            .value(field_type_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def fetch_model_build(self,
                          assistant_sid,
                          sid,
                          accept):
        """Does a GET request to /v1/Assistants/{AssistantSid}/ModelBuilds/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resource to fetch.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the ModelBuild resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK273: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/ModelBuilds/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK273.from_dictionary)
        ).execute()

    def update_model_build(self,
                           assistant_sid,
                           sid,
                           accept,
                           unique_name):
        """Does a POST request to /v1/Assistants/{AssistantSid}/ModelBuilds/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resource to update.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the ModelBuild resource to update.
            accept (str): The request header parameter.
            unique_name (str): An application-defined string that uniquely
                identifies the resource. This value must be a unique string of
                no more than 64 characters. It can be used as an alternative
                to the `sid` in the URL path to address the resource.

        Returns:
            OK273: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/ModelBuilds/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('UniqueName')
                        .value(unique_name))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK273.from_dictionary)
        ).execute()

    def delete_model_build(self,
                           assistant_sid,
                           sid):
        """Does a DELETE request to /v1/Assistants/{AssistantSid}/ModelBuilds/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resources to delete.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the ModelBuild resource to delete.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/ModelBuilds/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def fetch_query(self,
                    assistant_sid,
                    sid,
                    accept):
        """Does a GET request to /v1/Assistants/{AssistantSid}/Queries/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resource to fetch.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Query resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK278: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Queries/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK278.from_dictionary)
        ).execute()

    def update_query(self,
                     assistant_sid,
                     sid,
                     accept,
                     sample_sid,
                     status):
        """Does a POST request to /v1/Assistants/{AssistantSid}/Queries/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resource to update.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Query resource to update.
            accept (str): The request header parameter.
            sample_sid (str): The SID of an optional reference to the
                [Sample](https://www.twilio.com/docs/autopilot/api/task-sample)
                created from the query.
            status (str): The new status of the resource. Can be:
                `pending-review`, `reviewed`, or `discarded`

        Returns:
            OK278: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Queries/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('SampleSid')
                        .value(sample_sid))
            .form_param(Parameter()
                        .key('Status')
                        .value(status))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK278.from_dictionary)
        ).execute()

    def delete_query(self,
                     assistant_sid,
                     sid):
        """Does a DELETE request to /v1/Assistants/{AssistantSid}/Queries/{Sid}.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resources to delete.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Query resource to delete.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Queries/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()
