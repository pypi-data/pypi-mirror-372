# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.ok_356 import OK356
from twilioapiexplorer.models.created_98 import Created98
from twilioapiexplorer.models.ok_357 import OK357


class VariablesController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(VariablesController, self).__init__(config)

    def list_variable(self,
                      page_size,
                      service_sid,
                      environment_sid,
                      accept):
        """Does a GET request to /v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables.

        Retrieve a list of all Variables.

        Args:
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            service_sid (str): (Required) The SID of the Service to read the
                Variable resources from.
            environment_sid (str): (Required) The SID of the Environment with
                the Variable resources to read.
            accept (str): The request header parameter.

        Returns:
            OK356: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('EnvironmentSid')
                            .value(environment_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK356.from_dictionary)
        ).execute()

    def create_variable(self,
                        service_sid,
                        environment_sid,
                        accept,
                        key,
                        value):
        """Does a POST request to /v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables.

        Create a new Variable.

        Args:
            service_sid (str): (Required) The SID of the Service to create the
                Variable resource under.
            environment_sid (str): (Required) The SID of the Environment in
                which the Variable resource exists.
            accept (str): The request header parameter.
            key (str): (Required) A string by which the Variable resource can
                be referenced. It can be a maximum of 128 characters.
            value (str): (Required) A string that contains the actual value of
                the Variable. It can be a maximum of 450 bytes in size.

        Returns:
            Created98: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('EnvironmentSid')
                            .value(environment_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Key')
                        .value(key))
            .form_param(Parameter()
                        .key('Value')
                        .value(value))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created98.from_dictionary)
        ).execute()

    def fetch_variable(self,
                       service_sid,
                       environment_sid,
                       sid,
                       accept):
        """Does a GET request to /v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables/{Sid}.

        Retrieve a specific Variable.

        Args:
            service_sid (str): (Required) The SID of the Service to fetch the
                Variable resource from.
            environment_sid (str): (Required) The SID of the Environment with
                the Variable resource to fetch.
            sid (str): (Required) The SID of the Variable resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK357: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('EnvironmentSid')
                            .value(environment_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK357.from_dictionary)
        ).execute()

    def update_variable(self,
                        service_sid,
                        environment_sid,
                        sid,
                        accept,
                        key,
                        value):
        """Does a POST request to /v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables/{Sid}.

        Update a specific Variable.

        Args:
            service_sid (str): (Required) The SID of the Service to update the
                Variable resource under.
            environment_sid (str): (Required) The SID of the Environment with
                the Variable resource to update.
            sid (str): (Required) The SID of the Variable resource to update.
            accept (str): The request header parameter.
            key (str): A string by which the Variable resource can be
                referenced. It can be a maximum of 128 characters.
            value (str): A string that contains the actual value of the
                Variable. It can be a maximum of 450 bytes in size.

        Returns:
            OK357: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('EnvironmentSid')
                            .value(environment_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Key')
                        .value(key))
            .form_param(Parameter()
                        .key('Value')
                        .value(value))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK357.from_dictionary)
        ).execute()

    def delete_variable(self,
                        service_sid,
                        environment_sid,
                        sid):
        """Does a DELETE request to /v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables/{Sid}.

        Delete a specific Variable.

        Args:
            service_sid (str): (Required) The SID of the Service to delete the
                Variable resource from.
            environment_sid (str): (Required) The SID of the Environment with
                the Variables to delete.
            sid (str): (Required) The SID of the Variable resource to delete.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Variables/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('EnvironmentSid')
                            .value(environment_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()
