# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.created_85 import Created85
from twilioapiexplorer.models.ok_304 import OK304
from twilioapiexplorer.models.ok_306 import OK306
from twilioapiexplorer.models.ok_307 import OK307
from twilioapiexplorer.models.ok_308 import OK308
from twilioapiexplorer.models.created_86 import Created86
from twilioapiexplorer.models.ok_309 import OK309


class VerificationsController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(VerificationsController, self).__init__(config)

    def create_verification(self,
                            service_sid,
                            accept,
                            to,
                            channel,
                            custom_friendly_name,
                            custom_message,
                            send_digits,
                            locale,
                            custom_code,
                            amount,
                            payee,
                            app_hash,
                            template_sid,
                            template_custom_substitutions):
        """Does a POST request to /v2/Services/{ServiceSid}/Verifications.

        Create a new Verification using a Service

        Args:
            service_sid (str): (Required) The SID of the verification
                [Service](https://www.twilio.com/docs/verify/api/service) to
                create the resource under.
            accept (str): The request header parameter.
            to (str): (Required) The phone number or
                [email](https://www.twilio.com/docs/verify/email) to verify.
                Phone numbers must be in [E.164
                format](https://www.twilio.com/docs/glossary/what-e164).
            channel (str): (Required) The verification method to use. One of:
                [`email`](https://www.twilio.com/docs/verify/email), `sms`,
                `whatsapp`, `call`, or `sna`.
            custom_friendly_name (str): A custom user defined friendly name
                that overwrites the existing one in the verification message
            custom_message (str): The text of a custom message to use for the
                verification.
            send_digits (str): The digits to send after a phone call is
                answered, for example, to dial an extension. For more
                information, see the Programmable Voice documentation of
                [sendDigits](https://www.twilio.com/docs/voice/twiml/number#att
                ributes-sendDigits).
            locale (str): Locale will automatically resolve based on phone
                number country code for SMS, WhatsApp and call channel
                verifications. This parameter will override the automatic
                locale. [See supported languages and more information
                here](https://www.twilio.com/docs/verify/supported-languages).
            custom_code (str): A pre-generated code to use for verification.
                The code can be between 4 and 10 characters, inclusive.
            amount (str): The amount of the associated PSD2 compliant
                transaction. Requires the PSD2 Service flag enabled.
            payee (str): The payee of the associated PSD2 compliant
                transaction. Requires the PSD2 Service flag enabled.
            app_hash (str): Your [App
                Hash](https://developers.google.com/identity/sms-retriever/veri
                fy#computing_your_apps_hash_string) to be appended at the end
                of your verification SMS body. Applies only to SMS. Example
                SMS body: `<#> Your AppName verification code is: 1234
                He42w354ol9`.
            template_sid (str): The message
                [template](https://www.twilio.com/docs/verify/api/templates).
                If provided, will override the default template for the
                Service. SMS and Voice channels only.
            template_custom_substitutions (str): A stringified JSON object in
                which the keys are the template's special variables and the
                values are the variables substitutions.

        Returns:
            Created85: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/Verifications')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('To')
                        .value(to))
            .form_param(Parameter()
                        .key('Channel')
                        .value(channel))
            .form_param(Parameter()
                        .key('CustomFriendlyName')
                        .value(custom_friendly_name))
            .form_param(Parameter()
                        .key('CustomMessage')
                        .value(custom_message))
            .form_param(Parameter()
                        .key('SendDigits')
                        .value(send_digits))
            .form_param(Parameter()
                        .key('Locale')
                        .value(locale))
            .form_param(Parameter()
                        .key('CustomCode')
                        .value(custom_code))
            .form_param(Parameter()
                        .key('Amount')
                        .value(amount))
            .form_param(Parameter()
                        .key('Payee')
                        .value(payee))
            .form_param(Parameter()
                        .key('AppHash')
                        .value(app_hash))
            .form_param(Parameter()
                        .key('TemplateSid')
                        .value(template_sid))
            .form_param(Parameter()
                        .key('TemplateCustomSubstitutions')
                        .value(template_custom_substitutions))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created85.from_dictionary)
        ).execute()

    def update_verification(self,
                            service_sid,
                            sid,
                            accept,
                            status):
        """Does a POST request to /v2/Services/{ServiceSid}/Verifications/{Sid}.

        Update a Verification status

        Args:
            service_sid (str): (Required) The SID of the verification
                [Service](https://www.twilio.com/docs/verify/api/service) to
                update the resource from.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Verification resource to update.
            accept (str): The request header parameter.
            status (str): (Required) The new status of the resource. Can be:
                `canceled` or `approved`.

        Returns:
            OK304: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/Verifications/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Status')
                        .value(status))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK304.from_dictionary)
        ).execute()

    def fetch_verification(self,
                           service_sid,
                           sid,
                           accept):
        """Does a GET request to /v2/Services/{ServiceSid}/Verifications/{Sid}.

        Fetch a specific Verification

        Args:
            service_sid (str): (Required) The SID of the verification
                [Service](https://www.twilio.com/docs/verify/api/service) to
                fetch the resource from.
            sid (str): (Required) The Twilio-provided string that uniquely
                identifies the Verification resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK304: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/Verifications/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK304.from_dictionary)
        ).execute()

    def list_verification_attempt(self,
                                  date_created_after,
                                  date_created_before,
                                  channel_data_to,
                                  country,
                                  channel,
                                  verify_service_sid,
                                  verification_sid,
                                  status,
                                  page_size,
                                  accept):
        """Does a GET request to /v2/Attempts.

        List all the verification attempts for a given Account.

        Args:
            date_created_after (str): Datetime filter used to query
                Verification Attempts created after this datetime. Given as
                GMT in RFC 2822 format.
            date_created_before (str): Datetime filter used to query
                Verification Attempts created before this datetime. Given as
                GMT in RFC 2822 format.
            channel_data_to (str): Destination of a verification. It is phone
                number in E.164 format.
            country (str): Filter used to query Verification Attempts sent to
                the specified destination country.
            channel (str): Filter used to query Verification Attempts by
                communication channel. Valid values are `SMS` and `CALL`
            verify_service_sid (str): Filter used to query Verification
                Attempts by verify service. Only attempts of the provided SID
                will be returned.
            verification_sid (str): Filter used to return all the Verification
                Attempts of a single verification. Only attempts of the
                provided verification SID will be returned.
            status (str): Filter used to query Verification Attempts by
                conversion status. Valid values are `UNCONVERTED`, for
                attempts that were not converted, and `CONVERTED`, for
                attempts that were confirmed.
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            accept (str): The request header parameter.

        Returns:
            OK306: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Attempts')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('DateCreatedAfter')
                         .value(date_created_after))
            .query_param(Parameter()
                         .key('DateCreatedBefore')
                         .value(date_created_before))
            .query_param(Parameter()
                         .key('ChannelData.To')
                         .value(channel_data_to))
            .query_param(Parameter()
                         .key('Country')
                         .value(country))
            .query_param(Parameter()
                         .key('Channel')
                         .value(channel))
            .query_param(Parameter()
                         .key('VerifyServiceSid')
                         .value(verify_service_sid))
            .query_param(Parameter()
                         .key('VerificationSid')
                         .value(verification_sid))
            .query_param(Parameter()
                         .key('Status')
                         .value(status))
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK306.from_dictionary)
        ).execute()

    def fetch_verification_attempt(self,
                                   sid,
                                   accept):
        """Does a GET request to /v2/Attempts/{Sid}.

        Fetch a specific verification attempt.

        Args:
            sid (str): (Required) The unique SID identifier of a Verification
                Attempt
            accept (str): The request header parameter.

        Returns:
            OK307: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Attempts/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK307.from_dictionary)
        ).execute()

    def fetch_verification_attempts_summary(self,
                                            verify_service_sid,
                                            date_created_after,
                                            date_created_before,
                                            country,
                                            channel,
                                            destination_prefix,
                                            accept):
        """Does a GET request to /v2/Attempts/Summary.

        Get a summary of how many attempts were made and how many were
        converted.

        Args:
            verify_service_sid (str): Filter used to consider only
                Verification Attempts of the given verify service on the
                summary aggregation.
            date_created_after (str): Datetime filter used to consider only
                Verification Attempts created after this datetime on the
                summary aggregation. Given as GMT in RFC 2822 format.
            date_created_before (str): Datetime filter used to consider only
                Verification Attempts created before this datetime on the
                summary aggregation. Given as GMT in RFC 2822 format.
            country (str): Filter used to consider only Verification Attempts
                sent to the specified destination country on the summary
                aggregation.
            channel (str): Filter Verification Attempts considered on the
                summary aggregation by communication channel. Valid values are
                `SMS` and `CALL`
            destination_prefix (str): Filter the Verification Attempts
                considered on the summary aggregation by Destination prefix.
                It is the prefix of a phone number in E.164 format.
            accept (str): The request header parameter.

        Returns:
            OK308: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Attempts/Summary')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('VerifyServiceSid')
                         .value(verify_service_sid))
            .query_param(Parameter()
                         .key('DateCreatedAfter')
                         .value(date_created_after))
            .query_param(Parameter()
                         .key('DateCreatedBefore')
                         .value(date_created_before))
            .query_param(Parameter()
                         .key('Country')
                         .value(country))
            .query_param(Parameter()
                         .key('Channel')
                         .value(channel))
            .query_param(Parameter()
                         .key('DestinationPrefix')
                         .value(destination_prefix))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK308.from_dictionary)
        ).execute()

    def create_verification_check(self,
                                  service_sid,
                                  accept,
                                  code,
                                  to,
                                  verification_sid,
                                  amount,
                                  payee):
        """Does a POST request to /v2/Services/{ServiceSid}/VerificationCheck.

        challenge a specific Verification Check.

        Args:
            service_sid (str): (Required) The SID of the verification
                [Service](https://www.twilio.com/docs/verify/api/service) to
                create the resource under.
            accept (str): The request header parameter.
            code (str): The 4-10 character string being verified.
            to (str): The phone number or
                [email](https://www.twilio.com/docs/verify/email) to verify.
                Either this parameter or the `verification_sid` must be
                specified. Phone numbers must be in [E.164
                format](https://www.twilio.com/docs/glossary/what-e164).
            verification_sid (str): A SID that uniquely identifies the
                Verification Check. Either this parameter or the `to` phone
                number/[email](https://www.twilio.com/docs/verify/email) must
                be specified.
            amount (str): The amount of the associated PSD2 compliant
                transaction. Requires the PSD2 Service flag enabled.
            payee (str): The payee of the associated PSD2 compliant
                transaction. Requires the PSD2 Service flag enabled.

        Returns:
            Created86: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/VerificationCheck')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Code')
                        .value(code))
            .form_param(Parameter()
                        .key('To')
                        .value(to))
            .form_param(Parameter()
                        .key('VerificationSid')
                        .value(verification_sid))
            .form_param(Parameter()
                        .key('Amount')
                        .value(amount))
            .form_param(Parameter()
                        .key('Payee')
                        .value(payee))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created86.from_dictionary)
        ).execute()

    def list_verification_template(self,
                                   friendly_name,
                                   page_size,
                                   accept):
        """Does a GET request to /v2/Templates.

        List all the available templates for a given Account.

        Args:
            friendly_name (str): String filter used to query templates with a
                given friendly name
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            accept (str): The request header parameter.

        Returns:
            OK309: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Templates')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('FriendlyName')
                         .value(friendly_name))
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK309.from_dictionary)
        ).execute()
