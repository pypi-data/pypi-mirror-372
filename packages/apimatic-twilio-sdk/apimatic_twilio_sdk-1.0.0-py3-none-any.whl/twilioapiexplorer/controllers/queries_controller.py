# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.ok_280 import OK280
from twilioapiexplorer.models.created_74 import Created74


class QueriesController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(QueriesController, self).__init__(config)

    def list_query(self,
                   language,
                   model_build,
                   status,
                   dialogue_sid,
                   page_size,
                   assistant_sid,
                   accept):
        """Does a GET request to /v1/Assistants/{AssistantSid}/Queries.

        Args:
            language (str): The [ISO
                language-country](https://docs.oracle.com/cd/E13214_01/wli/docs
                92/xref/xqisocodes.html) string that specifies the language
                used by the Query resources to read. For example: `en-US`.
            model_build (str): The SID or unique name of the [Model
                Build](https://www.twilio.com/docs/autopilot/api/model-build)
                to be queried.
            status (str): The status of the resources to read. Can be:
                `pending-review`, `reviewed`, or `discarded`
            dialogue_sid (str): The SID of the
                [Dialogue](https://www.twilio.com/docs/autopilot/api/dialogue).
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the resources to read.
            accept (str): The request header parameter.

        Returns:
            OK280: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Queries')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('Language')
                         .value(language))
            .query_param(Parameter()
                         .key('ModelBuild')
                         .value(model_build))
            .query_param(Parameter()
                         .key('Status')
                         .value(status))
            .query_param(Parameter()
                         .key('DialogueSid')
                         .value(dialogue_sid))
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK280.from_dictionary)
        ).execute()

    def create_query(self,
                     assistant_sid,
                     accept,
                     language,
                     query,
                     tasks,
                     model_build):
        """Does a POST request to /v1/Assistants/{AssistantSid}/Queries.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the new resource.
            accept (str): The request header parameter.
            language (str): (Required) The [ISO
                language-country](https://docs.oracle.com/cd/E13214_01/wli/docs
                92/xref/xqisocodes.html) string that specifies the language
                used for the new query. For example: `en-US`.
            query (str): (Required) The end-user's natural language input. It
                can be up to 2048 characters long.
            tasks (str): The list of tasks to limit the new query to. Tasks
                are expressed as a comma-separated list of task `unique_name`
                values. For example, `task-unique_name-1, task-unique_name-2`.
                Listing specific tasks is useful to constrain the paths that a
                user can take.
            model_build (str): The SID or unique name of the [Model
                Build](https://www.twilio.com/docs/autopilot/api/model-build)
                to be queried.

        Returns:
            Created74: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Queries')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Language')
                        .value(language))
            .form_param(Parameter()
                        .key('Query')
                        .value(query))
            .form_param(Parameter()
                        .key('Tasks')
                        .value(tasks))
            .form_param(Parameter()
                        .key('ModelBuild')
                        .value(model_build))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created74.from_dictionary)
        ).execute()
