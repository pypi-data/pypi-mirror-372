# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Created9(object):

    """Implementation of the 'Created9' model.

    Attributes:
        date_updated (str): The model property of type str.
        current_size (int): The model property of type int.
        friendly_name (str): The model property of type str.
        uri (str): The model property of type str.
        account_sid (str): The model property of type str.
        average_wait_time (int): The model property of type int.
        sid (str): The model property of type str.
        date_created (str): The model property of type str.
        max_size (int): The model property of type int.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "date_updated": 'date_updated',
        "current_size": 'current_size',
        "friendly_name": 'friendly_name',
        "uri": 'uri',
        "account_sid": 'account_sid',
        "average_wait_time": 'average_wait_time',
        "sid": 'sid',
        "date_created": 'date_created',
        "max_size": 'max_size'
    }

    def __init__(self,
                 date_updated=None,
                 current_size=None,
                 friendly_name=None,
                 uri=None,
                 account_sid=None,
                 average_wait_time=None,
                 sid=None,
                 date_created=None,
                 max_size=None):
        """Constructor for the Created9 class"""

        # Initialize members of the class
        self.date_updated = date_updated 
        self.current_size = current_size 
        self.friendly_name = friendly_name 
        self.uri = uri 
        self.account_sid = account_sid 
        self.average_wait_time = average_wait_time 
        self.sid = sid 
        self.date_created = date_created 
        self.max_size = max_size 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        date_updated = dictionary.get("date_updated") if dictionary.get("date_updated") else None
        current_size = dictionary.get("current_size") if dictionary.get("current_size") else None
        friendly_name = dictionary.get("friendly_name") if dictionary.get("friendly_name") else None
        uri = dictionary.get("uri") if dictionary.get("uri") else None
        account_sid = dictionary.get("account_sid") if dictionary.get("account_sid") else None
        average_wait_time = dictionary.get("average_wait_time") if dictionary.get("average_wait_time") else None
        sid = dictionary.get("sid") if dictionary.get("sid") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        max_size = dictionary.get("max_size") if dictionary.get("max_size") else None
        # Return an object of this model
        return cls(date_updated,
                   current_size,
                   friendly_name,
                   uri,
                   account_sid,
                   average_wait_time,
                   sid,
                   date_created,
                   max_size)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'date_updated={self.date_updated!r}, '
                f'current_size={self.current_size!r}, '
                f'friendly_name={self.friendly_name!r}, '
                f'uri={self.uri!r}, '
                f'account_sid={self.account_sid!r}, '
                f'average_wait_time={self.average_wait_time!r}, '
                f'sid={self.sid!r}, '
                f'date_created={self.date_created!r}, '
                f'max_size={self.max_size!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'date_updated={self.date_updated!s}, '
                f'current_size={self.current_size!s}, '
                f'friendly_name={self.friendly_name!s}, '
                f'uri={self.uri!s}, '
                f'account_sid={self.account_sid!s}, '
                f'average_wait_time={self.average_wait_time!s}, '
                f'sid={self.sid!s}, '
                f'date_created={self.date_created!s}, '
                f'max_size={self.max_size!s})')
