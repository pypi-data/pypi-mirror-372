# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Created44(object):

    """Implementation of the 'Created44' model.

    Attributes:
        sid (str): The model property of type str.
        unique_name (str): The model property of type str.
        account_sid (str): The model property of type str.
        friendly_name (str): The model property of type str.
        date_created (str): The model property of type str.
        date_updated (str): The model property of type str.
        url (str): The model property of type str.
        webhook_url (str): The model property of type str.
        webhooks_from_rest_enabled (bool): The model property of type bool.
        reachability_webhooks_enabled (bool): The model property of type bool.
        acl_enabled (bool): The model property of type bool.
        reachability_debouncing_enabled (bool): The model property of type
            bool.
        reachability_debouncing_window (int): The model property of type int.
        links (Any): The model property of type Any.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sid": 'sid',
        "unique_name": 'unique_name',
        "account_sid": 'account_sid',
        "friendly_name": 'friendly_name',
        "date_created": 'date_created',
        "date_updated": 'date_updated',
        "url": 'url',
        "webhook_url": 'webhook_url',
        "webhooks_from_rest_enabled": 'webhooks_from_rest_enabled',
        "reachability_webhooks_enabled": 'reachability_webhooks_enabled',
        "acl_enabled": 'acl_enabled',
        "reachability_debouncing_enabled": 'reachability_debouncing_enabled',
        "reachability_debouncing_window": 'reachability_debouncing_window',
        "links": 'links'
    }

    def __init__(self,
                 sid=None,
                 unique_name=None,
                 account_sid=None,
                 friendly_name=None,
                 date_created=None,
                 date_updated=None,
                 url=None,
                 webhook_url=None,
                 webhooks_from_rest_enabled=None,
                 reachability_webhooks_enabled=None,
                 acl_enabled=None,
                 reachability_debouncing_enabled=None,
                 reachability_debouncing_window=None,
                 links=None):
        """Constructor for the Created44 class"""

        # Initialize members of the class
        self.sid = sid 
        self.unique_name = unique_name 
        self.account_sid = account_sid 
        self.friendly_name = friendly_name 
        self.date_created = date_created 
        self.date_updated = date_updated 
        self.url = url 
        self.webhook_url = webhook_url 
        self.webhooks_from_rest_enabled = webhooks_from_rest_enabled 
        self.reachability_webhooks_enabled = reachability_webhooks_enabled 
        self.acl_enabled = acl_enabled 
        self.reachability_debouncing_enabled = reachability_debouncing_enabled 
        self.reachability_debouncing_window = reachability_debouncing_window 
        self.links = links 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        sid = dictionary.get("sid") if dictionary.get("sid") else None
        unique_name = dictionary.get("unique_name") if dictionary.get("unique_name") else None
        account_sid = dictionary.get("account_sid") if dictionary.get("account_sid") else None
        friendly_name = dictionary.get("friendly_name") if dictionary.get("friendly_name") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_updated = dictionary.get("date_updated") if dictionary.get("date_updated") else None
        url = dictionary.get("url") if dictionary.get("url") else None
        webhook_url = dictionary.get("webhook_url") if dictionary.get("webhook_url") else None
        webhooks_from_rest_enabled = dictionary.get("webhooks_from_rest_enabled") if "webhooks_from_rest_enabled" in dictionary.keys() else None
        reachability_webhooks_enabled = dictionary.get("reachability_webhooks_enabled") if "reachability_webhooks_enabled" in dictionary.keys() else None
        acl_enabled = dictionary.get("acl_enabled") if "acl_enabled" in dictionary.keys() else None
        reachability_debouncing_enabled = dictionary.get("reachability_debouncing_enabled") if "reachability_debouncing_enabled" in dictionary.keys() else None
        reachability_debouncing_window = dictionary.get("reachability_debouncing_window") if dictionary.get("reachability_debouncing_window") else None
        links = dictionary.get("links") if dictionary.get("links") else None
        # Return an object of this model
        return cls(sid,
                   unique_name,
                   account_sid,
                   friendly_name,
                   date_created,
                   date_updated,
                   url,
                   webhook_url,
                   webhooks_from_rest_enabled,
                   reachability_webhooks_enabled,
                   acl_enabled,
                   reachability_debouncing_enabled,
                   reachability_debouncing_window,
                   links)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!r}, '
                f'unique_name={self.unique_name!r}, '
                f'account_sid={self.account_sid!r}, '
                f'friendly_name={self.friendly_name!r}, '
                f'date_created={self.date_created!r}, '
                f'date_updated={self.date_updated!r}, '
                f'url={self.url!r}, '
                f'webhook_url={self.webhook_url!r}, '
                f'webhooks_from_rest_enabled={self.webhooks_from_rest_enabled!r}, '
                f'reachability_webhooks_enabled={self.reachability_webhooks_enabled!r}, '
                f'acl_enabled={self.acl_enabled!r}, '
                f'reachability_debouncing_enabled={self.reachability_debouncing_enabled!r}, '
                f'reachability_debouncing_window={self.reachability_debouncing_window!r}, '
                f'links={self.links!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!s}, '
                f'unique_name={self.unique_name!s}, '
                f'account_sid={self.account_sid!s}, '
                f'friendly_name={self.friendly_name!s}, '
                f'date_created={self.date_created!s}, '
                f'date_updated={self.date_updated!s}, '
                f'url={self.url!s}, '
                f'webhook_url={self.webhook_url!s}, '
                f'webhooks_from_rest_enabled={self.webhooks_from_rest_enabled!s}, '
                f'reachability_webhooks_enabled={self.reachability_webhooks_enabled!s}, '
                f'acl_enabled={self.acl_enabled!s}, '
                f'reachability_debouncing_enabled={self.reachability_debouncing_enabled!s}, '
                f'reachability_debouncing_window={self.reachability_debouncing_window!s}, '
                f'links={self.links!s})')
