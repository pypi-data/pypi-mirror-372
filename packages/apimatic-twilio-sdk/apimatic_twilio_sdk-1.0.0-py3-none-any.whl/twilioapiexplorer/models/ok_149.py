# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class OK149(object):

    """Implementation of the 'OK149' model.

    Attributes:
        sid (str): The model property of type str.
        account_sid (str): The model property of type str.
        friendly_name (str): The model property of type str.
        date_created (str): The model property of type str.
        date_updated (str): The model property of type str.
        apn_credential_sid (str): The model property of type str.
        gcm_credential_sid (str): The model property of type str.
        fcm_credential_sid (str): The model property of type str.
        messaging_service_sid (str): The model property of type str.
        facebook_messenger_page_id (str): The model property of type str.
        default_apn_notification_protocol_version (str): The model property of
            type str.
        default_gcm_notification_protocol_version (str): The model property of
            type str.
        default_fcm_notification_protocol_version (str): The model property of
            type str.
        log_enabled (bool): The model property of type bool.
        url (str): The model property of type str.
        links (Any): The model property of type Any.
        alexa_skill_id (str): The model property of type str.
        default_alexa_notification_protocol_version (str): The model property
            of type str.
        delivery_callback_url (str): The model property of type str.
        delivery_callback_enabled (bool): The model property of type bool.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sid": 'sid',
        "account_sid": 'account_sid',
        "friendly_name": 'friendly_name',
        "date_created": 'date_created',
        "date_updated": 'date_updated',
        "apn_credential_sid": 'apn_credential_sid',
        "gcm_credential_sid": 'gcm_credential_sid',
        "fcm_credential_sid": 'fcm_credential_sid',
        "messaging_service_sid": 'messaging_service_sid',
        "facebook_messenger_page_id": 'facebook_messenger_page_id',
        "default_apn_notification_protocol_version": 'default_apn_notification_protocol_version',
        "default_gcm_notification_protocol_version": 'default_gcm_notification_protocol_version',
        "default_fcm_notification_protocol_version": 'default_fcm_notification_protocol_version',
        "log_enabled": 'log_enabled',
        "url": 'url',
        "links": 'links',
        "alexa_skill_id": 'alexa_skill_id',
        "default_alexa_notification_protocol_version": 'default_alexa_notification_protocol_version',
        "delivery_callback_url": 'delivery_callback_url',
        "delivery_callback_enabled": 'delivery_callback_enabled'
    }

    def __init__(self,
                 sid=None,
                 account_sid=None,
                 friendly_name=None,
                 date_created=None,
                 date_updated=None,
                 apn_credential_sid=None,
                 gcm_credential_sid=None,
                 fcm_credential_sid=None,
                 messaging_service_sid=None,
                 facebook_messenger_page_id=None,
                 default_apn_notification_protocol_version=None,
                 default_gcm_notification_protocol_version=None,
                 default_fcm_notification_protocol_version=None,
                 log_enabled=None,
                 url=None,
                 links=None,
                 alexa_skill_id=None,
                 default_alexa_notification_protocol_version=None,
                 delivery_callback_url=None,
                 delivery_callback_enabled=None):
        """Constructor for the OK149 class"""

        # Initialize members of the class
        self.sid = sid 
        self.account_sid = account_sid 
        self.friendly_name = friendly_name 
        self.date_created = date_created 
        self.date_updated = date_updated 
        self.apn_credential_sid = apn_credential_sid 
        self.gcm_credential_sid = gcm_credential_sid 
        self.fcm_credential_sid = fcm_credential_sid 
        self.messaging_service_sid = messaging_service_sid 
        self.facebook_messenger_page_id = facebook_messenger_page_id 
        self.default_apn_notification_protocol_version = default_apn_notification_protocol_version 
        self.default_gcm_notification_protocol_version = default_gcm_notification_protocol_version 
        self.default_fcm_notification_protocol_version = default_fcm_notification_protocol_version 
        self.log_enabled = log_enabled 
        self.url = url 
        self.links = links 
        self.alexa_skill_id = alexa_skill_id 
        self.default_alexa_notification_protocol_version = default_alexa_notification_protocol_version 
        self.delivery_callback_url = delivery_callback_url 
        self.delivery_callback_enabled = delivery_callback_enabled 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        sid = dictionary.get("sid") if dictionary.get("sid") else None
        account_sid = dictionary.get("account_sid") if dictionary.get("account_sid") else None
        friendly_name = dictionary.get("friendly_name") if dictionary.get("friendly_name") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_updated = dictionary.get("date_updated") if dictionary.get("date_updated") else None
        apn_credential_sid = dictionary.get("apn_credential_sid") if dictionary.get("apn_credential_sid") else None
        gcm_credential_sid = dictionary.get("gcm_credential_sid") if dictionary.get("gcm_credential_sid") else None
        fcm_credential_sid = dictionary.get("fcm_credential_sid") if dictionary.get("fcm_credential_sid") else None
        messaging_service_sid = dictionary.get("messaging_service_sid") if dictionary.get("messaging_service_sid") else None
        facebook_messenger_page_id = dictionary.get("facebook_messenger_page_id") if dictionary.get("facebook_messenger_page_id") else None
        default_apn_notification_protocol_version = dictionary.get("default_apn_notification_protocol_version") if dictionary.get("default_apn_notification_protocol_version") else None
        default_gcm_notification_protocol_version = dictionary.get("default_gcm_notification_protocol_version") if dictionary.get("default_gcm_notification_protocol_version") else None
        default_fcm_notification_protocol_version = dictionary.get("default_fcm_notification_protocol_version") if dictionary.get("default_fcm_notification_protocol_version") else None
        log_enabled = dictionary.get("log_enabled") if "log_enabled" in dictionary.keys() else None
        url = dictionary.get("url") if dictionary.get("url") else None
        links = dictionary.get("links") if dictionary.get("links") else None
        alexa_skill_id = dictionary.get("alexa_skill_id") if dictionary.get("alexa_skill_id") else None
        default_alexa_notification_protocol_version = dictionary.get("default_alexa_notification_protocol_version") if dictionary.get("default_alexa_notification_protocol_version") else None
        delivery_callback_url = dictionary.get("delivery_callback_url") if dictionary.get("delivery_callback_url") else None
        delivery_callback_enabled = dictionary.get("delivery_callback_enabled") if "delivery_callback_enabled" in dictionary.keys() else None
        # Return an object of this model
        return cls(sid,
                   account_sid,
                   friendly_name,
                   date_created,
                   date_updated,
                   apn_credential_sid,
                   gcm_credential_sid,
                   fcm_credential_sid,
                   messaging_service_sid,
                   facebook_messenger_page_id,
                   default_apn_notification_protocol_version,
                   default_gcm_notification_protocol_version,
                   default_fcm_notification_protocol_version,
                   log_enabled,
                   url,
                   links,
                   alexa_skill_id,
                   default_alexa_notification_protocol_version,
                   delivery_callback_url,
                   delivery_callback_enabled)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!r}, '
                f'account_sid={self.account_sid!r}, '
                f'friendly_name={self.friendly_name!r}, '
                f'date_created={self.date_created!r}, '
                f'date_updated={self.date_updated!r}, '
                f'apn_credential_sid={self.apn_credential_sid!r}, '
                f'gcm_credential_sid={self.gcm_credential_sid!r}, '
                f'fcm_credential_sid={self.fcm_credential_sid!r}, '
                f'messaging_service_sid={self.messaging_service_sid!r}, '
                f'facebook_messenger_page_id={self.facebook_messenger_page_id!r}, '
                f'default_apn_notification_protocol_version={self.default_apn_notification_protocol_version!r}, '
                f'default_gcm_notification_protocol_version={self.default_gcm_notification_protocol_version!r}, '
                f'default_fcm_notification_protocol_version={self.default_fcm_notification_protocol_version!r}, '
                f'log_enabled={self.log_enabled!r}, '
                f'url={self.url!r}, '
                f'links={self.links!r}, '
                f'alexa_skill_id={self.alexa_skill_id!r}, '
                f'default_alexa_notification_protocol_version={self.default_alexa_notification_protocol_version!r}, '
                f'delivery_callback_url={self.delivery_callback_url!r}, '
                f'delivery_callback_enabled={self.delivery_callback_enabled!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!s}, '
                f'account_sid={self.account_sid!s}, '
                f'friendly_name={self.friendly_name!s}, '
                f'date_created={self.date_created!s}, '
                f'date_updated={self.date_updated!s}, '
                f'apn_credential_sid={self.apn_credential_sid!s}, '
                f'gcm_credential_sid={self.gcm_credential_sid!s}, '
                f'fcm_credential_sid={self.fcm_credential_sid!s}, '
                f'messaging_service_sid={self.messaging_service_sid!s}, '
                f'facebook_messenger_page_id={self.facebook_messenger_page_id!s}, '
                f'default_apn_notification_protocol_version={self.default_apn_notification_protocol_version!s}, '
                f'default_gcm_notification_protocol_version={self.default_gcm_notification_protocol_version!s}, '
                f'default_fcm_notification_protocol_version={self.default_fcm_notification_protocol_version!s}, '
                f'log_enabled={self.log_enabled!s}, '
                f'url={self.url!s}, '
                f'links={self.links!s}, '
                f'alexa_skill_id={self.alexa_skill_id!s}, '
                f'default_alexa_notification_protocol_version={self.default_alexa_notification_protocol_version!s}, '
                f'delivery_callback_url={self.delivery_callback_url!s}, '
                f'delivery_callback_enabled={self.delivery_callback_enabled!s})')
