# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Created74(object):

    """Implementation of the 'Created74' model.

    Attributes:
        account_sid (str): The model property of type str.
        date_created (str): The model property of type str.
        date_updated (str): The model property of type str.
        results (Any): The model property of type Any.
        language (str): The model property of type str.
        model_build_sid (str): The model property of type str.
        query (str): The model property of type str.
        sample_sid (str): The model property of type str.
        assistant_sid (str): The model property of type str.
        sid (str): The model property of type str.
        status (str): The model property of type str.
        url (str): The model property of type str.
        source_channel (str): The model property of type str.
        dialogue_sid (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_sid": 'account_sid',
        "date_created": 'date_created',
        "date_updated": 'date_updated',
        "results": 'results',
        "language": 'language',
        "model_build_sid": 'model_build_sid',
        "query": 'query',
        "sample_sid": 'sample_sid',
        "assistant_sid": 'assistant_sid',
        "sid": 'sid',
        "status": 'status',
        "url": 'url',
        "source_channel": 'source_channel',
        "dialogue_sid": 'dialogue_sid'
    }

    def __init__(self,
                 account_sid=None,
                 date_created=None,
                 date_updated=None,
                 results=None,
                 language=None,
                 model_build_sid=None,
                 query=None,
                 sample_sid=None,
                 assistant_sid=None,
                 sid=None,
                 status=None,
                 url=None,
                 source_channel=None,
                 dialogue_sid=None):
        """Constructor for the Created74 class"""

        # Initialize members of the class
        self.account_sid = account_sid 
        self.date_created = date_created 
        self.date_updated = date_updated 
        self.results = results 
        self.language = language 
        self.model_build_sid = model_build_sid 
        self.query = query 
        self.sample_sid = sample_sid 
        self.assistant_sid = assistant_sid 
        self.sid = sid 
        self.status = status 
        self.url = url 
        self.source_channel = source_channel 
        self.dialogue_sid = dialogue_sid 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        account_sid = dictionary.get("account_sid") if dictionary.get("account_sid") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_updated = dictionary.get("date_updated") if dictionary.get("date_updated") else None
        results = dictionary.get("results") if dictionary.get("results") else None
        language = dictionary.get("language") if dictionary.get("language") else None
        model_build_sid = dictionary.get("model_build_sid") if dictionary.get("model_build_sid") else None
        query = dictionary.get("query") if dictionary.get("query") else None
        sample_sid = dictionary.get("sample_sid") if dictionary.get("sample_sid") else None
        assistant_sid = dictionary.get("assistant_sid") if dictionary.get("assistant_sid") else None
        sid = dictionary.get("sid") if dictionary.get("sid") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        url = dictionary.get("url") if dictionary.get("url") else None
        source_channel = dictionary.get("source_channel") if dictionary.get("source_channel") else None
        dialogue_sid = dictionary.get("dialogue_sid") if dictionary.get("dialogue_sid") else None
        # Return an object of this model
        return cls(account_sid,
                   date_created,
                   date_updated,
                   results,
                   language,
                   model_build_sid,
                   query,
                   sample_sid,
                   assistant_sid,
                   sid,
                   status,
                   url,
                   source_channel,
                   dialogue_sid)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'account_sid={self.account_sid!r}, '
                f'date_created={self.date_created!r}, '
                f'date_updated={self.date_updated!r}, '
                f'results={self.results!r}, '
                f'language={self.language!r}, '
                f'model_build_sid={self.model_build_sid!r}, '
                f'query={self.query!r}, '
                f'sample_sid={self.sample_sid!r}, '
                f'assistant_sid={self.assistant_sid!r}, '
                f'sid={self.sid!r}, '
                f'status={self.status!r}, '
                f'url={self.url!r}, '
                f'source_channel={self.source_channel!r}, '
                f'dialogue_sid={self.dialogue_sid!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'account_sid={self.account_sid!s}, '
                f'date_created={self.date_created!s}, '
                f'date_updated={self.date_updated!s}, '
                f'results={self.results!s}, '
                f'language={self.language!s}, '
                f'model_build_sid={self.model_build_sid!s}, '
                f'query={self.query!s}, '
                f'sample_sid={self.sample_sid!s}, '
                f'assistant_sid={self.assistant_sid!s}, '
                f'sid={self.sid!s}, '
                f'status={self.status!s}, '
                f'url={self.url!s}, '
                f'source_channel={self.source_channel!s}, '
                f'dialogue_sid={self.dialogue_sid!s})')
