# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Created84(object):

    """Implementation of the 'Created84' model.

    Attributes:
        sid (str): The model property of type str.
        account_sid (str): The model property of type str.
        friendly_name (str): The model property of type str.
        code_length (int): The model property of type int.
        lookup_enabled (bool): The model property of type bool.
        psd_2_enabled (bool): The model property of type bool.
        skip_sms_to_landlines (bool): The model property of type bool.
        dtmf_input_required (bool): The model property of type bool.
        tts_name (str): The model property of type str.
        do_not_share_warning_enabled (bool): The model property of type bool.
        custom_code_enabled (bool): The model property of type bool.
        push (Any): The model property of type Any.
        totp (Any): The model property of type Any.
        default_template_sid (str): The model property of type str.
        date_created (str): The model property of type str.
        date_updated (str): The model property of type str.
        url (str): The model property of type str.
        links (Any): The model property of type Any.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sid": 'sid',
        "account_sid": 'account_sid',
        "friendly_name": 'friendly_name',
        "code_length": 'code_length',
        "lookup_enabled": 'lookup_enabled',
        "psd_2_enabled": 'psd2_enabled',
        "skip_sms_to_landlines": 'skip_sms_to_landlines',
        "dtmf_input_required": 'dtmf_input_required',
        "tts_name": 'tts_name',
        "do_not_share_warning_enabled": 'do_not_share_warning_enabled',
        "custom_code_enabled": 'custom_code_enabled',
        "push": 'push',
        "totp": 'totp',
        "default_template_sid": 'default_template_sid',
        "date_created": 'date_created',
        "date_updated": 'date_updated',
        "url": 'url',
        "links": 'links'
    }

    def __init__(self,
                 sid=None,
                 account_sid=None,
                 friendly_name=None,
                 code_length=None,
                 lookup_enabled=None,
                 psd_2_enabled=None,
                 skip_sms_to_landlines=None,
                 dtmf_input_required=None,
                 tts_name=None,
                 do_not_share_warning_enabled=None,
                 custom_code_enabled=None,
                 push=None,
                 totp=None,
                 default_template_sid=None,
                 date_created=None,
                 date_updated=None,
                 url=None,
                 links=None):
        """Constructor for the Created84 class"""

        # Initialize members of the class
        self.sid = sid 
        self.account_sid = account_sid 
        self.friendly_name = friendly_name 
        self.code_length = code_length 
        self.lookup_enabled = lookup_enabled 
        self.psd_2_enabled = psd_2_enabled 
        self.skip_sms_to_landlines = skip_sms_to_landlines 
        self.dtmf_input_required = dtmf_input_required 
        self.tts_name = tts_name 
        self.do_not_share_warning_enabled = do_not_share_warning_enabled 
        self.custom_code_enabled = custom_code_enabled 
        self.push = push 
        self.totp = totp 
        self.default_template_sid = default_template_sid 
        self.date_created = date_created 
        self.date_updated = date_updated 
        self.url = url 
        self.links = links 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        sid = dictionary.get("sid") if dictionary.get("sid") else None
        account_sid = dictionary.get("account_sid") if dictionary.get("account_sid") else None
        friendly_name = dictionary.get("friendly_name") if dictionary.get("friendly_name") else None
        code_length = dictionary.get("code_length") if dictionary.get("code_length") else None
        lookup_enabled = dictionary.get("lookup_enabled") if "lookup_enabled" in dictionary.keys() else None
        psd_2_enabled = dictionary.get("psd2_enabled") if "psd2_enabled" in dictionary.keys() else None
        skip_sms_to_landlines = dictionary.get("skip_sms_to_landlines") if "skip_sms_to_landlines" in dictionary.keys() else None
        dtmf_input_required = dictionary.get("dtmf_input_required") if "dtmf_input_required" in dictionary.keys() else None
        tts_name = dictionary.get("tts_name") if dictionary.get("tts_name") else None
        do_not_share_warning_enabled = dictionary.get("do_not_share_warning_enabled") if "do_not_share_warning_enabled" in dictionary.keys() else None
        custom_code_enabled = dictionary.get("custom_code_enabled") if "custom_code_enabled" in dictionary.keys() else None
        push = dictionary.get("push") if dictionary.get("push") else None
        totp = dictionary.get("totp") if dictionary.get("totp") else None
        default_template_sid = dictionary.get("default_template_sid") if dictionary.get("default_template_sid") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_updated = dictionary.get("date_updated") if dictionary.get("date_updated") else None
        url = dictionary.get("url") if dictionary.get("url") else None
        links = dictionary.get("links") if dictionary.get("links") else None
        # Return an object of this model
        return cls(sid,
                   account_sid,
                   friendly_name,
                   code_length,
                   lookup_enabled,
                   psd_2_enabled,
                   skip_sms_to_landlines,
                   dtmf_input_required,
                   tts_name,
                   do_not_share_warning_enabled,
                   custom_code_enabled,
                   push,
                   totp,
                   default_template_sid,
                   date_created,
                   date_updated,
                   url,
                   links)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!r}, '
                f'account_sid={self.account_sid!r}, '
                f'friendly_name={self.friendly_name!r}, '
                f'code_length={self.code_length!r}, '
                f'lookup_enabled={self.lookup_enabled!r}, '
                f'psd_2_enabled={self.psd_2_enabled!r}, '
                f'skip_sms_to_landlines={self.skip_sms_to_landlines!r}, '
                f'dtmf_input_required={self.dtmf_input_required!r}, '
                f'tts_name={self.tts_name!r}, '
                f'do_not_share_warning_enabled={self.do_not_share_warning_enabled!r}, '
                f'custom_code_enabled={self.custom_code_enabled!r}, '
                f'push={self.push!r}, '
                f'totp={self.totp!r}, '
                f'default_template_sid={self.default_template_sid!r}, '
                f'date_created={self.date_created!r}, '
                f'date_updated={self.date_updated!r}, '
                f'url={self.url!r}, '
                f'links={self.links!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!s}, '
                f'account_sid={self.account_sid!s}, '
                f'friendly_name={self.friendly_name!s}, '
                f'code_length={self.code_length!s}, '
                f'lookup_enabled={self.lookup_enabled!s}, '
                f'psd_2_enabled={self.psd_2_enabled!s}, '
                f'skip_sms_to_landlines={self.skip_sms_to_landlines!s}, '
                f'dtmf_input_required={self.dtmf_input_required!s}, '
                f'tts_name={self.tts_name!s}, '
                f'do_not_share_warning_enabled={self.do_not_share_warning_enabled!s}, '
                f'custom_code_enabled={self.custom_code_enabled!s}, '
                f'push={self.push!s}, '
                f'totp={self.totp!s}, '
                f'default_template_sid={self.default_template_sid!s}, '
                f'date_created={self.date_created!s}, '
                f'date_updated={self.date_updated!s}, '
                f'url={self.url!s}, '
                f'links={self.links!s})')
