# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class AddOnResult(object):

    """Implementation of the 'AddOnResult' model.

    Attributes:
        sid (str): The model property of type str.
        account_sid (str): The model property of type str.
        status (str): The model property of type str.
        add_on_sid (str): The model property of type str.
        add_on_configuration_sid (str): The model property of type str.
        date_created (str): The model property of type str.
        date_updated (str): The model property of type str.
        date_completed (str): The model property of type str.
        reference_sid (str): The model property of type str.
        subresource_uris (Any): The model property of type Any.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sid": 'sid',
        "account_sid": 'account_sid',
        "status": 'status',
        "add_on_sid": 'add_on_sid',
        "add_on_configuration_sid": 'add_on_configuration_sid',
        "date_created": 'date_created',
        "date_updated": 'date_updated',
        "date_completed": 'date_completed',
        "reference_sid": 'reference_sid',
        "subresource_uris": 'subresource_uris'
    }

    def __init__(self,
                 sid=None,
                 account_sid=None,
                 status=None,
                 add_on_sid=None,
                 add_on_configuration_sid=None,
                 date_created=None,
                 date_updated=None,
                 date_completed=None,
                 reference_sid=None,
                 subresource_uris=None):
        """Constructor for the AddOnResult class"""

        # Initialize members of the class
        self.sid = sid 
        self.account_sid = account_sid 
        self.status = status 
        self.add_on_sid = add_on_sid 
        self.add_on_configuration_sid = add_on_configuration_sid 
        self.date_created = date_created 
        self.date_updated = date_updated 
        self.date_completed = date_completed 
        self.reference_sid = reference_sid 
        self.subresource_uris = subresource_uris 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        sid = dictionary.get("sid") if dictionary.get("sid") else None
        account_sid = dictionary.get("account_sid") if dictionary.get("account_sid") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        add_on_sid = dictionary.get("add_on_sid") if dictionary.get("add_on_sid") else None
        add_on_configuration_sid = dictionary.get("add_on_configuration_sid") if dictionary.get("add_on_configuration_sid") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_updated = dictionary.get("date_updated") if dictionary.get("date_updated") else None
        date_completed = dictionary.get("date_completed") if dictionary.get("date_completed") else None
        reference_sid = dictionary.get("reference_sid") if dictionary.get("reference_sid") else None
        subresource_uris = dictionary.get("subresource_uris") if dictionary.get("subresource_uris") else None
        # Return an object of this model
        return cls(sid,
                   account_sid,
                   status,
                   add_on_sid,
                   add_on_configuration_sid,
                   date_created,
                   date_updated,
                   date_completed,
                   reference_sid,
                   subresource_uris)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!r}, '
                f'account_sid={self.account_sid!r}, '
                f'status={self.status!r}, '
                f'add_on_sid={self.add_on_sid!r}, '
                f'add_on_configuration_sid={self.add_on_configuration_sid!r}, '
                f'date_created={self.date_created!r}, '
                f'date_updated={self.date_updated!r}, '
                f'date_completed={self.date_completed!r}, '
                f'reference_sid={self.reference_sid!r}, '
                f'subresource_uris={self.subresource_uris!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!s}, '
                f'account_sid={self.account_sid!s}, '
                f'status={self.status!s}, '
                f'add_on_sid={self.add_on_sid!s}, '
                f'add_on_configuration_sid={self.add_on_configuration_sid!s}, '
                f'date_created={self.date_created!s}, '
                f'date_updated={self.date_updated!s}, '
                f'date_completed={self.date_completed!s}, '
                f'reference_sid={self.reference_sid!s}, '
                f'subresource_uris={self.subresource_uris!s})')
