# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class OK143(object):

    """Implementation of the 'OK143' model.

    Attributes:
        sid (str): The model property of type str.
        account_sid (str): The model property of type str.
        service_sid (str): The model property of type str.
        credential_sid (str): The model property of type str.
        date_created (str): The model property of type str.
        date_updated (str): The model property of type str.
        notification_protocol_version (str): The model property of type str.
        endpoint (str): The model property of type str.
        identity (str): The model property of type str.
        binding_type (str): The model property of type str.
        address (str): The model property of type str.
        tags (List[str]): The model property of type List[str].
        url (str): The model property of type str.
        links (Any): The model property of type Any.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sid": 'sid',
        "account_sid": 'account_sid',
        "service_sid": 'service_sid',
        "credential_sid": 'credential_sid',
        "date_created": 'date_created',
        "date_updated": 'date_updated',
        "notification_protocol_version": 'notification_protocol_version',
        "endpoint": 'endpoint',
        "identity": 'identity',
        "binding_type": 'binding_type',
        "address": 'address',
        "tags": 'tags',
        "url": 'url',
        "links": 'links'
    }

    def __init__(self,
                 sid=None,
                 account_sid=None,
                 service_sid=None,
                 credential_sid=None,
                 date_created=None,
                 date_updated=None,
                 notification_protocol_version=None,
                 endpoint=None,
                 identity=None,
                 binding_type=None,
                 address=None,
                 tags=None,
                 url=None,
                 links=None):
        """Constructor for the OK143 class"""

        # Initialize members of the class
        self.sid = sid 
        self.account_sid = account_sid 
        self.service_sid = service_sid 
        self.credential_sid = credential_sid 
        self.date_created = date_created 
        self.date_updated = date_updated 
        self.notification_protocol_version = notification_protocol_version 
        self.endpoint = endpoint 
        self.identity = identity 
        self.binding_type = binding_type 
        self.address = address 
        self.tags = tags 
        self.url = url 
        self.links = links 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        sid = dictionary.get("sid") if dictionary.get("sid") else None
        account_sid = dictionary.get("account_sid") if dictionary.get("account_sid") else None
        service_sid = dictionary.get("service_sid") if dictionary.get("service_sid") else None
        credential_sid = dictionary.get("credential_sid") if dictionary.get("credential_sid") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_updated = dictionary.get("date_updated") if dictionary.get("date_updated") else None
        notification_protocol_version = dictionary.get("notification_protocol_version") if dictionary.get("notification_protocol_version") else None
        endpoint = dictionary.get("endpoint") if dictionary.get("endpoint") else None
        identity = dictionary.get("identity") if dictionary.get("identity") else None
        binding_type = dictionary.get("binding_type") if dictionary.get("binding_type") else None
        address = dictionary.get("address") if dictionary.get("address") else None
        tags = dictionary.get("tags") if dictionary.get("tags") else None
        url = dictionary.get("url") if dictionary.get("url") else None
        links = dictionary.get("links") if dictionary.get("links") else None
        # Return an object of this model
        return cls(sid,
                   account_sid,
                   service_sid,
                   credential_sid,
                   date_created,
                   date_updated,
                   notification_protocol_version,
                   endpoint,
                   identity,
                   binding_type,
                   address,
                   tags,
                   url,
                   links)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!r}, '
                f'account_sid={self.account_sid!r}, '
                f'service_sid={self.service_sid!r}, '
                f'credential_sid={self.credential_sid!r}, '
                f'date_created={self.date_created!r}, '
                f'date_updated={self.date_updated!r}, '
                f'notification_protocol_version={self.notification_protocol_version!r}, '
                f'endpoint={self.endpoint!r}, '
                f'identity={self.identity!r}, '
                f'binding_type={self.binding_type!r}, '
                f'address={self.address!r}, '
                f'tags={self.tags!r}, '
                f'url={self.url!r}, '
                f'links={self.links!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!s}, '
                f'account_sid={self.account_sid!s}, '
                f'service_sid={self.service_sid!s}, '
                f'credential_sid={self.credential_sid!s}, '
                f'date_created={self.date_created!s}, '
                f'date_updated={self.date_updated!s}, '
                f'notification_protocol_version={self.notification_protocol_version!s}, '
                f'endpoint={self.endpoint!s}, '
                f'identity={self.identity!s}, '
                f'binding_type={self.binding_type!s}, '
                f'address={self.address!s}, '
                f'tags={self.tags!s}, '
                f'url={self.url!s}, '
                f'links={self.links!s})')
