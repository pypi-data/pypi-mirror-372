# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class OK187(object):

    """Implementation of the 'OK187' model.

    Attributes:
        sid (str): The model property of type str.
        unique_name (str): The model property of type str.
        account_sid (str): The model property of type str.
        friendly_name (str): The model property of type str.
        data_enabled (bool): The model property of type bool.
        data_metering (str): The model property of type str.
        data_limit (int): The model property of type int.
        messaging_enabled (bool): The model property of type bool.
        voice_enabled (bool): The model property of type bool.
        national_roaming_enabled (bool): The model property of type bool.
        national_roaming_data_limit (int): The model property of type int.
        international_roaming (List[str]): The model property of type
            List[str].
        international_roaming_data_limit (int): The model property of type int.
        date_created (str): The model property of type str.
        date_updated (str): The model property of type str.
        url (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sid": 'sid',
        "unique_name": 'unique_name',
        "account_sid": 'account_sid',
        "friendly_name": 'friendly_name',
        "data_enabled": 'data_enabled',
        "data_metering": 'data_metering',
        "data_limit": 'data_limit',
        "messaging_enabled": 'messaging_enabled',
        "voice_enabled": 'voice_enabled',
        "national_roaming_enabled": 'national_roaming_enabled',
        "national_roaming_data_limit": 'national_roaming_data_limit',
        "international_roaming": 'international_roaming',
        "international_roaming_data_limit": 'international_roaming_data_limit',
        "date_created": 'date_created',
        "date_updated": 'date_updated',
        "url": 'url'
    }

    def __init__(self,
                 sid=None,
                 unique_name=None,
                 account_sid=None,
                 friendly_name=None,
                 data_enabled=None,
                 data_metering=None,
                 data_limit=None,
                 messaging_enabled=None,
                 voice_enabled=None,
                 national_roaming_enabled=None,
                 national_roaming_data_limit=None,
                 international_roaming=None,
                 international_roaming_data_limit=None,
                 date_created=None,
                 date_updated=None,
                 url=None):
        """Constructor for the OK187 class"""

        # Initialize members of the class
        self.sid = sid 
        self.unique_name = unique_name 
        self.account_sid = account_sid 
        self.friendly_name = friendly_name 
        self.data_enabled = data_enabled 
        self.data_metering = data_metering 
        self.data_limit = data_limit 
        self.messaging_enabled = messaging_enabled 
        self.voice_enabled = voice_enabled 
        self.national_roaming_enabled = national_roaming_enabled 
        self.national_roaming_data_limit = national_roaming_data_limit 
        self.international_roaming = international_roaming 
        self.international_roaming_data_limit = international_roaming_data_limit 
        self.date_created = date_created 
        self.date_updated = date_updated 
        self.url = url 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        sid = dictionary.get("sid") if dictionary.get("sid") else None
        unique_name = dictionary.get("unique_name") if dictionary.get("unique_name") else None
        account_sid = dictionary.get("account_sid") if dictionary.get("account_sid") else None
        friendly_name = dictionary.get("friendly_name") if dictionary.get("friendly_name") else None
        data_enabled = dictionary.get("data_enabled") if "data_enabled" in dictionary.keys() else None
        data_metering = dictionary.get("data_metering") if dictionary.get("data_metering") else None
        data_limit = dictionary.get("data_limit") if dictionary.get("data_limit") else None
        messaging_enabled = dictionary.get("messaging_enabled") if "messaging_enabled" in dictionary.keys() else None
        voice_enabled = dictionary.get("voice_enabled") if "voice_enabled" in dictionary.keys() else None
        national_roaming_enabled = dictionary.get("national_roaming_enabled") if "national_roaming_enabled" in dictionary.keys() else None
        national_roaming_data_limit = dictionary.get("national_roaming_data_limit") if dictionary.get("national_roaming_data_limit") else None
        international_roaming = dictionary.get("international_roaming") if dictionary.get("international_roaming") else None
        international_roaming_data_limit = dictionary.get("international_roaming_data_limit") if dictionary.get("international_roaming_data_limit") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_updated = dictionary.get("date_updated") if dictionary.get("date_updated") else None
        url = dictionary.get("url") if dictionary.get("url") else None
        # Return an object of this model
        return cls(sid,
                   unique_name,
                   account_sid,
                   friendly_name,
                   data_enabled,
                   data_metering,
                   data_limit,
                   messaging_enabled,
                   voice_enabled,
                   national_roaming_enabled,
                   national_roaming_data_limit,
                   international_roaming,
                   international_roaming_data_limit,
                   date_created,
                   date_updated,
                   url)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!r}, '
                f'unique_name={self.unique_name!r}, '
                f'account_sid={self.account_sid!r}, '
                f'friendly_name={self.friendly_name!r}, '
                f'data_enabled={self.data_enabled!r}, '
                f'data_metering={self.data_metering!r}, '
                f'data_limit={self.data_limit!r}, '
                f'messaging_enabled={self.messaging_enabled!r}, '
                f'voice_enabled={self.voice_enabled!r}, '
                f'national_roaming_enabled={self.national_roaming_enabled!r}, '
                f'national_roaming_data_limit={self.national_roaming_data_limit!r}, '
                f'international_roaming={self.international_roaming!r}, '
                f'international_roaming_data_limit={self.international_roaming_data_limit!r}, '
                f'date_created={self.date_created!r}, '
                f'date_updated={self.date_updated!r}, '
                f'url={self.url!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!s}, '
                f'unique_name={self.unique_name!s}, '
                f'account_sid={self.account_sid!s}, '
                f'friendly_name={self.friendly_name!s}, '
                f'data_enabled={self.data_enabled!s}, '
                f'data_metering={self.data_metering!s}, '
                f'data_limit={self.data_limit!s}, '
                f'messaging_enabled={self.messaging_enabled!s}, '
                f'voice_enabled={self.voice_enabled!s}, '
                f'national_roaming_enabled={self.national_roaming_enabled!s}, '
                f'national_roaming_data_limit={self.national_roaming_data_limit!s}, '
                f'international_roaming={self.international_roaming!s}, '
                f'international_roaming_data_limit={self.international_roaming_data_limit!s}, '
                f'date_created={self.date_created!s}, '
                f'date_updated={self.date_updated!s}, '
                f'url={self.url!s})')
