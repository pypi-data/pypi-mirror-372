# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ModelBuild(object):

    """Implementation of the 'ModelBuild' model.

    Attributes:
        account_sid (str): The model property of type str.
        date_created (str): The model property of type str.
        date_updated (str): The model property of type str.
        assistant_sid (str): The model property of type str.
        sid (str): The model property of type str.
        status (str): The model property of type str.
        unique_name (str): The model property of type str.
        url (str): The model property of type str.
        build_duration (int): The model property of type int.
        error_code (int): The model property of type int.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_sid": 'account_sid',
        "date_created": 'date_created',
        "date_updated": 'date_updated',
        "assistant_sid": 'assistant_sid',
        "sid": 'sid',
        "status": 'status',
        "unique_name": 'unique_name',
        "url": 'url',
        "build_duration": 'build_duration',
        "error_code": 'error_code'
    }

    def __init__(self,
                 account_sid=None,
                 date_created=None,
                 date_updated=None,
                 assistant_sid=None,
                 sid=None,
                 status=None,
                 unique_name=None,
                 url=None,
                 build_duration=None,
                 error_code=None):
        """Constructor for the ModelBuild class"""

        # Initialize members of the class
        self.account_sid = account_sid 
        self.date_created = date_created 
        self.date_updated = date_updated 
        self.assistant_sid = assistant_sid 
        self.sid = sid 
        self.status = status 
        self.unique_name = unique_name 
        self.url = url 
        self.build_duration = build_duration 
        self.error_code = error_code 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        account_sid = dictionary.get("account_sid") if dictionary.get("account_sid") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_updated = dictionary.get("date_updated") if dictionary.get("date_updated") else None
        assistant_sid = dictionary.get("assistant_sid") if dictionary.get("assistant_sid") else None
        sid = dictionary.get("sid") if dictionary.get("sid") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        unique_name = dictionary.get("unique_name") if dictionary.get("unique_name") else None
        url = dictionary.get("url") if dictionary.get("url") else None
        build_duration = dictionary.get("build_duration") if dictionary.get("build_duration") else None
        error_code = dictionary.get("error_code") if dictionary.get("error_code") else None
        # Return an object of this model
        return cls(account_sid,
                   date_created,
                   date_updated,
                   assistant_sid,
                   sid,
                   status,
                   unique_name,
                   url,
                   build_duration,
                   error_code)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'account_sid={self.account_sid!r}, '
                f'date_created={self.date_created!r}, '
                f'date_updated={self.date_updated!r}, '
                f'assistant_sid={self.assistant_sid!r}, '
                f'sid={self.sid!r}, '
                f'status={self.status!r}, '
                f'unique_name={self.unique_name!r}, '
                f'url={self.url!r}, '
                f'build_duration={self.build_duration!r}, '
                f'error_code={self.error_code!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'account_sid={self.account_sid!s}, '
                f'date_created={self.date_created!s}, '
                f'date_updated={self.date_updated!s}, '
                f'assistant_sid={self.assistant_sid!s}, '
                f'sid={self.sid!s}, '
                f'status={self.status!s}, '
                f'unique_name={self.unique_name!s}, '
                f'url={self.url!s}, '
                f'build_duration={self.build_duration!s}, '
                f'error_code={self.error_code!s})')
