# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Sim(object):

    """Implementation of the 'Sim' model.

    Attributes:
        sid (str): The model property of type str.
        unique_name (str): The model property of type str.
        account_sid (str): The model property of type str.
        rate_plan_sid (str): The model property of type str.
        friendly_name (str): The model property of type str.
        iccid (str): The model property of type str.
        e_id (str): The model property of type str.
        status (str): The model property of type str.
        reset_status (str): The model property of type str.
        commands_callback_url (str): The model property of type str.
        commands_callback_method (str): The model property of type str.
        sms_fallback_method (str): The model property of type str.
        sms_fallback_url (str): The model property of type str.
        sms_method (str): The model property of type str.
        sms_url (str): The model property of type str.
        voice_fallback_method (str): The model property of type str.
        voice_fallback_url (str): The model property of type str.
        voice_method (str): The model property of type str.
        voice_url (str): The model property of type str.
        date_created (str): The model property of type str.
        date_updated (str): The model property of type str.
        url (str): The model property of type str.
        links (Any): The model property of type Any.
        ip_address (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sid": 'sid',
        "unique_name": 'unique_name',
        "account_sid": 'account_sid',
        "rate_plan_sid": 'rate_plan_sid',
        "friendly_name": 'friendly_name',
        "iccid": 'iccid',
        "e_id": 'e_id',
        "status": 'status',
        "reset_status": 'reset_status',
        "commands_callback_url": 'commands_callback_url',
        "commands_callback_method": 'commands_callback_method',
        "sms_fallback_method": 'sms_fallback_method',
        "sms_fallback_url": 'sms_fallback_url',
        "sms_method": 'sms_method',
        "sms_url": 'sms_url',
        "voice_fallback_method": 'voice_fallback_method',
        "voice_fallback_url": 'voice_fallback_url',
        "voice_method": 'voice_method',
        "voice_url": 'voice_url',
        "date_created": 'date_created',
        "date_updated": 'date_updated',
        "url": 'url',
        "links": 'links',
        "ip_address": 'ip_address'
    }

    def __init__(self,
                 sid=None,
                 unique_name=None,
                 account_sid=None,
                 rate_plan_sid=None,
                 friendly_name=None,
                 iccid=None,
                 e_id=None,
                 status=None,
                 reset_status=None,
                 commands_callback_url=None,
                 commands_callback_method=None,
                 sms_fallback_method=None,
                 sms_fallback_url=None,
                 sms_method=None,
                 sms_url=None,
                 voice_fallback_method=None,
                 voice_fallback_url=None,
                 voice_method=None,
                 voice_url=None,
                 date_created=None,
                 date_updated=None,
                 url=None,
                 links=None,
                 ip_address=None):
        """Constructor for the Sim class"""

        # Initialize members of the class
        self.sid = sid 
        self.unique_name = unique_name 
        self.account_sid = account_sid 
        self.rate_plan_sid = rate_plan_sid 
        self.friendly_name = friendly_name 
        self.iccid = iccid 
        self.e_id = e_id 
        self.status = status 
        self.reset_status = reset_status 
        self.commands_callback_url = commands_callback_url 
        self.commands_callback_method = commands_callback_method 
        self.sms_fallback_method = sms_fallback_method 
        self.sms_fallback_url = sms_fallback_url 
        self.sms_method = sms_method 
        self.sms_url = sms_url 
        self.voice_fallback_method = voice_fallback_method 
        self.voice_fallback_url = voice_fallback_url 
        self.voice_method = voice_method 
        self.voice_url = voice_url 
        self.date_created = date_created 
        self.date_updated = date_updated 
        self.url = url 
        self.links = links 
        self.ip_address = ip_address 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        sid = dictionary.get("sid") if dictionary.get("sid") else None
        unique_name = dictionary.get("unique_name") if dictionary.get("unique_name") else None
        account_sid = dictionary.get("account_sid") if dictionary.get("account_sid") else None
        rate_plan_sid = dictionary.get("rate_plan_sid") if dictionary.get("rate_plan_sid") else None
        friendly_name = dictionary.get("friendly_name") if dictionary.get("friendly_name") else None
        iccid = dictionary.get("iccid") if dictionary.get("iccid") else None
        e_id = dictionary.get("e_id") if dictionary.get("e_id") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        reset_status = dictionary.get("reset_status") if dictionary.get("reset_status") else None
        commands_callback_url = dictionary.get("commands_callback_url") if dictionary.get("commands_callback_url") else None
        commands_callback_method = dictionary.get("commands_callback_method") if dictionary.get("commands_callback_method") else None
        sms_fallback_method = dictionary.get("sms_fallback_method") if dictionary.get("sms_fallback_method") else None
        sms_fallback_url = dictionary.get("sms_fallback_url") if dictionary.get("sms_fallback_url") else None
        sms_method = dictionary.get("sms_method") if dictionary.get("sms_method") else None
        sms_url = dictionary.get("sms_url") if dictionary.get("sms_url") else None
        voice_fallback_method = dictionary.get("voice_fallback_method") if dictionary.get("voice_fallback_method") else None
        voice_fallback_url = dictionary.get("voice_fallback_url") if dictionary.get("voice_fallback_url") else None
        voice_method = dictionary.get("voice_method") if dictionary.get("voice_method") else None
        voice_url = dictionary.get("voice_url") if dictionary.get("voice_url") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_updated = dictionary.get("date_updated") if dictionary.get("date_updated") else None
        url = dictionary.get("url") if dictionary.get("url") else None
        links = dictionary.get("links") if dictionary.get("links") else None
        ip_address = dictionary.get("ip_address") if dictionary.get("ip_address") else None
        # Return an object of this model
        return cls(sid,
                   unique_name,
                   account_sid,
                   rate_plan_sid,
                   friendly_name,
                   iccid,
                   e_id,
                   status,
                   reset_status,
                   commands_callback_url,
                   commands_callback_method,
                   sms_fallback_method,
                   sms_fallback_url,
                   sms_method,
                   sms_url,
                   voice_fallback_method,
                   voice_fallback_url,
                   voice_method,
                   voice_url,
                   date_created,
                   date_updated,
                   url,
                   links,
                   ip_address)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!r}, '
                f'unique_name={self.unique_name!r}, '
                f'account_sid={self.account_sid!r}, '
                f'rate_plan_sid={self.rate_plan_sid!r}, '
                f'friendly_name={self.friendly_name!r}, '
                f'iccid={self.iccid!r}, '
                f'e_id={self.e_id!r}, '
                f'status={self.status!r}, '
                f'reset_status={self.reset_status!r}, '
                f'commands_callback_url={self.commands_callback_url!r}, '
                f'commands_callback_method={self.commands_callback_method!r}, '
                f'sms_fallback_method={self.sms_fallback_method!r}, '
                f'sms_fallback_url={self.sms_fallback_url!r}, '
                f'sms_method={self.sms_method!r}, '
                f'sms_url={self.sms_url!r}, '
                f'voice_fallback_method={self.voice_fallback_method!r}, '
                f'voice_fallback_url={self.voice_fallback_url!r}, '
                f'voice_method={self.voice_method!r}, '
                f'voice_url={self.voice_url!r}, '
                f'date_created={self.date_created!r}, '
                f'date_updated={self.date_updated!r}, '
                f'url={self.url!r}, '
                f'links={self.links!r}, '
                f'ip_address={self.ip_address!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'sid={self.sid!s}, '
                f'unique_name={self.unique_name!s}, '
                f'account_sid={self.account_sid!s}, '
                f'rate_plan_sid={self.rate_plan_sid!s}, '
                f'friendly_name={self.friendly_name!s}, '
                f'iccid={self.iccid!s}, '
                f'e_id={self.e_id!s}, '
                f'status={self.status!s}, '
                f'reset_status={self.reset_status!s}, '
                f'commands_callback_url={self.commands_callback_url!s}, '
                f'commands_callback_method={self.commands_callback_method!s}, '
                f'sms_fallback_method={self.sms_fallback_method!s}, '
                f'sms_fallback_url={self.sms_fallback_url!s}, '
                f'sms_method={self.sms_method!s}, '
                f'sms_url={self.sms_url!s}, '
                f'voice_fallback_method={self.voice_fallback_method!s}, '
                f'voice_fallback_url={self.voice_fallback_url!s}, '
                f'voice_method={self.voice_method!s}, '
                f'voice_url={self.voice_url!s}, '
                f'date_created={self.date_created!s}, '
                f'date_updated={self.date_updated!s}, '
                f'url={self.url!s}, '
                f'links={self.links!s}, '
                f'ip_address={self.ip_address!s})')
