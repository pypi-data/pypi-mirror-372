# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class OK16(object):

    """Implementation of the 'OK16' model.

    Attributes:
        account_sid (str): The model property of type str.
        api_version (str): The model property of type str.
        call_sid (str): The model property of type str.
        conference_sid (str): The model property of type str.
        date_created (str): The model property of type str.
        date_updated (str): The model property of type str.
        start_time (str): The model property of type str.
        duration (str): The model property of type str.
        sid (str): The model property of type str.
        price (str): The model property of type str.
        price_unit (str): The model property of type str.
        status (str): The model property of type str.
        channels (int): The model property of type int.
        source (str): The model property of type str.
        error_code (int): The model property of type int.
        uri (str): The model property of type str.
        encryption_details (Any): The model property of type Any.
        subresource_uris (Any): The model property of type Any.
        media_url (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_sid": 'account_sid',
        "api_version": 'api_version',
        "call_sid": 'call_sid',
        "conference_sid": 'conference_sid',
        "date_created": 'date_created',
        "date_updated": 'date_updated',
        "start_time": 'start_time',
        "duration": 'duration',
        "sid": 'sid',
        "price": 'price',
        "price_unit": 'price_unit',
        "status": 'status',
        "channels": 'channels',
        "source": 'source',
        "error_code": 'error_code',
        "uri": 'uri',
        "encryption_details": 'encryption_details',
        "subresource_uris": 'subresource_uris',
        "media_url": 'media_url'
    }

    def __init__(self,
                 account_sid=None,
                 api_version=None,
                 call_sid=None,
                 conference_sid=None,
                 date_created=None,
                 date_updated=None,
                 start_time=None,
                 duration=None,
                 sid=None,
                 price=None,
                 price_unit=None,
                 status=None,
                 channels=None,
                 source=None,
                 error_code=None,
                 uri=None,
                 encryption_details=None,
                 subresource_uris=None,
                 media_url=None):
        """Constructor for the OK16 class"""

        # Initialize members of the class
        self.account_sid = account_sid 
        self.api_version = api_version 
        self.call_sid = call_sid 
        self.conference_sid = conference_sid 
        self.date_created = date_created 
        self.date_updated = date_updated 
        self.start_time = start_time 
        self.duration = duration 
        self.sid = sid 
        self.price = price 
        self.price_unit = price_unit 
        self.status = status 
        self.channels = channels 
        self.source = source 
        self.error_code = error_code 
        self.uri = uri 
        self.encryption_details = encryption_details 
        self.subresource_uris = subresource_uris 
        self.media_url = media_url 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        account_sid = dictionary.get("account_sid") if dictionary.get("account_sid") else None
        api_version = dictionary.get("api_version") if dictionary.get("api_version") else None
        call_sid = dictionary.get("call_sid") if dictionary.get("call_sid") else None
        conference_sid = dictionary.get("conference_sid") if dictionary.get("conference_sid") else None
        date_created = dictionary.get("date_created") if dictionary.get("date_created") else None
        date_updated = dictionary.get("date_updated") if dictionary.get("date_updated") else None
        start_time = dictionary.get("start_time") if dictionary.get("start_time") else None
        duration = dictionary.get("duration") if dictionary.get("duration") else None
        sid = dictionary.get("sid") if dictionary.get("sid") else None
        price = dictionary.get("price") if dictionary.get("price") else None
        price_unit = dictionary.get("price_unit") if dictionary.get("price_unit") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        channels = dictionary.get("channels") if dictionary.get("channels") else None
        source = dictionary.get("source") if dictionary.get("source") else None
        error_code = dictionary.get("error_code") if dictionary.get("error_code") else None
        uri = dictionary.get("uri") if dictionary.get("uri") else None
        encryption_details = dictionary.get("encryption_details") if dictionary.get("encryption_details") else None
        subresource_uris = dictionary.get("subresource_uris") if dictionary.get("subresource_uris") else None
        media_url = dictionary.get("media_url") if dictionary.get("media_url") else None
        # Return an object of this model
        return cls(account_sid,
                   api_version,
                   call_sid,
                   conference_sid,
                   date_created,
                   date_updated,
                   start_time,
                   duration,
                   sid,
                   price,
                   price_unit,
                   status,
                   channels,
                   source,
                   error_code,
                   uri,
                   encryption_details,
                   subresource_uris,
                   media_url)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'account_sid={self.account_sid!r}, '
                f'api_version={self.api_version!r}, '
                f'call_sid={self.call_sid!r}, '
                f'conference_sid={self.conference_sid!r}, '
                f'date_created={self.date_created!r}, '
                f'date_updated={self.date_updated!r}, '
                f'start_time={self.start_time!r}, '
                f'duration={self.duration!r}, '
                f'sid={self.sid!r}, '
                f'price={self.price!r}, '
                f'price_unit={self.price_unit!r}, '
                f'status={self.status!r}, '
                f'channels={self.channels!r}, '
                f'source={self.source!r}, '
                f'error_code={self.error_code!r}, '
                f'uri={self.uri!r}, '
                f'encryption_details={self.encryption_details!r}, '
                f'subresource_uris={self.subresource_uris!r}, '
                f'media_url={self.media_url!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'account_sid={self.account_sid!s}, '
                f'api_version={self.api_version!s}, '
                f'call_sid={self.call_sid!s}, '
                f'conference_sid={self.conference_sid!s}, '
                f'date_created={self.date_created!s}, '
                f'date_updated={self.date_updated!s}, '
                f'start_time={self.start_time!s}, '
                f'duration={self.duration!s}, '
                f'sid={self.sid!s}, '
                f'price={self.price!s}, '
                f'price_unit={self.price_unit!s}, '
                f'status={self.status!s}, '
                f'channels={self.channels!s}, '
                f'source={self.source!s}, '
                f'error_code={self.error_code!s}, '
                f'uri={self.uri!s}, '
                f'encryption_details={self.encryption_details!s}, '
                f'subresource_uris={self.subresource_uris!s}, '
                f'media_url={self.media_url!s})')
