# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.ok_64 import OK64
from twilioapiexplorer.models.created_19 import Created19
from twilioapiexplorer.models.ok_65 import OK65


class ActivitiesController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(ActivitiesController, self).__init__(config)

    def list_activity(self,
                      friendly_name,
                      available,
                      page_size,
                      accept,
                      workspace_sid):
        """Does a GET request to /Workspaces/{WorkspaceSid}/Activities.

        Args:
            friendly_name (str): The `friendly_name` of the Activity resources
                to read.
            available (str): Whether return only Activity resources that are
                available or unavailable. A value of `true` returns only
                available activities. Values of '1' or `yes` also indicate
                `true`. All other values represent `false` and return
                activities that are unavailable.
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            accept (str): The request header parameter.
            workspace_sid (str): The request template parameter.

        Returns:
            OK64: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_7)
            .path('/Workspaces/{WorkspaceSid}/Activities')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('FriendlyName')
                         .value(friendly_name))
            .query_param(Parameter()
                         .key('Available')
                         .value(available))
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .template_param(Parameter()
                            .key('WorkspaceSid')
                            .value(workspace_sid)
                            .should_encode(True))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK64.from_dictionary)
        ).execute()

    def create_activity(self,
                        accept,
                        friendly_name,
                        available,
                        workspace_sid):
        """Does a POST request to /Workspaces/{WorkspaceSid}/Activities.

        Args:
            accept (str): The request header parameter.
            friendly_name (str): (Required) A descriptive string that you
                create to describe the Activity resource. It can be up to 64
                characters long. These names are used to calculate and expose
                statistics about Workers, and provide visibility into the
                state of each Worker. Examples of friendly names include:
                `on-call`, `break`, and `email`.
            available (bool): Whether the Worker should be eligible to receive
                a Task when it occupies the Activity. A value of `true`, `1`,
                or `yes` specifies the Activity is available. All other values
                specify that it is not. The value cannot be changed after the
                Activity is created.
            workspace_sid (str): The request template parameter.

        Returns:
            Created19: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_7)
            .path('/Workspaces/{WorkspaceSid}/Activities')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('FriendlyName')
                        .value(friendly_name))
            .form_param(Parameter()
                        .key('Available')
                        .value(available))
            .template_param(Parameter()
                            .key('WorkspaceSid')
                            .value(workspace_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created19.from_dictionary)
        ).execute()

    def fetch_activity(self,
                       accept,
                       workspace_sid,
                       sid):
        """Does a GET request to /Workspaces/{WorkspaceSid}/Activities/{Sid}.

        Args:
            accept (str): The request header parameter.
            workspace_sid (str): The request template parameter.
            sid (str): The request template parameter.

        Returns:
            OK65: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_7)
            .path('/Workspaces/{WorkspaceSid}/Activities/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .template_param(Parameter()
                            .key('WorkspaceSid')
                            .value(workspace_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK65.from_dictionary)
        ).execute()

    def update_activity(self,
                        accept,
                        friendly_name,
                        workspace_sid,
                        sid):
        """Does a POST request to /Workspaces/{WorkspaceSid}/Activities/{Sid}.

        Args:
            accept (str): The request header parameter.
            friendly_name (str): A descriptive string that you create to
                describe the Activity resource. It can be up to 64 characters
                long. These names are used to calculate and expose statistics
                about Workers, and provide visibility into the state of each
                Worker. Examples of friendly names include: `on-call`,
                `break`, and `email`.
            workspace_sid (str): The request template parameter.
            sid (str): The request template parameter.

        Returns:
            OK65: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_7)
            .path('/Workspaces/{WorkspaceSid}/Activities/{Sid}')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('FriendlyName')
                        .value(friendly_name))
            .template_param(Parameter()
                            .key('WorkspaceSid')
                            .value(workspace_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK65.from_dictionary)
        ).execute()

    def delete_activity(self,
                        workspace_sid,
                        sid):
        """Does a DELETE request to /Workspaces/{WorkspaceSid}/Activities/{Sid}.

        Args:
            workspace_sid (str): The request template parameter.
            sid (str): The request template parameter.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_7)
            .path('/Workspaces/{WorkspaceSid}/Activities/{Sid}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('WorkspaceSid')
                            .value(workspace_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()
