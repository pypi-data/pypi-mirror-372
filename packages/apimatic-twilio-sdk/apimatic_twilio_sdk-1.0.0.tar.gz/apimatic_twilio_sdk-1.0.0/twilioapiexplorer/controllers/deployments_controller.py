# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.ok_341 import OK341
from twilioapiexplorer.models.created_94 import Created94
from twilioapiexplorer.models.ok_342 import OK342


class DeploymentsController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(DeploymentsController, self).__init__(config)

    def list_deployment(self,
                        page_size,
                        service_sid,
                        environment_sid,
                        accept):
        """Does a GET request to /v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments.

        Retrieve a list of all Deployments.

        Args:
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            service_sid (str): (Required) The SID of the Service to read the
                Deployment resources from.
            environment_sid (str): (Required) The SID of the Environment used
                by the Deployment resources to read.
            accept (str): The request header parameter.

        Returns:
            OK341: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('EnvironmentSid')
                            .value(environment_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK341.from_dictionary)
        ).execute()

    def create_deployment(self,
                          service_sid,
                          environment_sid,
                          accept,
                          build_sid):
        """Does a POST request to /v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments.

        Create a new Deployment.

        Args:
            service_sid (str): (Required) The SID of the Service to create the
                Deployment resource under.
            environment_sid (str): (Required) The SID of the Environment for
                the Deployment.
            accept (str): The request header parameter.
            build_sid (str): The SID of the Build for the Deployment.

        Returns:
            Created94: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('EnvironmentSid')
                            .value(environment_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('BuildSid')
                        .value(build_sid))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created94.from_dictionary)
        ).execute()

    def fetch_deployment(self,
                         service_sid,
                         environment_sid,
                         sid,
                         accept):
        """Does a GET request to /v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments/{Sid}.

        Retrieve a specific Deployment.

        Args:
            service_sid (str): (Required) The SID of the Service to fetch the
                Deployment resource from.
            environment_sid (str): (Required) The SID of the Environment used
                by the Deployment to fetch.
            sid (str): (Required) The SID that identifies the Deployment
                resource to fetch.
            accept (str): The request header parameter.

        Returns:
            OK342: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Services/{ServiceSid}/Environments/{EnvironmentSid}/Deployments/{Sid}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('EnvironmentSid')
                            .value(environment_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK342.from_dictionary)
        ).execute()
