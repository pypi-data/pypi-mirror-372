# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.created_89 import Created89
from twilioapiexplorer.models.ok_316 import OK316
from twilioapiexplorer.models.ok_317 import OK317


class ApplicationsController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(ApplicationsController, self).__init__(config)

    def create_application(self,
                           accept,
                           api_version,
                           voice_url,
                           voice_method,
                           voice_fallback_url,
                           voice_fallback_method,
                           status_callback,
                           status_callback_method,
                           voice_caller_id_lookup,
                           sms_url,
                           sms_method,
                           sms_fallback_url,
                           sms_fallback_method,
                           sms_status_callback,
                           message_status_callback,
                           friendly_name,
                           account_sid):
        """Does a POST request to /2010-04-01/Accounts/{AccountSid}/Applications.json.

        Args:
            accept (str): The request header parameter.
            api_version (str): The API version to use to start a new TwiML
                session. Can be: `2010-04-01` or `2008-08-01`. The default
                value is the account's default API version.
            voice_url (str): The URL we should call when the phone number
                assigned to this application receives a call.
            voice_method (str): The HTTP method we should use to call
                `voice_url`. Can be: `GET` or `POST`.
            voice_fallback_url (str): The URL that we should call when an
                error occurs retrieving or executing the TwiML requested by
                `url`.
            voice_fallback_method (str): The HTTP method we should use to call
                `voice_fallback_url`. Can be: `GET` or `POST`.
            status_callback (str): The URL we should call using the
                `status_callback_method` to send status information to your
                application.
            status_callback_method (str): The HTTP method we should use to
                call `status_callback`. Can be: `GET` or `POST`.
            voice_caller_id_lookup (bool): Whether we should look up the
                caller's caller-ID name from the CNAM database (additional
                charges apply). Can be: `true` or `false`.
            sms_url (str): The URL we should call when the phone number
                receives an incoming SMS message.
            sms_method (str): The HTTP method we should use to call `sms_url`.
                Can be: `GET` or `POST`.
            sms_fallback_url (str): The URL that we should call when an error
                occurs while retrieving or executing the TwiML from `sms_url`.
            sms_fallback_method (str): The HTTP method we should use to call
                `sms_fallback_url`. Can be: `GET` or `POST`.
            sms_status_callback (str): The URL we should call using a POST
                method to send status information about SMS messages sent by
                the application.
            message_status_callback (str): The URL we should call using a POST
                method to send message status information to your application.
            friendly_name (str): A descriptive string that you create to
                describe the new application. It can be up to 64 characters
                long.
            account_sid (str): The request template parameter.

        Returns:
            Created89: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/2010-04-01/Accounts/{AccountSid}/Applications.json')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('ApiVersion')
                        .value(api_version))
            .form_param(Parameter()
                        .key('VoiceUrl')
                        .value(voice_url))
            .form_param(Parameter()
                        .key('VoiceMethod')
                        .value(voice_method))
            .form_param(Parameter()
                        .key('VoiceFallbackUrl')
                        .value(voice_fallback_url))
            .form_param(Parameter()
                        .key('VoiceFallbackMethod')
                        .value(voice_fallback_method))
            .form_param(Parameter()
                        .key('StatusCallback')
                        .value(status_callback))
            .form_param(Parameter()
                        .key('StatusCallbackMethod')
                        .value(status_callback_method))
            .form_param(Parameter()
                        .key('VoiceCallerIdLookup')
                        .value(voice_caller_id_lookup))
            .form_param(Parameter()
                        .key('SmsUrl')
                        .value(sms_url))
            .form_param(Parameter()
                        .key('SmsMethod')
                        .value(sms_method))
            .form_param(Parameter()
                        .key('SmsFallbackUrl')
                        .value(sms_fallback_url))
            .form_param(Parameter()
                        .key('SmsFallbackMethod')
                        .value(sms_fallback_method))
            .form_param(Parameter()
                        .key('SmsStatusCallback')
                        .value(sms_status_callback))
            .form_param(Parameter()
                        .key('MessageStatusCallback')
                        .value(message_status_callback))
            .form_param(Parameter()
                        .key('FriendlyName')
                        .value(friendly_name))
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created89.from_dictionary)
        ).execute()

    def list_application(self,
                         friendly_name,
                         page_size,
                         account_sid,
                         accept):
        """Does a GET request to /2010-04-01/Accounts/{AccountSid}/Applications.json.

        Args:
            friendly_name (str): The string that identifies the Application
                resources to read.
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                created the Application resources to read.
            accept (str): The request header parameter.

        Returns:
            OK316: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/2010-04-01/Accounts/{AccountSid}/Applications.json')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('FriendlyName')
                         .value(friendly_name))
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK316.from_dictionary)
        ).execute()

    def delete_application(self,
                           account_sid,
                           sid):
        """Does a DELETE request to /2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json.

        Args:
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                created the Application resources to delete.
            sid (str): The request template parameter.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def fetch_application(self,
                          account_sid,
                          accept,
                          sid):
        """Does a GET request to /2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json.

        Args:
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                created the Application resource to fetch.
            accept (str): The request header parameter.
            sid (str): The request template parameter.

        Returns:
            OK317: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK317.from_dictionary)
        ).execute()

    def update_application(self,
                           account_sid,
                           accept,
                           friendly_name,
                           api_version,
                           voice_url,
                           voice_method,
                           voice_fallback_url,
                           voice_fallback_method,
                           status_callback,
                           status_callback_method,
                           voice_caller_id_lookup,
                           sms_url,
                           sms_method,
                           sms_fallback_url,
                           sms_fallback_method,
                           sms_status_callback,
                           message_status_callback,
                           sid):
        """Does a POST request to /2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json.

        Args:
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                created the Application resources to update.
            accept (str): The request header parameter.
            friendly_name (str): A descriptive string that you create to
                describe the resource. It can be up to 64 characters long.
            api_version (str): The API version to use to start a new TwiML
                session. Can be: `2010-04-01` or `2008-08-01`. The default
                value is your account's default API version.
            voice_url (str): The URL we should call when the phone number
                assigned to this application receives a call.
            voice_method (str): The HTTP method we should use to call
                `voice_url`. Can be: `GET` or `POST`.
            voice_fallback_url (str): The URL that we should call when an
                error occurs retrieving or executing the TwiML requested by
                `url`.
            voice_fallback_method (str): The HTTP method we should use to call
                `voice_fallback_url`. Can be: `GET` or `POST`.
            status_callback (str): The URL we should call using the
                `status_callback_method` to send status information to your
                application.
            status_callback_method (str): The HTTP method we should use to
                call `status_callback`. Can be: `GET` or `POST`.
            voice_caller_id_lookup (bool): Whether we should look up the
                caller's caller-ID name from the CNAM database (additional
                charges apply). Can be: `true` or `false`.
            sms_url (str): The URL we should call when the phone number
                receives an incoming SMS message.
            sms_method (str): The HTTP method we should use to call `sms_url`.
                Can be: `GET` or `POST`.
            sms_fallback_url (str): The URL that we should call when an error
                occurs while retrieving or executing the TwiML from `sms_url`.
            sms_fallback_method (str): The HTTP method we should use to call
                `sms_fallback_url`. Can be: `GET` or `POST`.
            sms_status_callback (str): Same as message_status_callback: The
                URL we should call using a POST method to send status
                information about SMS messages sent by the application.
                Deprecated, included for backwards compatibility.
            message_status_callback (str): The URL we should call using a POST
                method to send message status information to your application.
            sid (str): The request template parameter.

        Returns:
            OK317: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('FriendlyName')
                        .value(friendly_name))
            .form_param(Parameter()
                        .key('ApiVersion')
                        .value(api_version))
            .form_param(Parameter()
                        .key('VoiceUrl')
                        .value(voice_url))
            .form_param(Parameter()
                        .key('VoiceMethod')
                        .value(voice_method))
            .form_param(Parameter()
                        .key('VoiceFallbackUrl')
                        .value(voice_fallback_url))
            .form_param(Parameter()
                        .key('VoiceFallbackMethod')
                        .value(voice_fallback_method))
            .form_param(Parameter()
                        .key('StatusCallback')
                        .value(status_callback))
            .form_param(Parameter()
                        .key('StatusCallbackMethod')
                        .value(status_callback_method))
            .form_param(Parameter()
                        .key('VoiceCallerIdLookup')
                        .value(voice_caller_id_lookup))
            .form_param(Parameter()
                        .key('SmsUrl')
                        .value(sms_url))
            .form_param(Parameter()
                        .key('SmsMethod')
                        .value(sms_method))
            .form_param(Parameter()
                        .key('SmsFallbackUrl')
                        .value(sms_fallback_url))
            .form_param(Parameter()
                        .key('SmsFallbackMethod')
                        .value(sms_fallback_method))
            .form_param(Parameter()
                        .key('SmsStatusCallback')
                        .value(sms_status_callback))
            .form_param(Parameter()
                        .key('MessageStatusCallback')
                        .value(message_status_callback))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK317.from_dictionary)
        ).execute()
