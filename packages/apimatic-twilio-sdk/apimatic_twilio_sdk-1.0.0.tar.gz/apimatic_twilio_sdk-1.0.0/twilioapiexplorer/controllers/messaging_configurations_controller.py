# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.created_80 import Created80
from twilioapiexplorer.models.ok_294 import OK294
from twilioapiexplorer.models.ok_295 import OK295


class MessagingConfigurationsController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(MessagingConfigurationsController, self).__init__(config)

    def create_messaging_configuration(self,
                                       service_sid,
                                       accept,
                                       country,
                                       messaging_service_sid):
        """Does a POST request to /v2/Services/{ServiceSid}/MessagingConfigurations.

        Create a new MessagingConfiguration for a service.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) that
                the resource is associated with.
            accept (str): The request header parameter.
            country (str): (Required) The
                [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                country code of the country this configuration will be applied
                to. If this is a global configuration, Country will take the
                value `all`.
            messaging_service_sid (str): (Required) The SID of the [Messaging
                Service](https://www.twilio.com/docs/sms/services/api) to be
                used to send SMS to the country of this configuration.

        Returns:
            Created80: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/MessagingConfigurations')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Country')
                        .value(country))
            .form_param(Parameter()
                        .key('MessagingServiceSid')
                        .value(messaging_service_sid))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created80.from_dictionary)
        ).execute()

    def list_messaging_configuration(self,
                                     page_size,
                                     service_sid,
                                     accept):
        """Does a GET request to /v2/Services/{ServiceSid}/MessagingConfigurations.

        Retrieve a list of all Messaging Configurations for a Service.

        Args:
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) that
                the resource is associated with.
            accept (str): The request header parameter.

        Returns:
            OK294: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/MessagingConfigurations')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK294.from_dictionary)
        ).execute()

    def update_messaging_configuration(self,
                                       service_sid,
                                       country,
                                       accept,
                                       messaging_service_sid):
        """Does a POST request to /v2/Services/{ServiceSid}/MessagingConfigurations/{Country}.

        Update a specific MessagingConfiguration

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) that
                the resource is associated with.
            country (str): (Required) The
                [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                country code of the country this configuration will be applied
                to. If this is a global configuration, Country will take the
                value `all`.
            accept (str): The request header parameter.
            messaging_service_sid (str): (Required) The SID of the [Messaging
                Service](https://www.twilio.com/docs/sms/services/api) to be
                used to send SMS to the country of this configuration.

        Returns:
            OK295: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Country')
                            .value(country)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('MessagingServiceSid')
                        .value(messaging_service_sid))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK295.from_dictionary)
        ).execute()

    def fetch_messaging_configuration(self,
                                      service_sid,
                                      country,
                                      accept):
        """Does a GET request to /v2/Services/{ServiceSid}/MessagingConfigurations/{Country}.

        Fetch a specific MessagingConfiguration.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) that
                the resource is associated with.
            country (str): (Required) The
                [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                country code of the country this configuration will be applied
                to. If this is a global configuration, Country will take the
                value `all`.
            accept (str): The request header parameter.

        Returns:
            OK295: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Country')
                            .value(country)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK295.from_dictionary)
        ).execute()

    def delete_messaging_configuration(self,
                                       service_sid,
                                       country):
        """Does a DELETE request to /v2/Services/{ServiceSid}/MessagingConfigurations/{Country}.

        Delete a specific MessagingConfiguration.

        Args:
            service_sid (str): (Required) The SID of the
                [Service](https://www.twilio.com/docs/verify/api/service) that
                the resource is associated with.
            country (str): (Required) The
                [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                country code of the country this configuration will be applied
                to. If this is a global configuration, Country will take the
                value `all`.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/Services/{ServiceSid}/MessagingConfigurations/{Country}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('ServiceSid')
                            .value(service_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Country')
                            .value(country)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()
