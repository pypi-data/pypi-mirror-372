# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.ok_62 import OK62


class LookupsController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(LookupsController, self).__init__(config)

    def fetch_phone_number(self,
                           fields,
                           country_code,
                           first_name,
                           last_name,
                           address_line_1,
                           address_line_2,
                           city,
                           state,
                           postal_code,
                           address_country_code,
                           national_id,
                           date_of_birth,
                           phone_number,
                           accept):
        """Does a GET request to /v2/PhoneNumbers/{PhoneNumber}.

        Args:
            fields (str): A comma-separated list of fields to return. Possible
                values are caller_name, sim_swap, call_forwarding,
                live_activity, line_type_intelligence, identity_match.
            country_code (str): The [country
                code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) used
                if the phone number provided is in national format.
            first_name (str): User’s first name. This query parameter is only
                used (optionally) for identity_match package requests.
            last_name (str): User’s last name. This query parameter is only
                used (optionally) for identity_match package requests.
            address_line_1 (str): User’s first address line. This query
                parameter is only used (optionally) for identity_match package
                requests.
            address_line_2 (str): User’s second address line. This query
                parameter is only used (optionally) for identity_match package
                requests.
            city (str): User’s city. This query parameter is only used
                (optionally) for identity_match package requests.
            state (str): User’s country subdivision, such as state, province,
                or locality. This query parameter is only used (optionally)
                for identity_match package requests.
            postal_code (str): User’s postal zip code. This query parameter is
                only used (optionally) for identity_match package requests.
            address_country_code (str): User’s country, up to two characters.
                This query parameter is only used (optionally) for
                identity_match package requests.
            national_id (str): User’s national ID, such as SSN or Passport ID.
                This query parameter is only used (optionally) for
                identity_match package requests.
            date_of_birth (str): User’s date of birth, in YYYYMMDD format.
                This query parameter is only used (optionally) for
                identity_match package requests.
            phone_number (str): (Required) The phone number to lookup in E.164
                or national format. Default country code is +1 (North America).
            accept (str): The request header parameter.

        Returns:
            OK62: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v2/PhoneNumbers/{PhoneNumber}')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('Fields')
                         .value(fields))
            .query_param(Parameter()
                         .key('CountryCode')
                         .value(country_code))
            .query_param(Parameter()
                         .key('FirstName')
                         .value(first_name))
            .query_param(Parameter()
                         .key('LastName')
                         .value(last_name))
            .query_param(Parameter()
                         .key('AddressLine1')
                         .value(address_line_1))
            .query_param(Parameter()
                         .key('AddressLine2')
                         .value(address_line_2))
            .query_param(Parameter()
                         .key('City')
                         .value(city))
            .query_param(Parameter()
                         .key('State')
                         .value(state))
            .query_param(Parameter()
                         .key('PostalCode')
                         .value(postal_code))
            .query_param(Parameter()
                         .key('AddressCountryCode')
                         .value(address_country_code))
            .query_param(Parameter()
                         .key('NationalId')
                         .value(national_id))
            .query_param(Parameter()
                         .key('DateOfBirth')
                         .value(date_of_birth))
            .template_param(Parameter()
                            .key('PhoneNumber')
                            .value(phone_number)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK62.from_dictionary)
        ).execute()
