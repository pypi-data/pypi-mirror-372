# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.created_6 import Created6
from twilioapiexplorer.models.ok_13 import OK13
from twilioapiexplorer.models.ok_14 import OK14


class CallsController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(CallsController, self).__init__(config)

    def create_call(self,
                    account_sid,
                    accept,
                    to,
                    mfrom,
                    method,
                    fallback_url,
                    fallback_method,
                    status_callback,
                    status_callback_event,
                    status_callback_method,
                    send_digits,
                    timeout,
                    record,
                    recording_channels,
                    recording_status_callback,
                    recording_status_callback_method,
                    sip_auth_username,
                    sip_auth_password,
                    machine_detection,
                    machine_detection_timeout,
                    recording_status_callback_event,
                    trim,
                    caller_id,
                    machine_detection_speech_threshold,
                    machine_detection_speech_end_threshold,
                    machine_detection_silence_timeout,
                    async_amd,
                    async_amd_status_callback,
                    async_amd_status_callback_method,
                    byoc,
                    call_reason,
                    call_token,
                    recording_track,
                    time_limit,
                    url,
                    twiml,
                    application_sid):
        """Does a POST request to /{AccountSid}/Calls.json.

        Args:
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                will create the resource.
            accept (str): The request header parameter.
            to (str): (Required) The phone number, SIP address, or client
                identifier to call.
            mfrom (str): (Required) The phone number or client identifier to
                use as the caller id. If using a phone number, it must be a
                Twilio number or a Verified [outgoing caller
                id](https://www.twilio.com/docs/voice/api/outgoing-caller-ids)
                for your account. If the `to` parameter is a phone number,
                `From` must also be a phone number.
            method (str): The HTTP method we should use when calling the `url`
                parameter's value. Can be: `GET` or `POST` and the default is
                `POST`. If an `application_sid` parameter is present, this
                parameter is ignored.
            fallback_url (str): The URL that we call using the
                `fallback_method` if an error occurs when requesting or
                executing the TwiML at `url`. If an `application_sid`
                parameter is present, this parameter is ignored.
            fallback_method (str): The HTTP method that we should use to
                request the `fallback_url`. Can be: `GET` or `POST` and the
                default is `POST`. If an `application_sid` parameter is
                present, this parameter is ignored.
            status_callback (str): The URL we should call using the
                `status_callback_method` to send status information to your
                application. If no `status_callback_event` is specified, we
                will send the `completed` status. If an `application_sid`
                parameter is present, this parameter is ignored. URLs must
                contain a valid hostname (underscores are not permitted).
            status_callback_event (str): The call progress events that we will
                send to the `status_callback` URL. Can be: `initiated`,
                `ringing`, `answered`, and `completed`. If no event is
                specified, we send the `completed` status. If you want to
                receive multiple events, specify each one in a separate
                `status_callback_event` parameter. See the code sample for
                [monitoring call
                progress](https://www.twilio.com/docs/voice/api/call-resource?c
                ode-sample=code-create-a-call-resource-and-specify-a-statuscall
                backevent&code-sdk-version=json). If an `application_sid` is
                present, this parameter is ignored.
            status_callback_method (str): The HTTP method we should use when
                calling the `status_callback` URL. Can be: `GET` or `POST` and
                the default is `POST`. If an `application_sid` parameter is
                present, this parameter is ignored.
            send_digits (str): A string of keys to dial after connecting to
                the number, maximum of 32 digits. Valid digits in the string
                include: any digit (`0`-`9`), '`#`', '`*`' and '`w`', to
                insert a half second pause. For example, if you connected to a
                company phone number and wanted to pause for one second, and
                then dial extension 1234 followed by the pound key, the value
                of this parameter would be `ww1234#`. Remember to URL-encode
                this string, since the '`#`' character has special meaning in
                a URL. If both `SendDigits` and `MachineDetection` parameters
                are provided, then `MachineDetection` will be ignored.
            timeout (int): The integer number of seconds that we should allow
                the phone to ring before assuming there is no answer. The
                default is `60` seconds and the maximum is `600` seconds. For
                some call flows, we will add a 5-second buffer to the timeout
                value you provide. For this reason, a timeout value of 10
                seconds could result in an actual timeout closer to 15
                seconds. You can set this to a short time, such as `15`
                seconds, to hang up before reaching an answering machine or
                voicemail.
            record (bool): Whether to record the call. Can be `true` to record
                the phone call, or `false` to not. The default is `false`. The
                `recording_url` is sent to the `status_callback` URL.
            recording_channels (str): The number of channels in the final
                recording. Can be: `mono` or `dual`. The default is `mono`.
                `mono` records both legs of the call in a single channel of
                the recording file. `dual` records each leg to a separate
                channel of the recording file. The first channel of a
                dual-channel recording contains the parent call and the second
                channel contains the child call.
            recording_status_callback (str): The URL that we call when the
                recording is available to be accessed.
            recording_status_callback_method (str): The HTTP method we should
                use when calling the `recording_status_callback` URL. Can be:
                `GET` or `POST` and the default is `POST`.
            sip_auth_username (str): The username used to authenticate the
                caller making a SIP call.
            sip_auth_password (str): The password required to authenticate the
                user account specified in `sip_auth_username`.
            machine_detection (str): Whether to detect if a human, answering
                machine, or fax has picked up the call. Can be: `Enable` or
                `DetectMessageEnd`. Use `Enable` if you would like us to
                return `AnsweredBy` as soon as the called party is identified.
                Use `DetectMessageEnd`, if you would like to leave a message
                on an answering machine. If `send_digits` is provided, this
                parameter is ignored. For more information, see [Answering
                Machine
                Detection](https://www.twilio.com/docs/voice/answering-machine-
                detection).
            machine_detection_timeout (int): The number of seconds that we
                should attempt to detect an answering machine before timing
                out and sending a voice request with `AnsweredBy` of
                `unknown`. The default timeout is 30 seconds.
            recording_status_callback_event (str): The recording status events
                that will trigger calls to the URL specified in
                `recording_status_callback`. Can be: `in-progress`,
                `completed` and `absent`. Defaults to `completed`. Separate 
                multiple values with a space.
            trim (str): Whether to trim any leading and trailing silence from
                the recording. Can be: `trim-silence` or `do-not-trim` and the
                default is `trim-silence`.
            caller_id (str): The phone number, SIP address, or Client
                identifier that made this call. Phone numbers are in [E.164
                format](https://wwnw.twilio.com/docs/glossary/what-e164)
                (e.g., +16175551212). SIP addresses are formatted as
                `name@company.com`.
            machine_detection_speech_threshold (int): The number of
                milliseconds that is used as the measuring stick for the
                length of the speech activity, where durations lower than this
                value will be interpreted as a human and longer than this
                value as a machine. Possible Values: 1000-6000. Default: 2400.
            machine_detection_speech_end_threshold (int): The number of
                milliseconds of silence after speech activity at which point
                the speech activity is considered complete. Possible Values:
                500-5000. Default: 1200.
            machine_detection_silence_timeout (int): The number of
                milliseconds of initial silence after which an `unknown`
                AnsweredBy result will be returned. Possible Values:
                2000-10000. Default: 5000.
            async_amd (str): Select whether to perform answering machine
                detection in the background. Default, blocks the execution of
                the call until Answering Machine Detection is completed. Can
                be: `true` or `false`.
            async_amd_status_callback (str): The URL that we should call using
                the `async_amd_status_callback_method` to notify customer
                application whether the call was answered by human, machine or
                fax.
            async_amd_status_callback_method (str): The HTTP method we should
                use when calling the `async_amd_status_callback` URL. Can be:
                `GET` or `POST` and the default is `POST`.
            byoc (str): The SID of a BYOC (Bring Your Own Carrier) trunk to
                route this call with. Note that `byoc` is only meaningful when
                `to` is a phone number; it will otherwise be ignored. (Beta)
            call_reason (str): The Reason for the outgoing call. Use it to
                specify the purpose of the call that is presented on the
                called party's phone. (Branded Calls Beta)
            call_token (str): A token string needed to invoke a forwarded
                call. A call_token is generated when an incoming call is
                received on a Twilio number. Pass an incoming call's
                call_token value to a forwarded call via the call_token
                parameter when creating a new call. A forwarded call should
                bear the same CallerID of the original incoming call.
            recording_track (str): The audio track to record for the call. Can
                be: `inbound`, `outbound` or `both`. The default is `both`.
                `inbound` records the audio that is received by Twilio.
                `outbound` records the audio that is generated from Twilio.
                `both` records the audio that is received and generated by
                Twilio.
            time_limit (int): The maximum duration of the call in seconds.
                Constraints depend on account and configuration.
            url (str): The absolute URL that returns the TwiML instructions
                for the call. We will call this URL using the `method` when
                the call connects. For more information, see the [Url
                Parameter](https://www.twilio.com/docs/voice/make-calls#specify
                -a-url-parameter) section in [Making
                Calls](https://www.twilio.com/docs/voice/make-calls).
            twiml (str): TwiML instructions for the call Twilio will use
                without fetching Twiml from url parameter. If both `twiml` and
                `url` are provided then `twiml` parameter will be ignored. Max
                4000 characters.
            application_sid (str): The SID of the Application resource that
                will handle the call, if the call will be handled by an
                application.

        Returns:
            Created6: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_5)
            .path('/{AccountSid}/Calls.json')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('To')
                        .value(to))
            .form_param(Parameter()
                        .key('From')
                        .value(mfrom))
            .form_param(Parameter()
                        .key('Method')
                        .value(method))
            .form_param(Parameter()
                        .key('FallbackUrl')
                        .value(fallback_url))
            .form_param(Parameter()
                        .key('FallbackMethod')
                        .value(fallback_method))
            .form_param(Parameter()
                        .key('StatusCallback')
                        .value(status_callback))
            .form_param(Parameter()
                        .key('StatusCallbackEvent')
                        .value(status_callback_event))
            .form_param(Parameter()
                        .key('StatusCallbackMethod')
                        .value(status_callback_method))
            .form_param(Parameter()
                        .key('SendDigits')
                        .value(send_digits))
            .form_param(Parameter()
                        .key('Timeout')
                        .value(timeout))
            .form_param(Parameter()
                        .key('Record')
                        .value(record))
            .form_param(Parameter()
                        .key('RecordingChannels')
                        .value(recording_channels))
            .form_param(Parameter()
                        .key('RecordingStatusCallback')
                        .value(recording_status_callback))
            .form_param(Parameter()
                        .key('RecordingStatusCallbackMethod')
                        .value(recording_status_callback_method))
            .form_param(Parameter()
                        .key('SipAuthUsername')
                        .value(sip_auth_username))
            .form_param(Parameter()
                        .key('SipAuthPassword')
                        .value(sip_auth_password))
            .form_param(Parameter()
                        .key('MachineDetection')
                        .value(machine_detection))
            .form_param(Parameter()
                        .key('MachineDetectionTimeout')
                        .value(machine_detection_timeout))
            .form_param(Parameter()
                        .key('RecordingStatusCallbackEvent')
                        .value(recording_status_callback_event))
            .form_param(Parameter()
                        .key('Trim')
                        .value(trim))
            .form_param(Parameter()
                        .key('CallerId')
                        .value(caller_id))
            .form_param(Parameter()
                        .key('MachineDetectionSpeechThreshold')
                        .value(machine_detection_speech_threshold))
            .form_param(Parameter()
                        .key('MachineDetectionSpeechEndThreshold')
                        .value(machine_detection_speech_end_threshold))
            .form_param(Parameter()
                        .key('MachineDetectionSilenceTimeout')
                        .value(machine_detection_silence_timeout))
            .form_param(Parameter()
                        .key('AsyncAmd')
                        .value(async_amd))
            .form_param(Parameter()
                        .key('AsyncAmdStatusCallback')
                        .value(async_amd_status_callback))
            .form_param(Parameter()
                        .key('AsyncAmdStatusCallbackMethod')
                        .value(async_amd_status_callback_method))
            .form_param(Parameter()
                        .key('Byoc')
                        .value(byoc))
            .form_param(Parameter()
                        .key('CallReason')
                        .value(call_reason))
            .form_param(Parameter()
                        .key('CallToken')
                        .value(call_token))
            .form_param(Parameter()
                        .key('RecordingTrack')
                        .value(recording_track))
            .form_param(Parameter()
                        .key('TimeLimit')
                        .value(time_limit))
            .form_param(Parameter()
                        .key('Url')
                        .value(url))
            .form_param(Parameter()
                        .key('Twiml')
                        .value(twiml))
            .form_param(Parameter()
                        .key('ApplicationSid')
                        .value(application_sid))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created6.from_dictionary)
        ).execute()

    def list_call(self,
                  to,
                  mfrom,
                  parent_call_sid,
                  status,
                  start_time,
                  start_time_query,
                  start_time_query_query,
                  end_time,
                  end_time_query,
                  end_time_query_query,
                  page_size,
                  account_sid,
                  accept):
        """Does a GET request to /{AccountSid}/Calls.json.

        Args:
            to (str): Only show calls made to this phone number, SIP address,
                Client identifier or SIM SID.
            mfrom (str): Only include calls from this phone number, SIP
                address, Client identifier or SIM SID.
            parent_call_sid (str): Only include calls spawned by calls with
                this SID.
            status (str): The status of the calls to include. Can be:
                `queued`, `ringing`, `in-progress`, `canceled`, `completed`,
                `failed`, `busy`, or `no-answer`.
            start_time (str): Only include calls that started on this date.
                Specify a date as `YYYY-MM-DD` in GMT, for example:
                `2009-07-06`, to read only calls that started on this date.
                You can also specify an inequality, such as
                `StartTime<=YYYY-MM-DD`, to read calls that started on or
                before midnight of this date, and `StartTime>=YYYY-MM-DD` to
                read calls that started on or after midnight of this date.
            start_time_query (str): Only include calls that started on this
                date. Specify a date as `YYYY-MM-DD` in GMT, for example:
                `2009-07-06`, to read only calls that started on this date.
                You can also specify an inequality, such as
                `StartTime<=YYYY-MM-DD`, to read calls that started on or
                before midnight of this date, and `StartTime>=YYYY-MM-DD` to
                read calls that started on or after midnight of this date.
            start_time_query_query (str): Only include calls that started on
                this date. Specify a date as `YYYY-MM-DD` in GMT, for example:
                `2009-07-06`, to read only calls that started on this date.
                You can also specify an inequality, such as
                `StartTime<=YYYY-MM-DD`, to read calls that started on or
                before midnight of this date, and `StartTime>=YYYY-MM-DD` to
                read calls that started on or after midnight of this date.
            end_time (str): Only include calls that ended on this date.
                Specify a date as `YYYY-MM-DD` in GMT, for example:
                `2009-07-06`, to read only calls that ended on this date. You
                can also specify an inequality, such as `EndTime<=YYYY-MM-DD`,
                to read calls that ended on or before midnight of this date,
                and `EndTime>=YYYY-MM-DD` to read calls that ended on or after
                midnight of this date.
            end_time_query (str): Only include calls that ended on this date.
                Specify a date as `YYYY-MM-DD` in GMT, for example:
                `2009-07-06`, to read only calls that ended on this date. You
                can also specify an inequality, such as `EndTime<=YYYY-MM-DD`,
                to read calls that ended on or before midnight of this date,
                and `EndTime>=YYYY-MM-DD` to read calls that ended on or after
                midnight of this date.
            end_time_query_query (str): Only include calls that ended on this
                date. Specify a date as `YYYY-MM-DD` in GMT, for example:
                `2009-07-06`, to read only calls that ended on this date. You
                can also specify an inequality, such as `EndTime<=YYYY-MM-DD`,
                to read calls that ended on or before midnight of this date,
                and `EndTime>=YYYY-MM-DD` to read calls that ended on or after
                midnight of this date.
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                created the Call resource(s) to read.
            accept (str): The request header parameter.

        Returns:
            OK13: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_5)
            .path('/{AccountSid}/Calls.json')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('To')
                         .value(to))
            .query_param(Parameter()
                         .key('From')
                         .value(mfrom))
            .query_param(Parameter()
                         .key('ParentCallSid')
                         .value(parent_call_sid))
            .query_param(Parameter()
                         .key('Status')
                         .value(status))
            .query_param(Parameter()
                         .key('StartTime')
                         .value(start_time))
            .query_param(Parameter()
                         .key('StartTime<')
                         .value(start_time_query))
            .query_param(Parameter()
                         .key('StartTime>')
                         .value(start_time_query_query))
            .query_param(Parameter()
                         .key('EndTime')
                         .value(end_time))
            .query_param(Parameter()
                         .key('EndTime<')
                         .value(end_time_query))
            .query_param(Parameter()
                         .key('EndTime>')
                         .value(end_time_query_query))
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK13.from_dictionary)
        ).execute()

    def delete_call(self,
                    account_sid,
                    sid):
        """Does a DELETE request to /{AccountSid}/Calls/{Sid}.json.

        Args:
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                created the Call resource(s) to delete.
            sid (str): The request template parameter.

        Returns:
            Any: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_5)
            .path('/{AccountSid}/Calls/{Sid}.json')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.dynamic_deserialize)
        ).execute()

    def fetch_call(self,
                   account_sid,
                   accept,
                   sid):
        """Does a GET request to /{AccountSid}/Calls/{Sid}.json.

        Args:
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                created the Call resource(s) to fetch.
            accept (str): The request header parameter.
            sid (str): The request template parameter.

        Returns:
            OK14: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_5)
            .path('/{AccountSid}/Calls/{Sid}.json')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK14.from_dictionary)
        ).execute()

    def update_call(self,
                    account_sid,
                    accept,
                    url,
                    method,
                    status,
                    fallback_url,
                    fallback_method,
                    status_callback,
                    status_callback_method,
                    twiml,
                    time_limit,
                    sid):
        """Does a POST request to /{AccountSid}/Calls/{Sid}.json.

        Args:
            account_sid (str): (Required) The SID of the
                [Account](https://www.twilio.com/docs/iam/api/account) that
                created the Call resource(s) to update.
            accept (str): The request header parameter.
            url (str): The absolute URL that returns the TwiML instructions
                for the call. We will call this URL using the `method` when
                the call connects. For more information, see the [Url
                Parameter](https://www.twilio.com/docs/voice/make-calls#specify
                -a-url-parameter) section in [Making
                Calls](https://www.twilio.com/docs/voice/make-calls).
            method (str): The HTTP method we should use when calling the
                `url`. Can be: `GET` or `POST` and the default is `POST`. If
                an `application_sid` parameter is present, this parameter is
                ignored.
            status (str): The new status of the resource. Can be: `canceled`
                or `completed`. Specifying `canceled` will attempt to hang up
                calls that are queued or ringing; however, it will not affect
                calls already in progress. Specifying `completed` will attempt
                to hang up a call even if it's already in progress.
            fallback_url (str): The URL that we call using the
                `fallback_method` if an error occurs when requesting or
                executing the TwiML at `url`. If an `application_sid`
                parameter is present, this parameter is ignored.
            fallback_method (str): The HTTP method that we should use to
                request the `fallback_url`. Can be: `GET` or `POST` and the
                default is `POST`. If an `application_sid` parameter is
                present, this parameter is ignored.
            status_callback (str): The URL we should call using the
                `status_callback_method` to send status information to your
                application. If no `status_callback_event` is specified, we
                will send the `completed` status. If an `application_sid`
                parameter is present, this parameter is ignored. URLs must
                contain a valid hostname (underscores are not permitted).
            status_callback_method (str): The HTTP method we should use when
                requesting the `status_callback` URL. Can be: `GET` or `POST`
                and the default is `POST`. If an `application_sid` parameter
                is present, this parameter is ignored.
            twiml (str): TwiML instructions for the call Twilio will use
                without fetching Twiml from url. Twiml and url parameters are
                mutually exclusive
            time_limit (int): The maximum duration of the call in seconds.
                Constraints depend on account and configuration.
            sid (str): The request template parameter.

        Returns:
            OK14: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_5)
            .path('/{AccountSid}/Calls/{Sid}.json')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AccountSid')
                            .value(account_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('Url')
                        .value(url))
            .form_param(Parameter()
                        .key('Method')
                        .value(method))
            .form_param(Parameter()
                        .key('Status')
                        .value(status))
            .form_param(Parameter()
                        .key('FallbackUrl')
                        .value(fallback_url))
            .form_param(Parameter()
                        .key('FallbackMethod')
                        .value(fallback_method))
            .form_param(Parameter()
                        .key('StatusCallback')
                        .value(status_callback))
            .form_param(Parameter()
                        .key('StatusCallbackMethod')
                        .value(status_callback_method))
            .form_param(Parameter()
                        .key('Twiml')
                        .value(twiml))
            .form_param(Parameter()
                        .key('TimeLimit')
                        .value(time_limit))
            .template_param(Parameter()
                            .key('Sid')
                            .value(sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK14.from_dictionary)
        ).execute()
