# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from twilioapiexplorer.api_helper import APIHelper
from twilioapiexplorer.configuration import Server
from twilioapiexplorer.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from twilioapiexplorer.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from twilioapiexplorer.models.ok_258 import OK258
from twilioapiexplorer.models.created_68 import Created68


class FieldsController(BaseController):

    """A Controller to access Endpoints in the twilioapiexplorer API."""
    def __init__(self, config):
        super(FieldsController, self).__init__(config)

    def list_field(self,
                   page_size,
                   assistant_sid,
                   task_sid,
                   accept):
        """Does a GET request to /v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields.

        Args:
            page_size (int): How many resources to return in each list page.
                The default is 50, and the maximum is 1000.
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the Task associated with the resources
                to read.
            task_sid (str): (Required) The SID of the
                [Task](https://www.twilio.com/docs/autopilot/api/task)
                resource associated with the Field resources to read.
            accept (str): The request header parameter.

        Returns:
            OK258: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields')
            .http_method(HttpMethodEnum.GET)
            .query_param(Parameter()
                         .key('PageSize')
                         .value(page_size))
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('TaskSid')
                            .value(task_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(OK258.from_dictionary)
        ).execute()

    def create_field(self,
                     assistant_sid,
                     task_sid,
                     accept,
                     field_type,
                     unique_name):
        """Does a POST request to /v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields.

        Args:
            assistant_sid (str): (Required) The SID of the
                [Assistant](https://www.twilio.com/docs/autopilot/api/assistant
                ) that is the parent of the Task associated with the new
                resource.
            task_sid (str): (Required) The SID of the
                [Task](https://www.twilio.com/docs/autopilot/api/task)
                resource associated with the new Field resource.
            accept (str): The request header parameter.
            field_type (str): (Required) The Field Type of the new field. Can
                be: a [Built-in Field
                Type](https://www.twilio.com/docs/autopilot/built-in-field-type
                s), the `unique_name`, or the `sid` of a custom Field Type.
            unique_name (str): (Required) An application-defined string that
                uniquely identifies the new resource. This value must be a
                unique string of no more than 64 characters. It can be used as
                an alternative to the `sid` in the URL path to address the
                resource.

        Returns:
            Created68: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_9)
            .path('/v1/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('AssistantSid')
                            .value(assistant_sid)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('TaskSid')
                            .value(task_sid)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Accept')
                          .value(accept))
            .form_param(Parameter()
                        .key('FieldType')
                        .value(field_type))
            .form_param(Parameter()
                        .key('UniqueName')
                        .value(unique_name))
            .header_param(Parameter()
                          .key('content-type')
                          .value('application/x-www-form-urlencoded'))
            .auth(Single('basic'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(Created68.from_dictionary)
        ).execute()
