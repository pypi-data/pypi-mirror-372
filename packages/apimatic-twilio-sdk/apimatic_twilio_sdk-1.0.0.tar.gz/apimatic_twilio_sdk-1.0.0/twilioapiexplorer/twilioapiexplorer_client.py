# -*- coding: utf-8 -*-

"""
twilioapiexplorer

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from apimatic_core.configurations.global_configuration import GlobalConfiguration
from apimatic_core.decorators.lazy_property import LazyProperty
from twilioapiexplorer.configuration import Configuration
from twilioapiexplorer.controllers.base_controller import BaseController
from twilioapiexplorer.configuration import Environment
from twilioapiexplorer.http.auth.basic_auth import BasicAuth
from twilioapiexplorer.controllers.programmable_sms_controller\
    import ProgrammableSMSController
from twilioapiexplorer.controllers.shortcodes_controller\
    import ShortcodesController
from twilioapiexplorer.controllers.alphasenders_controller\
    import AlphasendersController
from twilioapiexplorer.controllers.phone_numbers_controller\
    import PhoneNumbersController
from twilioapiexplorer.controllers.messaging_services_controller\
    import MessagingServicesController
from twilioapiexplorer.controllers.conversations_controller\
    import ConversationsController
from twilioapiexplorer.controllers.calls_controller import CallsController
from twilioapiexplorer.controllers.recordings_controller\
    import RecordingsController
from twilioapiexplorer.controllers.transcriptions_controller\
    import TranscriptionsController
from twilioapiexplorer.controllers.conferences_controller\
    import ConferencesController
from twilioapiexplorer.controllers.caller_ids_controller\
    import CallerIdsController
from twilioapiexplorer.controllers.queues_controller import QueuesController
from twilioapiexplorer.controllers.addresses_controller\
    import AddressesController
from twilioapiexplorer.controllers.available_phone_number_countries_controller\
    import AvailablePhoneNumberCountriesController
from twilioapiexplorer.controllers.incoming_phone_numbers_controller\
    import IncomingPhoneNumbersController
from twilioapiexplorer.controllers.sip_domains_controller\
    import SIPDomainsController
from twilioapiexplorer.controllers.ip_access_control_list_controller\
    import IPAccessControlListController
from twilioapiexplorer.controllers.sip_credentials_list_controller\
    import SIPCredentialsListController
from twilioapiexplorer.controllers.sip_controller import SIPController
from twilioapiexplorer.controllers.lookups_controller import LookupsController
from twilioapiexplorer.controllers.workspaces_controller\
    import WorkspacesController
from twilioapiexplorer.controllers.activities_controller\
    import ActivitiesController
from twilioapiexplorer.controllers.events_controller import EventsController
from twilioapiexplorer.controllers.tasks_controller import TasksController
from twilioapiexplorer.controllers.task_channels_controller\
    import TaskChannelsController
from twilioapiexplorer.controllers.task_queues_controller\
    import TaskQueuesController
from twilioapiexplorer.controllers.workers_controller import WorkersController
from twilioapiexplorer.controllers.workflows_controller\
    import WorkflowsController
from twilioapiexplorer.controllers.trunks_controller import TrunksController
from twilioapiexplorer.controllers.credential_lists_controller\
    import CredentialListsController
from twilioapiexplorer.controllers.ip_access_control_lists_controller\
    import IPAccessControlListsController
from twilioapiexplorer.controllers.origination_urls_controller\
    import OriginationUrlsController
from twilioapiexplorer.controllers.recording_controller\
    import RecordingController
from twilioapiexplorer.controllers.chat_services_controller\
    import ChatServicesController
from twilioapiexplorer.controllers.chat_channels_controller\
    import ChatChannelsController
from twilioapiexplorer.controllers.chat_credentials_controller\
    import ChatCredentialsController
from twilioapiexplorer.controllers.chat_bindings_controller\
    import ChatBindingsController
from twilioapiexplorer.controllers.chat_members_controller\
    import ChatMembersController
from twilioapiexplorer.controllers.chat_channel_webhook_controller\
    import ChatChannelWebhookController
from twilioapiexplorer.controllers.chat_invites_controller\
    import ChatInvitesController
from twilioapiexplorer.controllers.chat_messages_controller\
    import ChatMessagesController
from twilioapiexplorer.controllers.chat_roles_controller\
    import ChatRolesController
from twilioapiexplorer.controllers.chat_users_controller\
    import ChatUsersController
from twilioapiexplorer.controllers.chat_user_channels_controller\
    import ChatUserChannelsController
from twilioapiexplorer.controllers.notify_controller import NotifyController
from twilioapiexplorer.controllers.bindings_controller\
    import BindingsController
from twilioapiexplorer.controllers.credentials_controller\
    import CredentialsController
from twilioapiexplorer.controllers.services_controller\
    import ServicesController
from twilioapiexplorer.controllers.sync_documents_controller\
    import SyncDocumentsController
from twilioapiexplorer.controllers.sync_document_permissions_controller\
    import SyncDocumentPermissionsController
from twilioapiexplorer.controllers.sync_services_controller\
    import SyncServicesController
from twilioapiexplorer.controllers.sync_stream_message_controller\
    import SyncStreamMessageController
from twilioapiexplorer.controllers.sync_lists_controller\
    import SyncListsController
from twilioapiexplorer.controllers.sync_maps_controller\
    import SyncMapsController
from twilioapiexplorer.controllers.sync_streams_controller\
    import SyncStreamsController
from twilioapiexplorer.controllers.wireless_usage_controller\
    import WirelessUsageController
from twilioapiexplorer.controllers.commands_controller\
    import CommandsController
from twilioapiexplorer.controllers.rate_plans_controller\
    import RatePlansController
from twilioapiexplorer.controllers.si_ms_controller import SIMsController
from twilioapiexplorer.controllers.compositions_controller\
    import CompositionsController
from twilioapiexplorer.controllers.composition_hooks_controller\
    import CompositionHooksController
from twilioapiexplorer.controllers.composition_settings_controller\
    import CompositionSettingsController
from twilioapiexplorer.controllers.rooms_controller import RoomsController
from twilioapiexplorer.controllers.room_participants_controller\
    import RoomParticipantsController
from twilioapiexplorer.controllers.executions_controller\
    import ExecutionsController
from twilioapiexplorer.controllers.execution_steps_controller\
    import ExecutionStepsController
from twilioapiexplorer.controllers.flows_controller import FlowsController
from twilioapiexplorer.controllers.flow_revisions_controller\
    import FlowRevisionsController
from twilioapiexplorer.controllers.test_users_controller\
    import TestUsersController
from twilioapiexplorer.controllers.interactions_controller\
    import InteractionsController
from twilioapiexplorer.controllers.message_interactions_controller\
    import MessageInteractionsController
from twilioapiexplorer.controllers.participants_controller\
    import ParticipantsController
from twilioapiexplorer.controllers.sessions_controller\
    import SessionsController
from twilioapiexplorer.controllers.short_codes_controller\
    import ShortCodesController
from twilioapiexplorer.controllers.assistants_controller\
    import AssistantsController
from twilioapiexplorer.controllers.dialogues_controller\
    import DialoguesController
from twilioapiexplorer.controllers.webhooks_controller\
    import WebhooksController
from twilioapiexplorer.controllers.defaults_controller\
    import DefaultsController
from twilioapiexplorer.controllers.sid_controller import SidController
from twilioapiexplorer.controllers.fields_controller import FieldsController
from twilioapiexplorer.controllers.samples_controller import SamplesController
from twilioapiexplorer.controllers.actions_controller import ActionsController
from twilioapiexplorer.controllers.task_sid_controller import TaskSidController
from twilioapiexplorer.controllers.field_type_sid_field_values_controller\
    import FieldTypeSidFieldValuesController
from twilioapiexplorer.controllers.field_types_controller\
    import FieldTypesController
from twilioapiexplorer.controllers.model_builds_controller\
    import ModelBuildsController
from twilioapiexplorer.controllers.style_sheet_controller\
    import StyleSheetController
from twilioapiexplorer.controllers.queries_controller import QueriesController
from twilioapiexplorer.controllers.access_tokens_controller\
    import AccessTokensController
from twilioapiexplorer.controllers.buckets_controller import BucketsController
from twilioapiexplorer.controllers.challenges_controller\
    import ChallengesController
from twilioapiexplorer.controllers.entities_controller\
    import EntitiesController
from twilioapiexplorer.controllers.factors_controller import FactorsController
from twilioapiexplorer.controllers.form_controller import FormController
from twilioapiexplorer.controllers.messaging_configurations_controller\
    import MessagingConfigurationsController
from twilioapiexplorer.controllers.notifications_controller\
    import NotificationsController
from twilioapiexplorer.controllers.rate_limits_controller\
    import RateLimitsController
from twilioapiexplorer.controllers.safelists_controller\
    import SafelistsController
from twilioapiexplorer.controllers.verifications_controller\
    import VerificationsController
from twilioapiexplorer.controllers.accounts_controller\
    import AccountsController
from twilioapiexplorer.controllers.applications_controller\
    import ApplicationsController
from twilioapiexplorer.controllers.keys_controller import KeysController
from twilioapiexplorer.controllers.usage_records_controller\
    import UsageRecordsController
from twilioapiexplorer.controllers.triggers_controller\
    import TriggersController
from twilioapiexplorer.controllers.assets_controller import AssetsController
from twilioapiexplorer.controllers.builds_controller import BuildsController
from twilioapiexplorer.controllers.deployments_controller\
    import DeploymentsController
from twilioapiexplorer.controllers.environments_controller\
    import EnvironmentsController
from twilioapiexplorer.controllers.functions_controller\
    import FunctionsController
from twilioapiexplorer.controllers.logs_controller import LogsController
from twilioapiexplorer.controllers.variables_controller\
    import VariablesController


class TwilioapiexplorerClient(object):
    @LazyProperty
    def programmable_sms(self):
        return ProgrammableSMSController(self.global_configuration)

    @LazyProperty
    def shortcodes(self):
        return ShortcodesController(self.global_configuration)

    @LazyProperty
    def alphasenders(self):
        return AlphasendersController(self.global_configuration)

    @LazyProperty
    def phone_numbers(self):
        return PhoneNumbersController(self.global_configuration)

    @LazyProperty
    def messaging_services(self):
        return MessagingServicesController(self.global_configuration)

    @LazyProperty
    def conversations(self):
        return ConversationsController(self.global_configuration)

    @LazyProperty
    def calls(self):
        return CallsController(self.global_configuration)

    @LazyProperty
    def recordings(self):
        return RecordingsController(self.global_configuration)

    @LazyProperty
    def transcriptions(self):
        return TranscriptionsController(self.global_configuration)

    @LazyProperty
    def conferences(self):
        return ConferencesController(self.global_configuration)

    @LazyProperty
    def caller_ids(self):
        return CallerIdsController(self.global_configuration)

    @LazyProperty
    def queues(self):
        return QueuesController(self.global_configuration)

    @LazyProperty
    def addresses(self):
        return AddressesController(self.global_configuration)

    @LazyProperty
    def available_phone_number_countries(self):
        return AvailablePhoneNumberCountriesController(self.global_configuration)

    @LazyProperty
    def incoming_phone_numbers(self):
        return IncomingPhoneNumbersController(self.global_configuration)

    @LazyProperty
    def sip_domains(self):
        return SIPDomainsController(self.global_configuration)

    @LazyProperty
    def ip_access_control_list(self):
        return IPAccessControlListController(self.global_configuration)

    @LazyProperty
    def sip_credentials_list(self):
        return SIPCredentialsListController(self.global_configuration)

    @LazyProperty
    def sip(self):
        return SIPController(self.global_configuration)

    @LazyProperty
    def lookups(self):
        return LookupsController(self.global_configuration)

    @LazyProperty
    def workspaces(self):
        return WorkspacesController(self.global_configuration)

    @LazyProperty
    def activities(self):
        return ActivitiesController(self.global_configuration)

    @LazyProperty
    def events(self):
        return EventsController(self.global_configuration)

    @LazyProperty
    def tasks(self):
        return TasksController(self.global_configuration)

    @LazyProperty
    def task_channels(self):
        return TaskChannelsController(self.global_configuration)

    @LazyProperty
    def task_queues(self):
        return TaskQueuesController(self.global_configuration)

    @LazyProperty
    def workers(self):
        return WorkersController(self.global_configuration)

    @LazyProperty
    def workflows(self):
        return WorkflowsController(self.global_configuration)

    @LazyProperty
    def trunks(self):
        return TrunksController(self.global_configuration)

    @LazyProperty
    def credential_lists(self):
        return CredentialListsController(self.global_configuration)

    @LazyProperty
    def ip_access_control_lists(self):
        return IPAccessControlListsController(self.global_configuration)

    @LazyProperty
    def origination_urls(self):
        return OriginationUrlsController(self.global_configuration)

    @LazyProperty
    def recording(self):
        return RecordingController(self.global_configuration)

    @LazyProperty
    def chat_services(self):
        return ChatServicesController(self.global_configuration)

    @LazyProperty
    def chat_channels(self):
        return ChatChannelsController(self.global_configuration)

    @LazyProperty
    def chat_credentials(self):
        return ChatCredentialsController(self.global_configuration)

    @LazyProperty
    def chat_bindings(self):
        return ChatBindingsController(self.global_configuration)

    @LazyProperty
    def chat_members(self):
        return ChatMembersController(self.global_configuration)

    @LazyProperty
    def chat_channel_webhook(self):
        return ChatChannelWebhookController(self.global_configuration)

    @LazyProperty
    def chat_invites(self):
        return ChatInvitesController(self.global_configuration)

    @LazyProperty
    def chat_messages(self):
        return ChatMessagesController(self.global_configuration)

    @LazyProperty
    def chat_roles(self):
        return ChatRolesController(self.global_configuration)

    @LazyProperty
    def chat_users(self):
        return ChatUsersController(self.global_configuration)

    @LazyProperty
    def chat_user_channels(self):
        return ChatUserChannelsController(self.global_configuration)

    @LazyProperty
    def notify(self):
        return NotifyController(self.global_configuration)

    @LazyProperty
    def bindings(self):
        return BindingsController(self.global_configuration)

    @LazyProperty
    def credentials(self):
        return CredentialsController(self.global_configuration)

    @LazyProperty
    def services(self):
        return ServicesController(self.global_configuration)

    @LazyProperty
    def sync_documents(self):
        return SyncDocumentsController(self.global_configuration)

    @LazyProperty
    def sync_document_permissions(self):
        return SyncDocumentPermissionsController(self.global_configuration)

    @LazyProperty
    def sync_services(self):
        return SyncServicesController(self.global_configuration)

    @LazyProperty
    def sync_stream_message(self):
        return SyncStreamMessageController(self.global_configuration)

    @LazyProperty
    def sync_lists(self):
        return SyncListsController(self.global_configuration)

    @LazyProperty
    def sync_maps(self):
        return SyncMapsController(self.global_configuration)

    @LazyProperty
    def sync_streams(self):
        return SyncStreamsController(self.global_configuration)

    @LazyProperty
    def wireless_usage(self):
        return WirelessUsageController(self.global_configuration)

    @LazyProperty
    def commands(self):
        return CommandsController(self.global_configuration)

    @LazyProperty
    def rate_plans(self):
        return RatePlansController(self.global_configuration)

    @LazyProperty
    def si_ms(self):
        return SIMsController(self.global_configuration)

    @LazyProperty
    def compositions(self):
        return CompositionsController(self.global_configuration)

    @LazyProperty
    def composition_hooks(self):
        return CompositionHooksController(self.global_configuration)

    @LazyProperty
    def composition_settings(self):
        return CompositionSettingsController(self.global_configuration)

    @LazyProperty
    def rooms(self):
        return RoomsController(self.global_configuration)

    @LazyProperty
    def room_participants(self):
        return RoomParticipantsController(self.global_configuration)

    @LazyProperty
    def executions(self):
        return ExecutionsController(self.global_configuration)

    @LazyProperty
    def execution_steps(self):
        return ExecutionStepsController(self.global_configuration)

    @LazyProperty
    def flows(self):
        return FlowsController(self.global_configuration)

    @LazyProperty
    def flow_revisions(self):
        return FlowRevisionsController(self.global_configuration)

    @LazyProperty
    def test_users(self):
        return TestUsersController(self.global_configuration)

    @LazyProperty
    def interactions(self):
        return InteractionsController(self.global_configuration)

    @LazyProperty
    def message_interactions(self):
        return MessageInteractionsController(self.global_configuration)

    @LazyProperty
    def participants(self):
        return ParticipantsController(self.global_configuration)

    @LazyProperty
    def sessions(self):
        return SessionsController(self.global_configuration)

    @LazyProperty
    def short_codes(self):
        return ShortCodesController(self.global_configuration)

    @LazyProperty
    def assistants(self):
        return AssistantsController(self.global_configuration)

    @LazyProperty
    def dialogues(self):
        return DialoguesController(self.global_configuration)

    @LazyProperty
    def webhooks(self):
        return WebhooksController(self.global_configuration)

    @LazyProperty
    def defaults(self):
        return DefaultsController(self.global_configuration)

    @LazyProperty
    def sid(self):
        return SidController(self.global_configuration)

    @LazyProperty
    def fields(self):
        return FieldsController(self.global_configuration)

    @LazyProperty
    def samples(self):
        return SamplesController(self.global_configuration)

    @LazyProperty
    def actions(self):
        return ActionsController(self.global_configuration)

    @LazyProperty
    def task_sid(self):
        return TaskSidController(self.global_configuration)

    @LazyProperty
    def field_type_sid_field_values(self):
        return FieldTypeSidFieldValuesController(self.global_configuration)

    @LazyProperty
    def field_types(self):
        return FieldTypesController(self.global_configuration)

    @LazyProperty
    def model_builds(self):
        return ModelBuildsController(self.global_configuration)

    @LazyProperty
    def style_sheet(self):
        return StyleSheetController(self.global_configuration)

    @LazyProperty
    def queries(self):
        return QueriesController(self.global_configuration)

    @LazyProperty
    def access_tokens(self):
        return AccessTokensController(self.global_configuration)

    @LazyProperty
    def buckets(self):
        return BucketsController(self.global_configuration)

    @LazyProperty
    def challenges(self):
        return ChallengesController(self.global_configuration)

    @LazyProperty
    def entities(self):
        return EntitiesController(self.global_configuration)

    @LazyProperty
    def factors(self):
        return FactorsController(self.global_configuration)

    @LazyProperty
    def form(self):
        return FormController(self.global_configuration)

    @LazyProperty
    def messaging_configurations(self):
        return MessagingConfigurationsController(self.global_configuration)

    @LazyProperty
    def notifications(self):
        return NotificationsController(self.global_configuration)

    @LazyProperty
    def rate_limits(self):
        return RateLimitsController(self.global_configuration)

    @LazyProperty
    def safelists(self):
        return SafelistsController(self.global_configuration)

    @LazyProperty
    def verifications(self):
        return VerificationsController(self.global_configuration)

    @LazyProperty
    def accounts(self):
        return AccountsController(self.global_configuration)

    @LazyProperty
    def applications(self):
        return ApplicationsController(self.global_configuration)

    @LazyProperty
    def keys(self):
        return KeysController(self.global_configuration)

    @LazyProperty
    def usage_records(self):
        return UsageRecordsController(self.global_configuration)

    @LazyProperty
    def triggers(self):
        return TriggersController(self.global_configuration)

    @LazyProperty
    def assets(self):
        return AssetsController(self.global_configuration)

    @LazyProperty
    def builds(self):
        return BuildsController(self.global_configuration)

    @LazyProperty
    def deployments(self):
        return DeploymentsController(self.global_configuration)

    @LazyProperty
    def environments(self):
        return EnvironmentsController(self.global_configuration)

    @LazyProperty
    def functions(self):
        return FunctionsController(self.global_configuration)

    @LazyProperty
    def logs(self):
        return LogsController(self.global_configuration)

    @LazyProperty
    def variables(self):
        return VariablesController(self.global_configuration)

    def __init__(self, http_client_instance=None,
                 override_http_client_configuration=False, http_call_back=None,
                 timeout=60, max_retries=0, backoff_factor=2,
                 retry_statuses=None, retry_methods=None,
                 environment=Environment.PRODUCTION,
                 account_sid='DefaultParameterValue',
                 credential_list_sid='DefaultParameterValue',
                 workspace_sid='DefaultParameterValue', service_sid='<string>',
                 flow_sid='<string>', username=None, password=None,
                 basic_auth_credentials=None, config=None):
        self.config = config or Configuration(
            http_client_instance=http_client_instance,
            override_http_client_configuration=override_http_client_configuration,
            http_call_back=http_call_back, timeout=timeout,
            max_retries=max_retries, backoff_factor=backoff_factor,
            retry_statuses=retry_statuses, retry_methods=retry_methods,
            environment=environment, account_sid=account_sid,
            credential_list_sid=credential_list_sid,
            workspace_sid=workspace_sid, service_sid=service_sid,
            flow_sid=flow_sid, username=username, password=password,
            basic_auth_credentials=basic_auth_credentials)

        self.global_configuration = GlobalConfiguration(self.config)\
            .global_errors(BaseController.global_errors())\
            .base_uri_executor(self.config.get_base_uri)\
            .user_agent(BaseController.user_agent(), BaseController.user_agent_parameters())

        self.auth_managers = {key: None for key in ['basic']}
        self.auth_managers['basic'] = BasicAuth(
            self.config.basic_auth_credentials)
        self.global_configuration = self.global_configuration.auth_managers(self.auth_managers)

