# pyproject.toml

[project]
name = "momovu"
dynamic = ["version"]
authors = [
    {name = "Jeff Moe", email = "moe@spacecruft.org"},
]
description = "Preview dustjackets, covers, and interior pages of print books before publication"
readme = "README.md"
requires-python = ">=3.9"
keywords = [
]
license = {text = "Apache 2.0"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: Arabic",
    "Natural Language :: Bengali",
    "Natural Language :: Chinese (Simplified)",
    "Natural Language :: English",
    "Natural Language :: French",
    "Natural Language :: German",
    "Natural Language :: Hindi",
    "Natural Language :: Indonesian",
    "Natural Language :: Italian",
    "Natural Language :: Japanese",
    "Natural Language :: Korean",
    "Natural Language :: Polish",
    "Natural Language :: Portuguese",
    "Natural Language :: Russian",
    "Natural Language :: Spanish",
    "Natural Language :: Turkish",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Topic :: Multimedia :: Graphics :: Viewers",
    "Topic :: Printing",
]

dependencies = [
    "PySide6>=6.2.0,<7.0.0",
]

[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm[toml]>=6.2",
    "pybind11",
]

build-backend = "setuptools.build_meta"

[project.optional-dependencies]
dev = [
    "bandit>=1.8.6",
    "black>=23.0.0",
    "build>=0.10.0",
    "dead>=2.1.0",
    "flake8>=6.0.0",
    "flake8-pyproject>=1.2.0",
    "hypothesis>=6.100.0",
    "hypothesis[pytest]>=6.100.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-qt>=4.2.0",
    "ruff>=0.1.0",
    "setuptools-scm>=7.0.0",
    "transpolibre[all]",
    "twine>=4.0.0",
    "types-setuptools",
    "vulture>=2.14",
]

test = [
    "hypothesis>=6.100.0",
    "hypothesis[pytest]>=6.100.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-qt>=4.2.0",
]

docs = [
    "polib",
    "pycountry",
    "pygments",
    "sphinx",
    "sphinx-autobuild",
    "sphinx-autodoc-typehints",
    "sphinx-intl",
    "sphinx-notfound-page",
    "sphinx-rtd-theme",
    "sphinxcontrib-markdown",
    "sphinxcontrib-video",
]

[project.urls]
Homepage = "https://momovu.org"
Documentation = "https://momovu.org"
Repository = "https://spacecruft.org/books/momovu"
Issues = "https://spacecruft.org/books/momovu/issues"
Changelog = "https://spacecruft.org/books/momovu/raw/branch/main/CHANGELOG.txt"

[tool.setuptools.packages.find]
namespaces = true
where = ["src"]

[tool.setuptools.package-data]
momovu = [
    "locale/**/*.mo",  # Compiled gettext translations for CLI
]

[tool.setuptools_scm]
write_to = "src/momovu/_version.py"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
lines_between_types = 1

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "ARG002", # unused method argument
    "SIM105", # use contextlib.suppress - we prefer explicit try/except for clarity
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["ARG", "S101"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true
# Additional strict settings
disallow_any_unimported = false  # Too strict for now, but good goal
disallow_any_expr = false  # Too strict for now
disallow_any_decorated = false  # Too strict for now
disallow_any_explicit = false  # We want to avoid Any, but not ban it entirely
warn_unreachable = true
strict_optional = true
warn_no_return = true

[[tool.mypy.overrides]]
module = [
    "PySide6.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "momovu._version",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "momovu.lib.viewer",
]
# These unreachable warnings are false positives - the code structure is correct
disable_error_code = ["unreachable"]

[[tool.mypy.overrides]]
module = [
    "tests.*",
]
# Tests use mocking and other patterns that confuse mypy
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/momovu",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
ignore = ["E203", "W503", "E501"]
per-file-ignores = [
    "__init__.py:F401",
]

[tool.vulture]
paths = ["src", "tests"]
exclude = ["build/", "dist/", ".venv/", "*.egg-info/"]
sort_by_size = true

[project.scripts]
momovu = "momovu.main:main"
