[project]
name = "access_mopper"

authors = [
    {name = "Romain Beucher", email = "romain.beucher@anu.edu.au"},
]
description = "ACCESS Model Output Post-Processor, maps raw model output to CMIP-style defined variables and produce post-processed output using CMOR3"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["ACCESS", "post-processing"]
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "numpy",
    "pandas",
    "xarray",
    "netCDF4",
    "cftime",
    "dask",
    "pyyaml",
    "tqdm",
    "requests",
    "parsl",
    "jinja2"
]
dynamic = ["version"]

[project.optional-dependencies]
# pip install access_mopper[dashboard]
dashboard = [
  "streamlit>=1.35.0"
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-subtests",
    "ruff"
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.23.0",
    "myst-parser>=2.0.0",
    "sphinx-autoapi>=3.0.0",
    "nbsphinx>=0.9.0",
    "ipython>=8.0.0",
    "pygments>=2.15.0"
]

[project.scripts]
mopper-cmorise = "access_mopper.batch_cmoriser:main"
mopper-dashboard = "access_mopper.dashboard.cmor_dashboard:main"
mopper-example-config = "access_mopper.examples.show_config:main"

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=64.0.0",
  "versioneer[toml]",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
access_mopper = ["*.yml", "mappings/*.json",
                 "vocabularies/**/*",
                 "dashboard/*.py", "examples/*.yml",
                 "templates/*.jinja2", "templates/*.yaml"
]

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/access_mopper/_version.py"
versionfile_build = "access_mopper/_version.py"
tag_prefix = "v"
parentdir_prefix = "access_mopper-"

[tool.ruff]
exclude = ["versioneer.py"]
line-length = 88  # Matches Black's default
target-version = "py311"  # Adjust to match your minimum Python version

[tool.ruff.lint]
select = ["E", "F", "W", "I"]  # E: pycodestyle, F: Pyflakes, W: warnings, I: isort
ignore = ["E203", "E501"]  # Ignore line-length issues (handled by formatter)

[tool.ruff.format]
quote-style = "double"  # Use double quotes

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_mop.py" = ["I001"]

[tool.pixi.workspace]
channels = ["conda-forge", "accessnri"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
access_mopper = { path = ".", editable = true }

[tool.pixi.feature.dev.dependencies]
notebook = ">=7.4.4,<8"
jupyterlab = ">=4.4.4,<5"
pre-commit = "*"

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = "*"
ruff = "*"
cmor = ">=3.11.0,<4"

[tool.pixi.feature.docs.dependencies]
sphinx = ">=7.0.0"
sphinx-rtd-theme = ">=1.3.0"
sphinx-autodoc-typehints = ">=1.23.0"
myst-parser = ">=2.0.0"
sphinx-autoapi = ">=3.0.0"
nbsphinx = ">=0.9.0"
pygments = ">=2.15.0"

[tool.pixi.environments]
dev = ["dev"]
default = { solve-group = "default" }
test = { features = ["test"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }  # Add this line

[tool.pixi.tasks]

[tool.pixi.dependencies]
python = ">=3.13.5,<3.14"
xarray = ">=2025.7.1,<2026"
numpy = ">=2.3.1,<3"
pandas = ">=2.3.1,<3"
cftime = ">=1.6.4,<2"

[tool.pixi.feature.dev.tasks.start]
description = "Test in Jupyterlab"
cmd = "jupyter lab"

[tool.pixi.feature.docs.tasks.docs-build]
description = "Build documentation with Sphinx"
cmd = "sphinx-build -b html docs/source docs/_build/html"

[tool.pixi.feature.docs.tasks.docs-serve]
description = "Serve documentation locally"
cmd = "python -m http.server 8000 --directory docs/_build/html"

[tool.pixi.feature.docs.tasks.docs-clean]
description = "Clean documentation build"
cmd = "rm -rf docs/_build"
