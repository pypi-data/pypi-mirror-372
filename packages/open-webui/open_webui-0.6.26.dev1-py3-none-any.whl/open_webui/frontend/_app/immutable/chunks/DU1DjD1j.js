import{e as r}from"./DTJLE-DR.js";const u=async a=>{let e=null;const n=await fetch(`${r}/auths/admin/details`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),e=t.detail,null));if(e)throw e;return n},d=async a=>{let e=null;const n=await fetch(`${r}/auths/admin/config`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),e=t.detail,null));if(e)throw e;return n},p=async(a,e)=>{let n=null;const t=await fetch(`${r}/auths/admin/config`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify(e)}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.error(o),n=o.detail,null));if(n)throw n;return t},y=async a=>{let e=null;const n=await fetch(`${r}/auths/`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},credentials:"include"}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),e=t.detail,null));if(e)throw e;return n},f=async(a,e)=>{let n=null;const t=await fetch(`${r}/auths/ldap`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({user:a,password:e})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.error(o),n=o.detail,null));if(n)throw n;return t},w=async(a="")=>{let e=null;const n=await fetch(`${r}/auths/admin/config/ldap`,{method:"GET",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),e=t.detail,null));if(e)throw e;return n},j=async(a="",e)=>{let n=null;const t=await fetch(`${r}/auths/admin/config/ldap`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({enable_ldap:e})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.error(o),n=o.detail,null));if(n)throw n;return t},g=async(a="")=>{let e=null;const n=await fetch(`${r}/auths/admin/config/ldap/server`,{method:"GET",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),e=t.detail,null));if(e)throw e;return n},T=async(a="",e)=>{let n=null;const t=await fetch(`${r}/auths/admin/config/ldap/server`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(e)}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.error(o),n=o.detail,null));if(n)throw n;return t},$=async(a,e)=>{let n=null;const t=await fetch(`${r}/auths/signin`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({email:a,password:e})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.error(o),n=o.detail,null));if(n)throw n;return t},m=async(a,e,n,t)=>{let o=null;const i=await fetch(`${r}/auths/signup`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({name:a,email:e,password:n,profile_image_url:t})}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.error(s),o=s.detail,null));if(o)throw o;return i},S=async()=>{let a=null;const e=await fetch(`${r}/auths/signout`,{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.error(n),a=n.detail,null));if(a)throw a;return sessionStorage.clear(),e},C=async(a,e,n,t,o="pending",i=null)=>{let s=null;const l=await fetch(`${r}/auths/add`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({name:e,email:n,password:t,role:o,...i&&{profile_image_url:i}})}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(console.error(c),s=c.detail,null));if(s)throw s;return l},O=async(a,e)=>{let n=null;const t=await fetch(`${r}/auths/update/profile`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({...e})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.error(o),n=o.detail,null));if(n)throw n;return t},k=async(a,e,n)=>{let t=null;const o=await fetch(`${r}/auths/update/password`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({password:e,new_password:n})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(console.error(i),t=i.detail,null));if(t)throw t;return o},B=async a=>{let e=null;const n=await fetch(`${r}/auths/api_key`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),e=t.detail,null));if(e)throw e;return n.api_key},P=async a=>{let e=null;const n=await fetch(`${r}/auths/api_key`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),e=t.detail,null));if(e)throw e;return n.api_key};export{m as a,S as b,C as c,d,g as e,w as f,y as g,p as h,j as i,T as j,k,f as l,P as m,O as n,B as o,u as p,$ as u};
//# sourceMappingURL=DU1DjD1j.js.map
