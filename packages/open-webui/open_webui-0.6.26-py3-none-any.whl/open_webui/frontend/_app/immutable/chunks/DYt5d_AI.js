import{e as s}from"./9KaKOOpG.js";import{g as u}from"./DYRA2TyL.js";const w=async(e,r,a)=>{let n=null;const t=await fetch(`${s}/chats/new`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${e}`},body:JSON.stringify({chat:r,folder_id:a??null})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(n=o,console.error(o),null));if(n)throw n;return t},y=async(e,r,a,n,t,o=null,c=null)=>{let i=null;const l=await fetch(`${s}/chats/import`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${e}`},body:JSON.stringify({chat:r,meta:a??{},pinned:n,folder_id:t,created_at:o??null,updated_at:c??null})}).then(async h=>{if(!h.ok)throw await h.json();return h.json()}).catch(h=>(i=h,console.error(h),null));if(i)throw i;return l},j=async(e="",r=null)=>{let a=null;const n=new URLSearchParams;r!==null&&n.append("page",`${r}`);const t=await fetch(`${s}/chats/?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(a=o,console.error(o),null));if(a)throw a;return t.map(o=>({...o,time_range:u(o.updated_at)}))},f=async(e="",r,a=1,n)=>{let t=null;const o=new URLSearchParams;o.append("page",`${a}`),n&&Object.entries(n).forEach(([i,l])=>{l!=null&&o.append(i,l.toString())});const c=await fetch(`${s}/chats/list/user/${r}?${o.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).then(i=>i).catch(i=>(t=i,console.error(i),null));if(t)throw t;return c.map(i=>({...i,time_range:u(i.updated_at)}))},$=async(e="",r=1,a)=>{let n=null;const t=new URLSearchParams;t.append("page",`${r}`),a&&Object.entries(a).forEach(([c,i])=>{i!=null&&t.append(c,i.toString())});const o=await fetch(`${s}/chats/archived?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).then(c=>c).catch(c=>(n=c,console.error(c),null));if(n)throw n;return o.map(c=>({...c,time_range:u(c.updated_at)}))},T=async e=>{let r=null;const a=await fetch(`${s}/chats/all`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n,console.error(n),null));if(r)throw r;return a},m=async(e,r,a=1)=>{let n=null;const t=new URLSearchParams;t.append("text",r),t.append("page",`${a}`);const o=await fetch(`${s}/chats/search?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).then(c=>c).catch(c=>(n=c,console.error(c),null));if(n)throw n;return o.map(c=>({...c,time_range:u(c.updated_at)}))},C=async(e,r)=>{let a=null;const n=await fetch(`${s}/chats/folder/${r}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},B=async e=>{let r=null;const a=await fetch(`${s}/chats/all/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n,console.error(n),null));if(r)throw r;return a},g=async e=>{let r=null;const a=await fetch(`${s}/chats/all/db`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n,console.error(n),null));if(r)throw r;return a},A=async e=>{let r=null;const a=await fetch(`${s}/chats/all/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n,console.error(n),null));if(r)throw r;return a},S=async(e="")=>{let r=null;const a=await fetch(`${s}/chats/pinned`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n,console.error(n),null));if(r)throw r;return a.map(n=>({...n,time_range:u(n.updated_at)}))},z=async(e,r)=>{let a=null;const n=await fetch(`${s}/chats/${r}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.error(t),null));if(a)throw a;return n},E=async(e,r)=>{let a=null;const n=await fetch(`${s}/chats/share/${r}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},P=async(e,r)=>{let a=null;const n=await fetch(`${s}/chats/${r}/pinned`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.error(t),null));if(a)throw a;return n},I=async(e,r)=>{let a=null;const n=await fetch(`${s}/chats/${r}/pin`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.error(t),null));if(a)throw a;return n},O=async(e,r,a)=>{let n=null;const t=await fetch(`${s}/chats/${r}/clone`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({...a&&{title:a}})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(n=o,"detail"in o?n=o.detail:n=o,console.error(o),null));if(n)throw n;return t},_=async(e,r)=>{let a=null;const n=await fetch(`${s}/chats/${r}/clone/shared`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.error(t),null));if(a)throw a;return n},G=async(e,r)=>{let a=null;const n=await fetch(`${s}/chats/${r}/share`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},L=async(e,r,a)=>{let n=null;const t=await fetch(`${s}/chats/${r}/folder`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({folder_id:a})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(n=o,console.error(o),null));if(n)throw n;return t},b=async(e,r)=>{let a=null;const n=await fetch(`${s}/chats/${r}/archive`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},N=async(e,r)=>{let a=null;const n=await fetch(`${s}/chats/${r}/share`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},U=async(e,r,a)=>{let n=null;const t=await fetch(`${s}/chats/${r}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({chat:a})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(n=o,console.error(o),null));if(n)throw n;return t},v=async(e,r)=>{let a=null;const n=await fetch(`${s}/chats/${r}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.error(t),null));if(a)throw a;return n},J=async(e,r)=>{let a=null;const n=await fetch(`${s}/chats/${r}/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},R=async(e,r,a)=>{let n=null;const t=await fetch(`${s}/chats/${r}/tags`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({name:a})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(n=o.detail,console.error(o),null));if(n)throw n;return t},x=async(e,r,a)=>{let n=null;const t=await fetch(`${s}/chats/${r}/tags`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({name:a})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(n=o,console.error(o),null));if(n)throw n;return t},D=async e=>{let r=null;const a=await fetch(`${s}/chats/`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n.detail,console.error(n),null));if(r)throw r;return a},k=async e=>{let r=null;const a=await fetch(`${s}/chats/archive/all`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(r=n.detail,console.error(n),null));if(r)throw r;return a};export{k as A,D as B,w as C,J as a,R as b,_ as c,v as d,A as e,x as f,E as g,z as h,N as i,j,f as k,g as l,$ as m,B as n,b as o,P as p,S as q,O as r,G as s,I as t,U as u,L as v,C as w,y as x,m as y,T as z};
//# sourceMappingURL=DYt5d_AI.js.map
