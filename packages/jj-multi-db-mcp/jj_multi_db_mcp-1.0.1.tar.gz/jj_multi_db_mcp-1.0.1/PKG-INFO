Metadata-Version: 2.4
Name: jj-multi-db-mcp
Version: 1.0.1
Summary: Multi-database MCP server supporting SQL Server, MySQL, Oracle, Redis and filesystem operations
Project-URL: Homepage, https://github.com/ppengit/jj-multi-db-mcp
Project-URL: Repository, https://github.com/ppengit/jj-multi-db-mcp
Author-email: PJ <peng.it@qq.com>
License: MIT
License-File: LICENSE
Requires-Python: >=3.8
Requires-Dist: mcp>=1.0.0
Provides-Extra: all
Requires-Dist: oracledb>=1.4.0; extra == 'all'
Requires-Dist: pymysql>=1.0.0; extra == 'all'
Requires-Dist: pyodbc>=4.0.0; extra == 'all'
Requires-Dist: redis>=5.0.0; extra == 'all'
Requires-Dist: sqlalchemy>=2.0.0; extra == 'all'
Provides-Extra: mysql
Requires-Dist: pymysql>=1.0.0; extra == 'mysql'
Requires-Dist: sqlalchemy>=2.0.0; extra == 'mysql'
Provides-Extra: oracle
Requires-Dist: oracledb>=1.4.0; extra == 'oracle'
Requires-Dist: sqlalchemy>=2.0.0; extra == 'oracle'
Provides-Extra: redis
Requires-Dist: redis>=5.0.0; extra == 'redis'
Provides-Extra: sqlserver
Requires-Dist: pyodbc>=4.0.0; extra == 'sqlserver'
Requires-Dist: sqlalchemy>=2.0.0; extra == 'sqlserver'
Description-Content-Type: text/markdown

# JJ Multi-Database MCP Server

[English](#english) | [‰∏≠Êñá](#‰∏≠Êñá)

---

## English

A comprehensive MCP (Model Context Protocol) server supporting multiple databases and filesystem operations. Perfect for AI assistants like Claude to interact with your databases and files safely and efficiently.

### üöÄ Features

- **üóÑÔ∏è SQL Server Support**: Complete SQL Server database operations with connection pooling
- **üê¨ MySQL Support**: Full MySQL database functionality with optimized queries
- **üî∂ Oracle Support**: Comprehensive Oracle database operations (optional dependency)
- **üî¥ Redis Support**: Key-value operations with Redis including TTL management
- **üìÅ Filesystem Operations**: Safe file and directory operations with configurable restrictions
- **‚öôÔ∏è Environment-based Configuration**: Simple configuration via environment variables
- **üì¶ uvx Compatible**: Designed for use with uvx package runner
- **üîí Security First**: Configurable access controls and safe defaults
- **üîå Optional Dependencies**: Install only what you need

### üöÄ Quick Start

#### Using uvx (Recommended)

```bash
# Install and run with specific database support
uvx --from jj-multi-db-mcp[sqlserver,mysql,redis] jj-multi-db-mcp

# Install with all database support
uvx --from jj-multi-db-mcp[all] jj-multi-db-mcp

# Basic installation (filesystem only)
uvx jj-multi-db-mcp
```

#### Using pip

```bash
# Basic installation (filesystem operations only)
pip install jj-multi-db-mcp

# With specific database support
pip install jj-multi-db-mcp[sqlserver,mysql,redis]

# With all database support
pip install jj-multi-db-mcp[all]

# Run the server
jj-multi-db-mcp
```

#### Available Optional Dependencies

- `[sqlserver]` - SQL Server support (requires pyodbc, sqlalchemy)
- `[mysql]` - MySQL support (requires pymysql, sqlalchemy)
- `[oracle]` - Oracle support (requires oracledb, sqlalchemy)
- `[redis]` - Redis support (requires redis)
- `[all]` - All database support

### ‚öôÔ∏è Configuration

Configure the server using environment variables:

#### SQL Server Configuration
```bash
export SQLSERVER_ENABLED=true
export SQLSERVER_HOST=localhost
export SQLSERVER_PORT=1433
export SQLSERVER_DATABASE=your_database
export SQLSERVER_USERNAME=sa
export SQLSERVER_PASSWORD=your_password
export SQLSERVER_DRIVER="ODBC Driver 17 for SQL Server"  # optional
```

#### MySQL Configuration
```bash
export MYSQL_ENABLED=true
export MYSQL_HOST=localhost
export MYSQL_PORT=3306
export MYSQL_DATABASE=your_database
export MYSQL_USERNAME=root
export MYSQL_PASSWORD=your_password
export MYSQL_CHARSET=utf8mb4  # optional
```

#### Oracle Configuration
```bash
export ORACLE_ENABLED=true
export ORACLE_HOST=localhost
export ORACLE_PORT=1521
export ORACLE_SERVICE_NAME=XE
export ORACLE_USERNAME=system
export ORACLE_PASSWORD=your_password
```

#### Redis Configuration
```bash
export REDIS_ENABLED=true
export REDIS_HOST=localhost
export REDIS_PORT=6379
export REDIS_DB=0
export REDIS_PASSWORD=your_password  # optional
export REDIS_DECODE_RESPONSES=true   # optional
```

#### Filesystem Configuration
```bash
# Path restrictions (comma-separated or "*" for full access)
export FS_ALLOWED_PATHS="/home/user/documents,/tmp"

# Extension restrictions (comma-separated or "*" for all)
export FS_ALLOWED_EXTENSIONS=".txt,.py,.json,.csv,.md"

# Operation permissions
export FS_ENABLE_WRITE=true
export FS_ENABLE_DELETE=false

# Size limit (in bytes)
export FS_MAX_FILE_SIZE=104857600  # 100MB
```

### ü§ñ Claude Desktop Configuration

Add to your `claude_desktop_config.json`:

#### Basic Configuration (Filesystem Only)
```json
{
  "mcpServers": {
    "jj-multi-db-mcp": {
      "command": "uvx",
      "args": ["jj-multi-db-mcp"],
      "env": {
        "FS_ALLOWED_PATHS": "/home/user/documents",
        "FS_ALLOWED_EXTENSIONS": ".txt,.py,.json,.csv,.md"
      }
    }
  }
}
```

#### Full Configuration (All Databases)
```json
{
  "mcpServers": {
    "jj-multi-db-mcp": {
      "command": "uvx",
      "args": ["--from", "jj-multi-db-mcp[all]", "jj-multi-db-mcp"],
      "env": {
        "SQLSERVER_ENABLED": "true",
        "SQLSERVER_HOST": "localhost",
        "SQLSERVER_USERNAME": "sa",
        "SQLSERVER_PASSWORD": "your_password",
        "SQLSERVER_DATABASE": "your_database",
        "MYSQL_ENABLED": "true",
        "MYSQL_HOST": "localhost",
        "MYSQL_USERNAME": "root",
        "MYSQL_PASSWORD": "your_password",
        "MYSQL_DATABASE": "your_database",
        "REDIS_ENABLED": "true",
        "REDIS_HOST": "localhost",
        "FS_ALLOWED_PATHS": "/home/user/documents",
        "FS_ALLOWED_EXTENSIONS": ".txt,.py,.json,.csv,.md"
      }
    }
  }
}
```

### üõ†Ô∏è Available Tools

#### SQL Server Tools
- `sqlserver_query` - Execute SELECT queries with parameters
- `sqlserver_execute` - Execute INSERT/UPDATE/DELETE queries
- `sqlserver_list_tables` - List all tables in database
- `sqlserver_table_schema` - Get detailed table schema information

#### MySQL Tools
- `mysql_query` - Execute SELECT queries with parameters
- `mysql_execute` - Execute INSERT/UPDATE/DELETE queries
- `mysql_list_tables` - List all tables in database
- `mysql_table_schema` - Get detailed table schema information

#### Oracle Tools
- `oracle_query` - Execute SELECT queries with parameters
- `oracle_execute` - Execute INSERT/UPDATE/DELETE queries
- `oracle_list_tables` - List all tables in user schema
- `oracle_table_schema` - Get detailed table schema information

#### Redis Tools
- `redis_get` - Get value by key
- `redis_set` - Set key-value pair with optional TTL
- `redis_delete` - Delete key from Redis
- `redis_keys` - List keys matching pattern (supports wildcards)

#### Filesystem Tools
- `read_file` - Read file contents (respects extension restrictions)
- `write_file` - Write content to file (creates directories if needed)
- `list_directory` - List directory contents with metadata

### üìä Resources

- `status://databases` - Get current database connection status and health

### üîí Security Features

- **Path Restrictions**: Limit filesystem access to specific directories
- **Extension Filtering**: Control which file types can be accessed
- **Size Limits**: Prevent large file operations (default: 100MB)
- **Connection Validation**: Secure database connections with pooling
- **Environment Isolation**: Separate configuration per environment
- **Write Protection**: Configurable write and delete permissions
- **Connection Pooling**: Automatic connection management and cleanup

### üö® Troubleshooting

#### Common Issues

**1. "Dependencies not installed" error**
```bash
# Install specific database support
pip install jj-multi-db-mcp[sqlserver]  # for SQL Server
pip install jj-multi-db-mcp[mysql]     # for MySQL
pip install jj-multi-db-mcp[oracle]    # for Oracle
pip install jj-multi-db-mcp[redis]     # for Redis
pip install jj-multi-db-mcp[all]       # for all databases
```

**2. SQL Server connection issues**
- Ensure SQL Server is running and accessible
- Check firewall settings (port 1433)
- Verify ODBC driver is installed: `ODBC Driver 17 for SQL Server`
- Test connection string format

**3. MySQL connection issues**
- Verify MySQL server is running (port 3306)
- Check user permissions: `GRANT ALL PRIVILEGES ON database.* TO 'user'@'%';`
- Ensure charset is compatible (utf8mb4 recommended)

**4. Filesystem permission errors**
- Check `FS_ALLOWED_PATHS` includes the target directory
- Verify `FS_ALLOWED_EXTENSIONS` includes the file type
- Ensure `FS_ENABLE_WRITE=true` for write operations

**5. "Full access mode" warning**
- Set `FS_ALLOWED_PATHS` to restrict filesystem access
- This warning appears when `FS_ALLOWED_PATHS` is not set or is "*"

#### Debug Mode
Enable detailed logging by setting environment variable:
```bash
export PYTHONPATH=DEBUG
```

### üîß Development

```bash
# Clone the repository
git clone https://github.com/ppengit/jj-multi-db-mcp.git
cd jj-multi-db-mcp

# Install in development mode with all dependencies
pip install -e .[all]

# Run the server for testing
python -m jj_multi_db_mcp

# Build package
python -m build
```

### üìÑ License

MIT License - see LICENSE file for details.

### ü§ù Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

### üìû Support

- GitHub Issues: [Report bugs or request features](https://github.com/ppengit/jj-multi-db-mcp/issues)
- Documentation: [Full documentation](https://github.com/ppengit/jj-multi-db-mcp)

### üôè Acknowledgments

- Built with [MCP (Model Context Protocol)](https://github.com/modelcontextprotocol)
- Inspired by [mcp-sqlserver-filesystem](https://github.com/ppengit/mcp-sqlserver-filesystem)

---

## ‰∏≠Êñá

‰∏Ä‰∏™ÂÖ®Èù¢ÁöÑMCPÔºàÊ®°Âûã‰∏ä‰∏ãÊñáÂçèËÆÆÔºâÊúçÂä°Âô®ÔºåÊîØÊåÅÂ§öÁßçÊï∞ÊçÆÂ∫ìÂíåÊñá‰ª∂Á≥ªÁªüÊìç‰Ωú„ÄÇÈùûÂ∏∏ÈÄÇÂêàAIÂä©ÊâãÂ¶ÇClaudeÂÆâÂÖ®È´òÊïàÂú∞‰∏éÊÇ®ÁöÑÊï∞ÊçÆÂ∫ìÂíåÊñá‰ª∂ËøõË°å‰∫§‰∫í„ÄÇ

### üöÄ ÁâπÊÄß

- **üóÑÔ∏è SQL ServerÊîØÊåÅ**ÔºöÂÆåÊï¥ÁöÑSQL ServerÊï∞ÊçÆÂ∫ìÊìç‰ΩúÔºåÊîØÊåÅËøûÊé•Ê±†
- **üê¨ MySQLÊîØÊåÅ**ÔºöÂÆåÊï¥ÁöÑMySQLÊï∞ÊçÆÂ∫ìÂäüËÉΩÔºå‰ºòÂåñÊü•ËØ¢ÊÄßËÉΩ
- **üî∂ OracleÊîØÊåÅ**ÔºöÂÖ®Èù¢ÁöÑOracleÊï∞ÊçÆÂ∫ìÊìç‰ΩúÔºàÂèØÈÄâ‰æùËµñÔºâ
- **üî¥ RedisÊîØÊåÅ**ÔºöÈîÆÂÄºÂØπÊìç‰ΩúÔºåÊîØÊåÅTTLÁÆ°ÁêÜ
- **üìÅ Êñá‰ª∂Á≥ªÁªüÊìç‰Ωú**ÔºöÂÆâÂÖ®ÁöÑÊñá‰ª∂ÂíåÁõÆÂΩïÊìç‰ΩúÔºåÂèØÈÖçÁΩÆËÆøÈóÆÈôêÂà∂
- **‚öôÔ∏è ÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆ**ÔºöÈÄöËøáÁéØÂ¢ÉÂèòÈáèËøõË°åÁÆÄÂçïÈÖçÁΩÆ
- **üì¶ uvxÂÖºÂÆπ**Ôºö‰∏ì‰∏∫uvxÂåÖËøêË°åÂô®ËÆæËÆ°
- **üîí ÂÆâÂÖ®‰ºòÂÖà**ÔºöÂèØÈÖçÁΩÆÁöÑËÆøÈóÆÊéßÂà∂ÂíåÂÆâÂÖ®ÈªòËÆ§ËÆæÁΩÆ
- **üîå ÂèØÈÄâ‰æùËµñ**ÔºöÂè™ÂÆâË£ÖÊÇ®ÈúÄË¶ÅÁöÑÁªÑ‰ª∂

### üöÄ Âø´ÈÄüÂºÄÂßã

#### ‰ΩøÁî®uvxÔºàÊé®ËçêÔºâ

```bash
# ÂÆâË£ÖÂπ∂ËøêË°åÁâπÂÆöÊï∞ÊçÆÂ∫ìÊîØÊåÅ
uvx --from jj-multi-db-mcp[sqlserver,mysql,redis] jj-multi-db-mcp

# ÂÆâË£ÖÊâÄÊúâÊï∞ÊçÆÂ∫ìÊîØÊåÅ
uvx --from jj-multi-db-mcp[all] jj-multi-db-mcp

# Âü∫Á°ÄÂÆâË£ÖÔºà‰ªÖÊñá‰ª∂Á≥ªÁªüÔºâ
uvx jj-multi-db-mcp
```

#### ‰ΩøÁî®pip

```bash
# Âü∫Á°ÄÂÆâË£ÖÔºà‰ªÖÊñá‰ª∂Á≥ªÁªüÊìç‰ΩúÔºâ
pip install jj-multi-db-mcp

# ÂÆâË£ÖÁâπÂÆöÊï∞ÊçÆÂ∫ìÊîØÊåÅ
pip install jj-multi-db-mcp[sqlserver,mysql,redis]

# ÂÆâË£ÖÊâÄÊúâÊï∞ÊçÆÂ∫ìÊîØÊåÅ
pip install jj-multi-db-mcp[all]

# ËøêË°åÊúçÂä°Âô®
jj-multi-db-mcp
```

### ‚öôÔ∏è ÈÖçÁΩÆ

‰ΩøÁî®ÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆÊúçÂä°Âô®Ôºö

#### SQL ServerÈÖçÁΩÆ
```bash
export SQLSERVER_ENABLED=true
export SQLSERVER_HOST=localhost
export SQLSERVER_PORT=1433
export SQLSERVER_DATABASE=your_database
export SQLSERVER_USERNAME=sa
export SQLSERVER_PASSWORD=your_password
```

#### MySQLÈÖçÁΩÆ
```bash
export MYSQL_ENABLED=true
export MYSQL_HOST=localhost
export MYSQL_PORT=3306
export MYSQL_DATABASE=your_database
export MYSQL_USERNAME=root
export MYSQL_PASSWORD=your_password
```

#### Êñá‰ª∂Á≥ªÁªüÈÖçÁΩÆ
```bash
# Ë∑ØÂæÑÈôêÂà∂ÔºàÈÄóÂè∑ÂàÜÈöîÊàñ"*"Ë°®Á§∫ÂÆåÂÖ®ËÆøÈóÆÔºâ
export FS_ALLOWED_PATHS="/home/user/documents,/tmp"

# Êâ©Â±ïÂêçÈôêÂà∂ÔºàÈÄóÂè∑ÂàÜÈöîÊàñ"*"Ë°®Á§∫ÊâÄÊúâÔºâ
export FS_ALLOWED_EXTENSIONS=".txt,.py,.json,.csv,.md"

# Êìç‰ΩúÊùÉÈôê
export FS_ENABLE_WRITE=true
export FS_ENABLE_DELETE=false
```

### üö® ÊïÖÈöúÊéíÈô§

#### Â∏∏ËßÅÈóÆÈ¢ò

**1. "‰æùËµñÊú™ÂÆâË£Ö"ÈîôËØØ**
```bash
# ÂÆâË£ÖÁâπÂÆöÊï∞ÊçÆÂ∫ìÊîØÊåÅ
pip install jj-multi-db-mcp[sqlserver]  # SQL Server
pip install jj-multi-db-mcp[mysql]     # MySQL
pip install jj-multi-db-mcp[all]       # ÊâÄÊúâÊï∞ÊçÆÂ∫ì
```

**2. SQL ServerËøûÊé•ÈóÆÈ¢ò**
- Á°Æ‰øùSQL ServerÊ≠£Âú®ËøêË°å‰∏îÂèØËÆøÈóÆ
- Ê£ÄÊü•Èò≤ÁÅ´Â¢ôËÆæÁΩÆÔºàÁ´ØÂè£1433Ôºâ
- È™åËØÅODBCÈ©±Âä®Â∑≤ÂÆâË£Ö

**3. Êñá‰ª∂Á≥ªÁªüÊùÉÈôêÈîôËØØ**
- Ê£ÄÊü•`FS_ALLOWED_PATHS`ÂåÖÂê´ÁõÆÊ†áÁõÆÂΩï
- È™åËØÅ`FS_ALLOWED_EXTENSIONS`ÂåÖÂê´Êñá‰ª∂Á±ªÂûã
- Á°Æ‰øùÂÜôÊìç‰ΩúÊó∂`FS_ENABLE_WRITE=true`

### üìÑ ËÆ∏ÂèØËØÅ

MITËÆ∏ÂèØËØÅ - ËØ¶ËßÅLICENSEÊñá‰ª∂„ÄÇ

### ü§ù Ë¥°ÁåÆ

Ê¨¢ËøéË¥°ÁåÆÔºÅËØ∑ÈöèÊó∂Êèê‰∫§Pull Request„ÄÇ
