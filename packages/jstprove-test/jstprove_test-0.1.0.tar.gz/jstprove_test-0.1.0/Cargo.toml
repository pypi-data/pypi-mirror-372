[workspace]
members = [
    "rust/jstprove_circuits",
]


resolver = "2"
# Important to avoid the multiple workspaces error
exclude = ["ExpanderCompilerCollection"]


[workspace.dependencies]
serde_json = "1.0"
peakmem-alloc = "0.3.0"
csv = "1.1"
ark-std = "0.4.0"
rand = "0.8.5"
chrono = "0.4"
clap = { version = "4.1", features = ["derive"] }
ethnum = "1.5.0"
tiny-keccak = { version = "2.0", features = ["keccak"] }
halo2curves = { git = "https://github.com/PolyhedraZK/halo2curves", default-features = false, features = ["bits",] }
arith = { git = "https://github.com/PolyhedraZK/Expander", branch = "main" }
expander_circuit = { git = "https://github.com/PolyhedraZK/Expander", branch = "main", package = "circuit" }
gkr = { git = "https://github.com/PolyhedraZK/Expander", branch = "main" }
gf2 = { git = "https://github.com/PolyhedraZK/Expander", branch = "main" }
expander_binary = { git = "https://github.com/PolyhedraZK/Expander", branch = "main", package = "bin" }
mersenne31 = { git = "https://github.com/PolyhedraZK/Expander", branch = "main" }
expander_transcript = { git = "https://github.com/PolyhedraZK/Expander", branch = "main", package = "transcript" }
crosslayer_prototype = { git = "https://github.com/PolyhedraZK/Expander", branch = "main"}
expander_compiler = {git = "https://github.com/PolyhedraZK/ExpanderCompilerCollection"}
circuit-std-rs = {git = "https://github.com/PolyhedraZK/ExpanderCompilerCollection"}
babybear = { git = "https://github.com/PolyhedraZK/Expander", branch = "main" }
gkr_engine = { git = "https://github.com/PolyhedraZK/Expander", branch = "main", package = "gkr_engine" }
gkr_hashers = { git = "https://github.com/PolyhedraZK/Expander", branch = "main" }
goldilocks = { git = "https://github.com/PolyhedraZK/Expander", branch = "main" }
serdes = { git = "https://github.com/PolyhedraZK/Expander", branch = "main"}
mpi = "0.8.0"

# ndarray = "0.16.1"

ndarray = { version = "0.16.1", features = ["serde"] }
serde = { version = "1.0", features = ["derive"] }

[patch.crates-io]
mpi = { git = "https://github.com/0pendansor/rsmpi", branch = "patch-1" }

# serde_json = "1.0"


# [workspace.metadata.cross.target.x86_64-unknown-linux-gnu]
# # Add custom pre-build steps or configurations if needed
# pre-build = [
#     "apt-get update && apt-get install -y libssl-dev && apt-get install libopenmpi-dev && apt-get install openmpi-bin && apt-get install libmpich-dev && apt-get install pkg-config",
#     "sudo apt install openmpi-bin openmpi-common libopenmpi-dev",
#     "mpirun --version"
#     # openmpi-bin \
#     # libopenmpi-dev \ libmpich-dev
#     # apt-get install -y \
#     # libmpich-dev \
#     # libopenmpi-dev \
#     # pkg-config \
#     # libclang-dev \
#     # clang \
# ]
# [workspace.metadata.cross.target.x86_64-unknown-linux-gnu]
# pre-build = [
#     "apt-get update && apt-get install -y openmpi-bin libopenmpi-dev"
# ]

# [workspace.metadata.cross.target.armv7-unknown-linux-gnueabi]
# image = "my_rust_mpi_image"
