[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "meteole"
version = "0.2.1"
requires-python = ">3.8.0"
description = "A Python client library for forecast model APIs (e.g., Météo-France)."
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
        {name = "ThomasBouche"},
        {name = "GratienDSX"},
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: Apache Software License",
]

dependencies = [
    "pandas>=2.0.0",
    "eccodes>=2.39.0",
    "cfgrib>=0.9.10.4",
    "requests>=2.31.0",
    "xarray>=2024.5.0",
    "xmltodict>=0.13.0",
    "matplotlib>=3.8.4",
]

[project.urls]
Homepage = "https://maif.github.io/meteole/"
Documentation = "https://maif.github.io/meteole/home"
Repository = "https://github.com/MAIF/meteole"

[project.optional-dependencies]
test = ["pytest", "coverage", "tox"]
doc = ["mkdocs-material", "mkdocstrings[python]"]
dev = ["mypy", "pre-commit", "ruff"]
all = ["meteole[test,doc,dev]"]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"meteole" = ["py.typed"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]

[tool.mypy]
exclude = ["tests"]
ignore_missing_imports = true
plugins = ["pydantic.mypy"]

[tool.ruff]
line-length = 120
extend-include = ["*.ipynb"]

[tool.ruff.lint]
ignore = ["E501", "D2", "D3", "D4", "D104", "D100", "D106", "S311", "UP007"]
extend-select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "W",    # pycodestyle warnings
    "A",    # flake8-builtins
    "PLC",  # pylint conventions
    "PLE",  # pylint errors
    "PLW",  # pylint warnings
    "UP",   # pyupgrade
    "S",    # flake8-bandit,
    "B",    # flake8-bugbear
    "I",    # isort
    "D",    # pydocstyle
    "NPY",  # NumPy-specific rules
]
exclude = ["tests/*"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"
