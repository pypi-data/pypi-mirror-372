name: CI Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Install dependencies
      run: |
        uv sync --all-extras
        uv pip install --system -e .

    - name: Test CLI help
      run: |
        qwen-image-mps --help

    - name: Test import
      run: |
        python -c "import qwen_image_mps; print(f'Version: {qwen_image_mps.__version__}')"

    - name: Build package
      run: |
        uv build

    - name: Check package contents
      run: |
        uv pip install --system twine
        twine check dist/*

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Install linting tools
      run: |
        uv pip install --system black isort ruff

    - name: Run isort check
      run: |
        isort --check-only --profile black src/

    - name: Run black check
      run: |
        black --check src/

    - name: Run ruff check
      run: |
        ruff check src/
