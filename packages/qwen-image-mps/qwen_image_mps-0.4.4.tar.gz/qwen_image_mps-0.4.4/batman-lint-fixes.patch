From 90292206182635f8042a97bca7838a57bdc35ba2 Mon Sep 17 00:00:00 2001
From: ivanfioravanti <ivan.fioravanti@gmail.com>
Date: Fri, 22 Aug 2025 13:33:01 +0200
Subject: [PATCH] Fix lint issues and add simplified pre-commit configuration

- Remove unnecessary f-string prefixes in Batman mode print statements
- Fix import ordering in cli.py
- Add minimal pre-commit config with only black and isort
- Remove ruff configuration and dependencies
- Add pre-commit to dev dependencies
---
 .pre-commit-config.yaml   | 22 +++-------------------
 pyproject.toml            | 18 +-----------------
 src/qwen_image_mps/cli.py |  7 ++++---
 3 files changed, 8 insertions(+), 39 deletions(-)

diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index 5da8592..d0dd4ee 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -1,14 +1,4 @@
 repos:
-  - repo: https://github.com/pre-commit/pre-commit-hooks
-    rev: v4.5.0
-    hooks:
-      - id: trailing-whitespace
-      - id: end-of-file-fixer
-      - id: check-yaml
-      - id: check-added-large-files
-      - id: check-toml
-      - id: check-merge-conflict
-
   - repo: https://github.com/pycqa/isort
     rev: 5.13.2
     hooks:
@@ -16,14 +6,8 @@ repos:
         args: ["--profile", "black", "--line-length", "88"]
 
   - repo: https://github.com/psf/black
-    rev: 24.3.0
+    rev: 24.10.0
     hooks:
       - id: black
-        language_version: python3.11
-        args: ["--line-length", "88"]
-
-  - repo: https://github.com/charliermarsh/ruff-pre-commit
-    rev: v0.3.5
-    hooks:
-      - id: ruff
-        args: ["--fix"]
+        language_version: python3
+        args: ["--line-length", "88"]
\ No newline at end of file
diff --git a/pyproject.toml b/pyproject.toml
index d2de8c4..4001c6b 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -43,7 +43,7 @@ classifiers = [
 dev = [
     "black",
     "isort",
-    "ruff",
+    "pre-commit",
 ]
 
 [project.urls]
@@ -64,19 +64,3 @@ target-version = ['py39', 'py310', 'py311', 'py312']
 [tool.isort]
 profile = "black"
 line_length = 88
-
-[tool.ruff]
-line-length = 88
-target-version = "py39"
-select = [
-    "E",    # pycodestyle errors
-    "W",    # pycodestyle warnings
-    "F",    # pyflakes
-    "I",    # isort
-    "B",    # flake8-bugbear
-    "C4",   # flake8-comprehensions
-    "UP",   # pyupgrade
-]
-ignore = [
-    "E501",  # line too long, handled by black
-]
diff --git a/src/qwen_image_mps/cli.py b/src/qwen_image_mps/cli.py
index 9a602c1..8b07f0e 100644
--- a/src/qwen_image_mps/cli.py
+++ b/src/qwen_image_mps/cli.py
@@ -125,10 +125,11 @@ def get_custom_lora_path(lora_spec):
     Returns:
         Path to the LoRA file (local or downloaded), or None if failed
     """
-    from huggingface_hub import hf_hub_download
     import re
     from pathlib import Path
 
+    from huggingface_hub import hf_hub_download
+
     # Check if it's a local file path (handles both absolute and ~ paths)
     lora_path = Path(lora_spec).expanduser()
     if lora_path.exists() and lora_path.suffix == ".safetensors":
@@ -539,7 +540,7 @@ def generate_image(args) -> None:
         ]
         batman_action = random.choice(batman_additions)
         prompt = prompt + batman_action
-        print(f"\nðŸ¦‡ BATMAN MODE ACTIVATED: Adding surprise LEGO Batman photobomb!")
+        print("\nðŸ¦‡ BATMAN MODE ACTIVATED: Adding surprise LEGO Batman photobomb!")
 
     negative_prompt = (
         " "  # using an empty string if you do not have specific concept to remove
@@ -695,7 +696,7 @@ def edit_image(args) -> None:
         ]
         batman_edit = random.choice(batman_edits)
         edit_prompt = args.prompt + batman_edit
-        print(f"\nðŸ¦‡ BATMAN MODE ACTIVATED: LEGO Batman will photobomb this edit!")
+        print("\nðŸ¦‡ BATMAN MODE ACTIVATED: LEGO Batman will photobomb this edit!")
 
     # Perform image editing
     print(f"Editing image with prompt: {edit_prompt}")
-- 
2.51.0

