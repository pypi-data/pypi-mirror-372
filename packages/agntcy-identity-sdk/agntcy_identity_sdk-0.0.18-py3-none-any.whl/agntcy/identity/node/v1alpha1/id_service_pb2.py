# Copyright 2025 Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: agntcy/identity/node/v1alpha1/id_service.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from agntcy.identity.core.v1alpha1 import id_pb2 as agntcy_dot_identity_dot_core_dot_v1alpha1_dot_id__pb2
from agntcy.identity.core.v1alpha1 import issuer_pb2 as agntcy_dot_identity_dot_core_dot_v1alpha1_dot_issuer__pb2
from agntcy.identity.core.v1alpha1 import vc_pb2 as agntcy_dot_identity_dot_core_dot_v1alpha1_dot_vc__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n.agntcy/identity/node/v1alpha1/id_service.proto\x12\x1d\x61gntcy.identity.node.v1alpha1\x1a&agntcy/identity/core/v1alpha1/id.proto\x1a*agntcy/identity/core/v1alpha1/issuer.proto\x1a&agntcy/identity/core/v1alpha1/vc.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x9b\x01\n\x0fGenerateRequest\x12=\n\x06issuer\x18\x01 \x01(\x0b\x32%.agntcy.identity.core.v1alpha1.IssuerR\x06issuer\x12?\n\x05proof\x18\x02 \x01(\x0b\x32$.agntcy.identity.core.v1alpha1.ProofH\x00R\x05proof\x88\x01\x01\x42\x08\n\x06_proof\"p\n\x10GenerateResponse\x12\\\n\x11resolver_metadata\x18\x01 \x01(\x0b\x32/.agntcy.identity.core.v1alpha1.ResolverMetadataR\x10resolverMetadata\" \n\x0eResolveRequest\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\"o\n\x0fResolveResponse\x12\\\n\x11resolver_metadata\x18\x01 \x01(\x0b\x32/.agntcy.identity.core.v1alpha1.ResolverMetadataR\x10resolverMetadata2\xd7\x03\n\tIdService\x12\xea\x01\n\x08Generate\x12..agntcy.identity.node.v1alpha1.GenerateRequest\x1a/.agntcy.identity.node.v1alpha1.GenerateResponse\"}\x92\x41Z\x12LGenerate an Id and its corresponding ResolverMetadata for a specified Issuer*\nGenerateId\x82\xd3\xe4\x93\x02\x1a\"\x15/v1alpha1/id/generate:\x01*\x12\xcc\x01\n\x07Resolve\x12-.agntcy.identity.node.v1alpha1.ResolveRequest\x1a..agntcy.identity.node.v1alpha1.ResolveResponse\"b\x92\x41@\x12\x33Resolve an Id to its corresponding ResolverMetadata*\tResolveId\x82\xd3\xe4\x93\x02\x19\"\x14/v1alpha1/id/resolve:\x01*\x1a\x0e\x92\x41\x0b\n\tIdServiceB\xa4\x02\n!com.agntcy.identity.node.v1alpha1B\x0eIdServiceProtoP\x01ZXgithub.com/agntcy/identity/api/server/agntcy/identity/node/v1alpha1;identity_node_sdk_go\xa2\x02\x03\x41IN\xaa\x02\x1d\x41gntcy.Identity.Node.V1alpha1\xca\x02\x1d\x41gntcy\\Identity\\Node\\V1alpha1\xe2\x02)Agntcy\\Identity\\Node\\V1alpha1\\GPBMetadata\xea\x02 Agntcy::Identity::Node::V1alpha1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'agntcy.identity.node.v1alpha1.id_service_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n!com.agntcy.identity.node.v1alpha1B\016IdServiceProtoP\001ZXgithub.com/agntcy/identity/api/server/agntcy/identity/node/v1alpha1;identity_node_sdk_go\242\002\003AIN\252\002\035Agntcy.Identity.Node.V1alpha1\312\002\035Agntcy\\Identity\\Node\\V1alpha1\342\002)Agntcy\\Identity\\Node\\V1alpha1\\GPBMetadata\352\002 Agntcy::Identity::Node::V1alpha1'
  _globals['_IDSERVICE']._options = None
  _globals['_IDSERVICE']._serialized_options = b'\222A\013\n\tIdService'
  _globals['_IDSERVICE'].methods_by_name['Generate']._options = None
  _globals['_IDSERVICE'].methods_by_name['Generate']._serialized_options = b'\222AZ\022LGenerate an Id and its corresponding ResolverMetadata for a specified Issuer*\nGenerateId\202\323\344\223\002\032\"\025/v1alpha1/id/generate:\001*'
  _globals['_IDSERVICE'].methods_by_name['Resolve']._options = None
  _globals['_IDSERVICE'].methods_by_name['Resolve']._serialized_options = b'\222A@\0223Resolve an Id to its corresponding ResolverMetadata*\tResolveId\202\323\344\223\002\031\"\024/v1alpha1/id/resolve:\001*'
  _globals['_GENERATEREQUEST']._serialized_start=284
  _globals['_GENERATEREQUEST']._serialized_end=439
  _globals['_GENERATERESPONSE']._serialized_start=441
  _globals['_GENERATERESPONSE']._serialized_end=553
  _globals['_RESOLVEREQUEST']._serialized_start=555
  _globals['_RESOLVEREQUEST']._serialized_end=587
  _globals['_RESOLVERESPONSE']._serialized_start=589
  _globals['_RESOLVERESPONSE']._serialized_end=700
  _globals['_IDSERVICE']._serialized_start=703
  _globals['_IDSERVICE']._serialized_end=1174
# @@protoc_insertion_point(module_scope)
