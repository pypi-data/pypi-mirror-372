# This file configures the pre-commit hooks for the project.
# For more information, see https://pre-commit.com

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace # Trims trailing whitespace.
      - id: end-of-file-fixer # Ensures files end with a single newline.
      - id: check-yaml # Checks YAML files for parseable syntax.
      - id: check-toml # Checks TOML files for parseable syntax.
      - id: check-json # Checks JSON files for parseable syntax.
      - id: check-added-large-files # Prevents committing large files.
      - id: check-case-conflict # Checks for files that would conflict on case-insensitive filesystems.
      - id: check-merge-conflict # Checks for files that contain merge conflict strings.
      - id: debug-statements # Checks for leftover debugger imports and calls (e.g., pdb, breakpoint()).

  # Black for code formatting
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black

  # Ruff for linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Check for updates: https://github.com/astral-sh/ruff-pre-commit/releases
    rev: v0.4.4 # Make sure to use the latest version compatible with your setup
    hooks:
      # Run Ruff's linter.
      - id: ruff
        name: ruff (linter)
        # Apply fixes for fixable violations and exit with a non-zero code if fixes were made.
        # This ensures that if Ruff modifies files, the commit will be stopped,
        # prompting you to `git add` the changes and re-commit.
        args: [--fix, --exit-non-zero-on-fix]
        # Ruff will automatically find and use your pyproject.toml configuration
        # for selected rules, exclusions, target version, etc.
