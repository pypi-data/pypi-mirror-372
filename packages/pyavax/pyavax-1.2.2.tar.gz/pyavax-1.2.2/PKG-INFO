Metadata-Version: 2.4
Name: pyavax
Version: 1.2.2
Summary: pyava is command line tool to help you check the availability of a package name you want on PyPI
Author-email: BirukBelihu <birukbelihu1995@email.com>
License: Apache-2.0
Project-URL: Homepage, https://github.com/birukbelihu/pyava
Project-URL: Source, https://github.com/birukbelihu/pyava
Project-URL: Issues, https://github.com/birukbelihu/pyava
Keywords: pypi,package checker,availability,cli
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: httpx
Requires-Dist: pyglowx
Dynamic: license-file

# pyava

![GitHub Repo stars](https://img.shields.io/github/stars/BirukBelihu/pyava)
![GitHub forks](https://img.shields.io/github/forks/BirukBelihu/pyava)
![GitHub issues](https://img.shields.io/github/issues/BirukBelihu/pyava)
[![PyPI Downloads](https://static.pepy.tech/badge/pyavax)](https://pepy.tech/projects/pyavax)<br>
![Python](https://img.shields.io/pypi/pyversions/pyavax)

**pyava** is command line tool to help you check the availability of a package name you want on [PyPI](https://pypi.org)

---
GitHub: [pyava](https://github.com/BirukBelihu/pyava)
---

## ‚ú® Features

- üíª Check up to 5 package names you want at a time.
- ‚úÖ Set custom timeout for each package name you check
- ‚ÑπÔ∏è Get info about the package if it's taken like `summary`, `version`, `author`, `author email`, `home page` & more.
- üé® Colorful output

---

### Sample

![pyava Sample](https://github.com/birukbelihu/pyava/raw/master/samples/sample_1.png)

![pyava Sample](https://github.com/birukbelihu/pyava/raw/master/samples/sample_2.png)

---

## üì¶ Installation

```
pip install pyavax
```

You can also install pyava from source code. source code may not be stable, but it will have the latest features and
bug fixes.

Clone the repository:

```
git clone https://github.com/birukbelihu/pyava.git
```

Go inside the project directory:

```bash
cd pyava
```

### Set up Python virtual environment(I recommend using [uv](https://github.com/astral-sh/uv) for lightning speed)

### With uv

```bash
uv venv .venv
```

### With Python

```bash
python -m venv .venv
```

# Activate virtual environment

```bash
.venv\Scripts\activate # On Windows
```

```bash
source .venv/bin/activate # On Linux, WSL & macOS
```

# Install required dependencies

### With uv

```bash
uv pip install -r requirements.txt
```

### With Python

```bash
pip install -r requirements.txt
```

---

Install pyava:

```
pip install -e .
```

---

## üß† Example Usage

```bash
pyava requests tensorflow mediapipe
```

### Output

![pyava Sample](https://github.com/birukbelihu/pyava/raw/master/samples/sample_3.png)

## üôå Contribute

Want to improve `pyava`? Contributions are welcome!

---

## üì¢ Social Media

- üì∫ [YouTube: @pythondevs](https://youtube.com/@pythondevs?si=_CZxaEBwDkQEj4je)

---

## üìÑ License

This project is licensed under the **Apache License 2.0**. See
the [LICENSE](https://github.com/birukbelihu/pyava/blob/master/LICENSE) file for details.
