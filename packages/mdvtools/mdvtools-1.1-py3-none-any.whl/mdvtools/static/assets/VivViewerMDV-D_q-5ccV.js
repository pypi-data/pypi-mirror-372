import{d8 as f,bL as V,ca as L,d9 as m,bC as M,c9 as k,da as R,db as X,ct as Z,dc as A}from"./ImportProjectDialog-BBNfJo0k.js";import"./Button-Bk9omZah.js";import{h as w,g as v,R as Y}from"../js/mdv.js";async function T(n,t={c:0,t:0}){const s=n[n.length-1],{shape:i,labels:e}=s,a=i[e.indexOf("z")]>>n.length-1,o=await s.getRaster({selection:{...t,z:0}}),l=await s.getRaster({selection:{...t,z:Math.floor(a/2)}}),r=await s.getRaster({selection:{...t,z:Math.max(0,a-1)}}),c=f(o.data),h=f(l.data),d=f(r.data);return{domain:[Math.min(c.domain[0],h.domain[0],d.domain[0]),Math.max(c.domain[1],h.domain[1],d.domain[1])],contrastLimits:[Math.min(c.contrastLimits[0],h.contrastLimits[0],d.contrastLimits[0]),Math.max(c.contrastLimits[1],h.contrastLimits[1],d.contrastLimits[1])]}}async function G(n,t=[{c:0,t:0}]){const s=await Promise.all(t.map(a=>T(n,a))),i=s.map(a=>a.contrastLimits),e=s.map(a=>a.contrastLimits);return{domains:i,contrastLimits:e}}function E(n){const t=new Array(n).fill([0,1e3]),s=t,i=new Array(n).fill().map((o,l)=>({c:l,t:0,z:0,_id:l})),e=I(n),a=new Array(n).fill(!0);return{domains:t,contrastLimits:s,selections:i,colors:e,channelsVisible:a}}function I(n){return n===1?[[255,255,255]]:new Array(n).fill([0,0,0]).map((t,s)=>{const i=s/n;return[Math.floor(i*255),Math.floor((1-i)*255),0]})}function O(n){var e;const{x:t,y:s,z:i}=((e=n==null?void 0:n.meta)==null?void 0:e.physicalSizes)??{};if(t!=null&&t.size&&(s!=null&&s.size)&&(i!=null&&i.size)){const a=Math.min(i.size,t.size,s.size),o=[t.size/a,s.size/a,i.size/a];return new V().scale(o)}return new V().identity()}function y(n){const t=Array.isArray(n)?n[0]:n,{shape:s,labels:i}=t,e=O(t),a=[0,e[0]*s[i.indexOf("x")]],o=[0,e[5]*s[i.indexOf("y")]],l=[0,e[10]*s[i.indexOf("z")]];return[a,o,l]}const S=new Map;function N(n){if(S.has(n))return S.get(n);const t=A(n);return S.set(n,t),t}class ${constructor(t,s,i){console.log("new VivViewerMDV",s),this.canvas=t,this.height=this.canvas.height,this.width=this.canvas.width,this.config=s,this.hasRequestedDefaultChannelStats=!1,this.initClip(),N(s.url).then(e=>{this.tiff=e,this._setUp(e,i)}).catch(e=>{console.log(e);const a=this.canvas.getContext("2d");a.font="20px Arial",this.canvas.getContext("2d").fillText("Error loading data",10,20)})}setSize(t,s,i){this.height=s,this.width=t;const e=this.getViewState(i.x_scale,i.y_scale,i.offset);this.detailView=new L({id:m,height:s<this.native_y?this.native_y:s,width:t<this.native_x?this.native_x:t});const a=this.detailView.getDeckGlView();this.canvas.width=t,this.canvas.height=s,this.canvas.style.width=t,this.canvas.style.height=s,this.deck.setProps({height:s,width:t,viewState:e,views:[a]})}setPanZoom(t,s,i){const e=this.getViewState(s,i,t);this.deck.setProps({viewState:e})}getViewState(t,s,i){if(this.config.use3d)return;const e=Math.log2(s),a=Math.log2(t),o=this.width>this.native_x?this.width:this.native_x,l=this.height>this.native_y?this.height:this.native_y;let r=1/t*o/2;r-=i[0];let c=1/s*l/2;return c+=this.native_y-i[1],{height:o,width:l,id:m,target:[r,c,0],zoom:[a,e]}}setChannel(t){const s=this.mainVivLayer.props,i=s.selections.findIndex(e=>e.id===t.id);s.colors[i]=w(t.color),s.contrastLimits[i]=t.contrastLimits,s.channelsVisible[i]=t.channelsVisible,t.domains&&(s.domains[i]=t.domains),this.layers=[...this.layers],this.deck.setProps({layers:this.layers})}removeChannel(t){const s=this.mainVivLayer.props,i=s.selections.findIndex(e=>e.id===t.id);s.colors.splice(i,1),s.selections.splice(i,1),s.contrastLimits.splice(i,1),s.channelsVisible.splice(i,1),s.domains.splice(i,1),this.createLayers(s),this.deck.setProps({layers:[this.layers]})}async addChannel(t){const s=this.mainVivLayer.props;s.channelsVisible.push(!0),t.color=t.color||"#ff00ff";const i={z:0,t:0,c:t.index},e=await this.getDefaultChannelValues([{index:0,sel:i}]);return t.contrastLimits=e[0].stats.contrastLimits,t.domains=e[0].stats.domain,t.channelsVisible=!0,s.colors.push(w(t.color)),s.contrastLimits.push(t.contrastLimits),s.domains.push(t.domains),t.id=v(),s.selections.push({...i,id:t.id}),this.createLayers(s),this.deck.setProps({layers:[this.layers]}),t.name=this.channels[t.index].Name,t}getAllChannels(){return this.channels}getSelectedChannels(){const{props:t}=this.mainVivLayer,s=t.selections.map(e=>this.channels[e.c].Name),i=t.colors.map(Y);return s.map((e,a)=>({name:e,index:t.selections[a].c,id:t.selections[a].id,color:i[a],contrastLimits:t.contrastLimits[a].slice(0),channelsVisible:t.channelsVisible[a],domains:t.domains[a]}))}recenterCamera(){if(!this.config.use3d)return;console.log("recenter");const{SizeX:t,SizeY:s,SizeZ:i}=this.tiff.metadata.Pixels,a={target:[t/2,s/2,i/2],zoom:1,rotationX:0,rotationOrbit:0+Math.random()*.01};this.volViewState=a,this.deck.setProps({initialViewState:a})}_createLayers3D(){const t=this.tiff,{SizeX:s,SizeY:i,SizeZ:e,Channels:a}=t.metadata.Pixels,o=`3d_${m}`,l=t.data,r=a.length,c=t.data[0].dtype,{domains:h,contrastLimits:d,selections:u,colors:x,channelsVisible:z}=this.newVivProps??(this.mainVivLayer?this.mainVivLayer.props:E(r));this.newVivProps=null,this.hasRequestedDefaultChannelStats||(this.hasRequestedDefaultChannelStats=!0,this.defaultDomains=h,this.defaultContrastLimits=d.slice(0),G(l,u).then(g=>{this.defaultDomains=g.domains,this.defaultContrastLimits=g.contrastLimits.slice(0),this.newVivProps={...this.mainVivLayer.props,...g},this._updateProps()}));const C=this.getXSlice(),_=this.getYSlice(),P=this.getZSlice(),b=l.length-1,D={id:o,loader:l,dtype:c,resolution:b,channelsVisible:z,contrastLimits:d,domains:h,selections:u,colors:x,xSlice:C,ySlice:_,zSlice:P},p=this.detailView.getLayers({props:D,viewStates:[this.volViewState]});this.layers=p,this.mainVivLayer=p[0],this.config.scatterData&&p.push(new M({data:this.config.scatterData,radiusScale:1,billboard:!0,getFillColor:this.config.getScatterFillColor}))}initClip(){this.clipX=[0,1],this.clipY=[0,1],this.clipZ=[0,1]}setClipX(t,s){this.clipX=[t,s],this._updateProps()}setClipY(t,s){this.clipY=[t,s],this._updateProps()}setClipZ(t,s){this.clipZ=[t,s],this._updateProps()}getXSlice(){const{SizeX:t}=this.tiff.metadata.Pixels,[s,i]=this.clipX,e=y(this.loader)[0][1];return[s*e,i*e]}getYSlice(){const{SizeY:t}=this.tiff.metadata.Pixels,[s,i]=this.clipY,e=y(this.loader)[1][1];return[s*e,i*e]}getZSlice(){const{SizeZ:t}=this.tiff.metadata.Pixels,[s,i]=this.clipZ,e=y(this.loader)[2][1];return[s*e,i*e]}_updateProps(){this.createLayers(),this.deck.setProps({layers:this.layers})}_parseChannels(t){const s={selections:[],colors:[],channelsVisible:[],contrastLimits:[],domains:[]},i=[[0,0,255],[0,255,0],[255,0,0],[255,255,0],[0,255,255],[255,0,255]];let e=0;for(const a of t){const o=this.channels.findIndex(r=>r.Name===a.name);if(o===-1){console.warn(`channel '${a.name}' not found, uniforms housekeeping will be a bit messed up`);continue}s.selections.push({z:0,t:0,c:o});let l=a.color;l=l?typeof a.color=="string"?w(l):l:i[e],e++,e>=i.length&&(e=0),s.colors.push(l),s.channelsVisible.push(a.visible===void 0?!0:a.visible),s.contrastLimits.push(a.contrastLimits||null),s.domains.push(a.domains||null)}return s}getSelectedChannelsNice(){const t=this.layers[0].props;return t.selections.map((s,i)=>({name:this.channels[s.c].Name,color:t.colors[i],visible:t.channelsVisible[i],contrastLimits:t.contrastLimits[i],domains:t.domains[i]}))}_setUp(t,s){this.native_x=t.metadata.Pixels.SizeX,this.native_y=t.metadata.Pixels.SizeY;const{use3d:i}=this.config;this.extensions=[new k],this.channels=t.metadata.Pixels.Channels,this.loader=t.data,this.transparentColor=[255,255,255,0];const e=this.getViewState(s.x_scale,s.y_scale,s.offset);if(i){const{SizeX:c,SizeY:h,SizeZ:d}=t.metadata.Pixels,u=[c/2,h/2,d/2];this.volViewState={zoom:1,target:u},this.detailView=new R({id:m,useFixedAxis:!1,target:u,extensions:[new X.AdditiveBlendExtension]})}else this.detailView=new L({id:m,height:this.native_y>this.height?this.native_y:this.height,width:this.native_x>this.width?this.native_x:this.width});const a=this.volViewState;let{image_properties:o}=this.config;const l=this.detailView.getDeckGlView();if(this.config.channels&&(o=this._parseChannels(this.config.channels)),o!=null&&o.selections)for(const c of o.selections)c.id=v();const r=[];for(let c=0;c<o.contrastLimits.length;c++)o.contrastLimits[c]&&o.domains[c]||r.push({index:c,sel:o.selections[c]});this.getDefaultChannelValues(r).then(c=>{for(const h of c)o.contrastLimits[h.index]=h.stats.contrastLimits,o.domains[h.index]=h.stats.domain;this.createLayers(o),this.deck=new Z({canvas:this.canvas,layers:[this.layers],views:[l],viewState:e,width:this.width,height:this.height,useDevicePixels:!0,initialViewState:a,controller:i})})}async getDefaultChannelValues(t){return await Promise.all(t.map(async s=>{const i=await this.loader[this.loader.length-1].getRaster({selection:s.sel});return{index:s.index,stats:f(i.data)}}))}createLayers(t){if(this.config.use3d){this._createLayers3D();return}const s={id:m},i={loader:this.loader,contrastLimits:t.contrastLimits.slice(0),domains:t.domains.slice(0),colors:t.colors.slice(0),channelsVisible:t.channelsVisible.slice(0),selections:t.selections.slice(0),extensions:this.extensions,transparentColor:this.transparentColor};this.defaultDomains||(this.defaultDomains=i.contrastLimits),this.defaultContrastLimits||(this.defaultContrastLimits=this.defaultDomains.slice(0)),this.layers=this.detailView.getLayers({viewStates:s,props:i}),this.layers=[this.layers[0]],this.mainVivLayer=this.layers[0]}}export{$ as default};
//# sourceMappingURL=VivViewerMDV-D_q-5ccV.js.map
