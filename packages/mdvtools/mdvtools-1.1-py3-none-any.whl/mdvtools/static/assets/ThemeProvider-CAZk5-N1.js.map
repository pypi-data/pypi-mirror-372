{"version":3,"file":"ThemeProvider-CAZk5-N1.js","sources":["../../../../node_modules/@mui/system/esm/useMediaQuery/useMediaQuery.js","../../../../src/ThemeProvider.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { getThemeProps } from \"../useThemeProps/index.js\";\nimport useTheme from \"../useThemeWithoutDefault/index.js\";\n// TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      setMatch(queryList.matches);\n    };\n    updateMatch();\n    queryList.addEventListener('change', updateMatch);\n    return () => {\n      queryList.removeEventListener('change', updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      mediaQueryList.addEventListener('change', notify);\n      return () => {\n        mediaQueryList.removeEventListener('change', notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme();\n  // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr = false\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}","import type React from \"react\";\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n    ThemeProvider as MuiThemeProvider,\n    createTheme,\n    useMediaQuery,\n    type PaletteMode,\n    CssBaseline,\n} from \"@mui/material\";\n\nexport type ColorMode = {\n    toggleColorMode: () => void;\n    mode: PaletteMode;\n};\n\nconst ColorModeContext = createContext<ColorMode>({\n    toggleColorMode: () => {},\n    mode: \"light\",\n});\n\nconst getDesignTokens = (mode: PaletteMode) =>\n    createTheme({\n        palette: {\n            mode,\n            ...(mode === \"light\"\n                ? {\n                      // Light mode\n                      primary: { main: \"#2c3e50\" },\n                      secondary: { main: \"#34495e\" },\n                      background: { default: \"#ecf0f1\", paper: \"#ffffff\" },\n                      text: { primary: \"#2c3e50\", secondary: \"#7f8c8d\" },\n                  }\n                : {\n                      // Dark mode\n                      primary: { main: \"#ffffff\" },\n                      secondary: { main: \"#222\" },\n                      background: { default: \"#353536\", paper: \"#404040\" },\n                      text: { primary: \"#ffffff\", secondary: \"#ffffff\" },\n                  }),\n        },\n        typography: {\n            fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n            h5: { fontWeight: 500 },\n            body1: { fontSize: \"0.9rem\" },\n        },\n        components: {\n            MuiButton: {\n                styleOverrides: {\n                    root: { textTransform: \"none\" },\n                },\n            },\n            MuiPaper: {\n                styleOverrides: {\n                    root: {\n                        boxShadow:\n                            \"0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)\",\n                    },\n                },\n            },\n            MuiDialog: {\n                styleOverrides: {\n                    paper: {\n                        backgroundImage: 'none',\n                    },\n                },\n            },\n        },\n    });\n\nexport const CustomThemeProvider: React.FC<{ children: React.ReactNode }> = ({\n    children,\n}) => {\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n    const [mode, setMode] = useState<PaletteMode>(\n        prefersDarkMode ? \"dark\" : \"light\",\n    );\n\n    useEffect(() => {\n        // Automatically update theme based on system preference\n        setMode(prefersDarkMode ? \"dark\" : \"light\");\n    }, [prefersDarkMode]);\n\n    useEffect(() => {\n        const htmlElement = document.querySelector(\"html\");\n        if (htmlElement) {\n            htmlElement.classList.remove(\"light\", \"dark\");\n            htmlElement.classList.add(mode);\n        }\n    }, [mode]);\n\n    const colorMode = useMemo(\n        () => ({\n            toggleColorMode: () => {\n                setMode((prevMode) =>\n                    prevMode === \"light\" ? \"dark\" : \"light\",\n                );\n            },\n            mode,\n        }),\n        [mode],\n    );\n\n    const theme = useMemo(() => getDesignTokens(mode), [mode]);\n\n    return (\n        <ColorModeContext.Provider value={colorMode}>\n            <MuiThemeProvider theme={theme}>\n                <CssBaseline />\n                {children}\n            </MuiThemeProvider>\n        </ColorModeContext.Provider>\n    );\n};\n\nexport const useColorMode = () => useContext(ColorModeContext);\n"],"names":["useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","match","setMatch","React.useState","useEnhancedEffect","queryList","updateMatch","safeReact","React","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","React.useCallback","getServerSnapshot","React.useMemo","matches","getSnapshot","subscribe","mediaQueryList","notify","useMediaQuery","queryInput","options","theme","useTheme","supportMatchMedia","getThemeProps","ColorModeContext","createContext","toggleColorMode","mode","getDesignTokens","createTheme","palette","primary","main","secondary","background","default","paper","text","typography","fontFamily","h5","fontWeight","body1","fontSize","components","MuiButton","styleOverrides","root","textTransform","MuiPaper","boxShadow","MuiDialog","backgroundImage","CustomThemeProvider","children","prefersDarkMode","setMode","useState","useEffect","htmlElement","document","querySelector","classList","remove","add","colorMode","useMemo","prevMode","jsx","jsxs","MuiThemeProvider","CssBaseline","useColorMode","useContext"],"mappings":"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","x_google_ignoreList":[0]}