[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "edinet-tools"
version = "0.1.1"
authors = [
    {name = "Matt Helmer"},
]
description = "Python package for accessing Japanese corporate financial data from EDINET"
readme = "README.md"
license-files = ["LICENSE"]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry", 
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
keywords = ["finance", "japan", "edinet", "financial-data", "xbrl", "corporate-filings"]

dependencies = [
    "pandas>=1.3.0", 
    "python-dateutil>=2.8.0",
    "chardet>=5.0.0",
    "python-dotenv>=1.0.0",
    "llm>=0.10.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
analysis = [
    "matplotlib>=3.3.0",
    "plotly>=5.0.0",
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.910",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
"Homepage" = "https://github.com/matthelmer/edinet-api-tools"
"Repository" = "https://github.com/matthelmer/edinet-api-tools"
"Bug Reports" = "https://github.com/matthelmer/edinet-api-tools/issues"


[tool.setuptools.packages.find]
where = ["."]
include = ["edinet_tools*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
edinet_tools = ["*.json", "*.csv", "data/*"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
source = ["edinet_tools"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]