[project]
name = "ggshield"
dynamic = []
description = "Detect secrets from all sources using GitGuardian's brains"
keywords = [
    "cli",
    "devsecops",
    "secrets-detection",
    "security-tools",
    "gitguardian",
]
readme = "README.md"
authors = [
    { name = "GitGuardian", email = "support@gitguardian.com" },
]
maintainers = [
    { name = "GitGuardian", email = "support@gitguardian.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Environment :: Console",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.9",
    "Operating System :: OS Independent",
    "Topic :: Security",
]
requires-python = ">=3.9"
dependencies = [
    "platformdirs~=3.0.0",
    "charset-normalizer~=3.1.0",
    "click~=8.1.0",
    "cryptography~=43.0.1",
    "marshmallow~=3.18.0",
    "marshmallow-dataclass~=8.5.8",
    "oauthlib~=3.2.1",
    "pygitguardian~=1.25.0",
    "pyjwt~=2.6.0",
    "python-dotenv~=0.21.0",
    "pyyaml~=6.0.1",
    "requests~=2.32.0",
    "rich~=12.5.1",
    "typing-extensions~=4.12.2",
    "urllib3~=2.2.2",
    "truststore>=0.10.1; python_version >= \"3.10\"",
]
version = "1.43.0"

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://github.com/GitGuardian/ggshield"

[project.scripts]
ggshield = "ggshield.__main__:main"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm.resolution.overrides]
urllib3 = "2.2.3"
pyinstaller = "6.7.0"

[tool.pdm.version]
source = "file"
path = "ggshield/__init__.py"

[tool.black]
target-version = [
    "py36",
]
line-length = 88
exclude = "/(\\.eggs|\\.git|\\.hg|\\.mypy_cache|\\.nox|\\.tox|\\.venv|\\.svn|_build|buck-out|build|dist|venv|snapshots|_snap)/"

[tool.pytest.ini_options]
addopts = "--pdbcls=IPython.terminal.debugger:Pdb --durations=10 --durations-min=3.0 --tb=short"
python_files = [
    "tests.py",
    "test_*.py",
    "*_tests.py",
]
testpaths = [
    "tests/",
]

[tool.isort]
profile = "black"
lines_after_imports = 2

[tool.coverage.report]
exclude_lines = [
    "@abstractmethod",
    "if TYPE_CHECKING:",
    "pragma: no cover",
    "raise NotImplementedError",
    "assert False",
]
omit = [
    "tests/*",
]
fail_under = 80
show_missing = true

[tool.coverage.run]
source = [
    ".",
]
omit = [
    ".venv/*",
]

[tool.pyright]
include = [
    "ggshield",
]
reportIncompatibleMethodOverride = true
reportMissingParameterType = true
reportUnknownParameterType = true
reportUnnecessaryTypeIgnoreComment = true

[tool.scriv]
version = "literal: ggshield/__init__.py: __version__"
format = "md"
md_header_level = "2"
insert_marker = "# Changelog"

[dependency-groups]
tests = [
    "pytest-mock",
    "pytest-socket",
    "pytest-xdist",
    "pytest-voluptuous",
    "seed-isort-config",
    "syrupy",
    "import-linter",
    "jsonschema",
    "vcrpy>=5.1.0",
    "voluptuous<0.15.0",
    "pyfakefs>=5.2.0,<5.6.0",
    "factory-boy>=3.3.1",
]
dev = [
    "scriv[toml]",
    "black==24.3.0",
    "coverage",
    "flake8",
    "flake8-isort",
    "flake8-quotes",
    "pre-commit",
    "pyright==1.1.367",
    "build>=1.2.2.post1",
    "check-wheel-contents",
    "ipython>=8.12.3",
    "ipdb>=0.13.13",
]
standalone = [
    "pyinstaller==6.7.0",
]
