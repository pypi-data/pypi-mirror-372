# -*- coding: utf-8 -*-

"""
openaiapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from openaiapi.models.data_4 import Data4


class GenerateImage(object):

    """Implementation of the 'Generate Image' model.

    Attributes:
        created (int): The model property of type int.
        data (List[Data4]): The model property of type List[Data4].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "created": 'created',
        "data": 'data'
    }

    def __init__(self,
                 created=None,
                 data=None):
        """Constructor for the GenerateImage class"""

        # Initialize members of the class
        self.created = created 
        self.data = data 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        created = dictionary.get("created") if dictionary.get("created") else None
        data = None
        if dictionary.get('data') is not None:
            data = [Data4.from_dictionary(x) for x in dictionary.get('data')]
        # Return an object of this model
        return cls(created,
                   data)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'created={self.created!r}, '
                f'data={self.data!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'created={self.created!s}, '
                f'data={self.data!s})')
