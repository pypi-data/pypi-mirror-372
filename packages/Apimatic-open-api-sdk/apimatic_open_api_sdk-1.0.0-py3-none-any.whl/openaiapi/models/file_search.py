# -*- coding: utf-8 -*-

"""
openaiapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from openaiapi.models.ranking_options import RankingOptions


class FileSearch(object):

    """Implementation of the 'FileSearch' model.

    Attributes:
        ranking_options (RankingOptions): The model property of type
            RankingOptions.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ranking_options": 'ranking_options'
    }

    def __init__(self,
                 ranking_options=None):
        """Constructor for the FileSearch class"""

        # Initialize members of the class
        self.ranking_options = ranking_options 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        ranking_options = RankingOptions.from_dictionary(dictionary.get('ranking_options')) if dictionary.get('ranking_options') else None
        # Return an object of this model
        return cls(ranking_options)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'ranking_options={self.ranking_options!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'ranking_options={self.ranking_options!s})')
