# -*- coding: utf-8 -*-

"""
openaiapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from openaiapi.models.supervised import Supervised


class Method(object):

    """Implementation of the 'Method' model.

    Attributes:
        mtype (str): The model property of type str.
        supervised (Supervised): The model property of type Supervised.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "supervised": 'supervised'
    }

    def __init__(self,
                 mtype=None,
                 supervised=None):
        """Constructor for the Method class"""

        # Initialize members of the class
        self.mtype = mtype 
        self.supervised = supervised 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        mtype = dictionary.get("type") if dictionary.get("type") else None
        supervised = Supervised.from_dictionary(dictionary.get('supervised')) if dictionary.get('supervised') else None
        # Return an object of this model
        return cls(mtype,
                   supervised)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'mtype={self.mtype!r}, '
                f'supervised={self.supervised!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'mtype={self.mtype!s}, '
                f'supervised={self.supervised!s})')
