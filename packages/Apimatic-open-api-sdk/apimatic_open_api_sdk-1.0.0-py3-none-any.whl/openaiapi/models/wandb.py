# -*- coding: utf-8 -*-

"""
openaiapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Wandb(object):

    """Implementation of the 'Wandb' model.

    Attributes:
        project (str): The model property of type str.
        tags (List[str]): The model property of type List[str].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "project": 'project',
        "tags": 'tags'
    }

    def __init__(self,
                 project=None,
                 tags=None):
        """Constructor for the Wandb class"""

        # Initialize members of the class
        self.project = project 
        self.tags = tags 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        project = dictionary.get("project") if dictionary.get("project") else None
        tags = dictionary.get("tags") if dictionary.get("tags") else None
        # Return an object of this model
        return cls(project,
                   tags)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'project={self.project!r}, '
                f'tags={self.tags!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'project={self.project!s}, '
                f'tags={self.tags!s})')
