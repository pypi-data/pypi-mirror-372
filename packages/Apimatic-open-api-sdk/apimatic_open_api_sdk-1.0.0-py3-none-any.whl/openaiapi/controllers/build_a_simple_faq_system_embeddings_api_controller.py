# -*- coding: utf-8 -*-

"""
openaiapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from openaiapi.api_helper import APIHelper
from openaiapi.configuration import Server
from openaiapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from openaiapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from openaiapi.models.create_embeddings_of_faq_answers import CreateEmbeddingsOfFAQAnswers
from openaiapi.models.create_embedding_of_user_input import CreateEmbeddingOfUserInput


class BuildASimpleFAQSystemEmbeddingsAPIController(BaseController):

    """A Controller to access Endpoints in the openaiapi API."""
    def __init__(self, config):
        super(BuildASimpleFAQSystemEmbeddingsAPIController, self).__init__(config)

    def create_embeddings_of_faq_answers(self,
                                         body):
        """Does a POST request to /embeddings.

        Args:
            body (CreateEmbeddingsOfFAQAnswersRequest): The request body
                parameter.

        Returns:
            CreateEmbeddingsOfFAQAnswers: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/embeddings')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(CreateEmbeddingsOfFAQAnswers.from_dictionary)
        ).execute()

    def create_embedding_of_user_input(self,
                                       body):
        """Does a POST request to /embeddings.

        Args:
            body (CreateEmbeddingOfUserInputRequest): The request body
                parameter.

        Returns:
            CreateEmbeddingOfUserInput: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.SERVER_1)
            .path('/embeddings')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('bearer'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(CreateEmbeddingOfUserInput.from_dictionary)
        ).execute()
