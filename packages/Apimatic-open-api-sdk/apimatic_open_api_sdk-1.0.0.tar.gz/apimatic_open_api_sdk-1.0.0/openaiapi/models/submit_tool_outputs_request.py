# -*- coding: utf-8 -*-

"""
openaiapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from openaiapi.models.tool_output import ToolOutput


class SubmitToolOutputsRequest(object):

    """Implementation of the 'Submit Tool Outputs Request' model.

    Attributes:
        tool_outputs (List[ToolOutput]): The model property of type
            List[ToolOutput].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "tool_outputs": 'tool_outputs'
    }

    def __init__(self,
                 tool_outputs=None):
        """Constructor for the SubmitToolOutputsRequest class"""

        # Initialize members of the class
        self.tool_outputs = tool_outputs 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        tool_outputs = None
        if dictionary.get('tool_outputs') is not None:
            tool_outputs = [ToolOutput.from_dictionary(x) for x in dictionary.get('tool_outputs')]
        # Return an object of this model
        return cls(tool_outputs)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'tool_outputs={self.tool_outputs!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'tool_outputs={self.tool_outputs!s})')
