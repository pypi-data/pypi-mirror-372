# -*- coding: utf-8 -*-

"""
openaiapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CategoryScores(object):

    """Implementation of the 'CategoryScores' model.

    Attributes:
        sexual (float): The model property of type float.
        hate (float): The model property of type float.
        harassment (float): The model property of type float.
        self_harm (float): The model property of type float.
        sexual_minors (float): The model property of type float.
        hate_threatening (float): The model property of type float.
        violence_graphic (float): The model property of type float.
        self_harm_intent (float): The model property of type float.
        self_harm_instructions (float): The model property of type float.
        harassment_threatening (float): The model property of type float.
        violence (float): The model property of type float.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sexual": 'sexual',
        "hate": 'hate',
        "harassment": 'harassment',
        "self_harm": 'self-harm',
        "sexual_minors": 'sexual/minors',
        "hate_threatening": 'hate/threatening',
        "violence_graphic": 'violence/graphic',
        "self_harm_intent": 'self-harm/intent',
        "self_harm_instructions": 'self-harm/instructions',
        "harassment_threatening": 'harassment/threatening',
        "violence": 'violence'
    }

    def __init__(self,
                 sexual=None,
                 hate=None,
                 harassment=None,
                 self_harm=None,
                 sexual_minors=None,
                 hate_threatening=None,
                 violence_graphic=None,
                 self_harm_intent=None,
                 self_harm_instructions=None,
                 harassment_threatening=None,
                 violence=None):
        """Constructor for the CategoryScores class"""

        # Initialize members of the class
        self.sexual = sexual 
        self.hate = hate 
        self.harassment = harassment 
        self.self_harm = self_harm 
        self.sexual_minors = sexual_minors 
        self.hate_threatening = hate_threatening 
        self.violence_graphic = violence_graphic 
        self.self_harm_intent = self_harm_intent 
        self.self_harm_instructions = self_harm_instructions 
        self.harassment_threatening = harassment_threatening 
        self.violence = violence 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        sexual = dictionary.get("sexual") if dictionary.get("sexual") else None
        hate = dictionary.get("hate") if dictionary.get("hate") else None
        harassment = dictionary.get("harassment") if dictionary.get("harassment") else None
        self_harm = dictionary.get("self-harm") if dictionary.get("self-harm") else None
        sexual_minors = dictionary.get("sexual/minors") if dictionary.get("sexual/minors") else None
        hate_threatening = dictionary.get("hate/threatening") if dictionary.get("hate/threatening") else None
        violence_graphic = dictionary.get("violence/graphic") if dictionary.get("violence/graphic") else None
        self_harm_intent = dictionary.get("self-harm/intent") if dictionary.get("self-harm/intent") else None
        self_harm_instructions = dictionary.get("self-harm/instructions") if dictionary.get("self-harm/instructions") else None
        harassment_threatening = dictionary.get("harassment/threatening") if dictionary.get("harassment/threatening") else None
        violence = dictionary.get("violence") if dictionary.get("violence") else None
        # Return an object of this model
        return cls(sexual,
                   hate,
                   harassment,
                   self_harm,
                   sexual_minors,
                   hate_threatening,
                   violence_graphic,
                   self_harm_intent,
                   self_harm_instructions,
                   harassment_threatening,
                   violence)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'sexual={self.sexual!r}, '
                f'hate={self.hate!r}, '
                f'harassment={self.harassment!r}, '
                f'self_harm={self.self_harm!r}, '
                f'sexual_minors={self.sexual_minors!r}, '
                f'hate_threatening={self.hate_threatening!r}, '
                f'violence_graphic={self.violence_graphic!r}, '
                f'self_harm_intent={self.self_harm_intent!r}, '
                f'self_harm_instructions={self.self_harm_instructions!r}, '
                f'harassment_threatening={self.harassment_threatening!r}, '
                f'violence={self.violence!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'sexual={self.sexual!s}, '
                f'hate={self.hate!s}, '
                f'harassment={self.harassment!s}, '
                f'self_harm={self.self_harm!s}, '
                f'sexual_minors={self.sexual_minors!s}, '
                f'hate_threatening={self.hate_threatening!s}, '
                f'violence_graphic={self.violence_graphic!s}, '
                f'self_harm_intent={self.self_harm_intent!s}, '
                f'self_harm_instructions={self.self_harm_instructions!s}, '
                f'harassment_threatening={self.harassment_threatening!s}, '
                f'violence={self.violence!s})')
