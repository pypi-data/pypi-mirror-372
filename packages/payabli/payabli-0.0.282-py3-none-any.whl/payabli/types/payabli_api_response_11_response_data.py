# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .customer_id import CustomerId
from .referenceidtrans import Referenceidtrans
from .result_code import ResultCode
from .resulttext import Resulttext


class PayabliApiResponse11ResponseData(UniversalBaseModel):
    customer_id: typing_extensions.Annotated[typing.Optional[CustomerId], FieldMetadata(alias="CustomerId")] = (
        pydantic.Field(default=None)
    )
    """
    Payabli-generated unique ID of vendor owner of transaction. It will return `0`` if the transaction wasn't assigned to an existing vendor or no vendor was created.
    """

    reference_id: typing_extensions.Annotated[typing.Optional[Referenceidtrans], FieldMetadata(alias="ReferenceId")] = (
        None
    )
    result_code: typing_extensions.Annotated[typing.Optional[ResultCode], FieldMetadata(alias="ResultCode")] = None
    result_text: typing_extensions.Annotated[typing.Optional[Resulttext], FieldMetadata(alias="ResultText")] = (
        pydantic.Field(default=None)
    )
    """
    Text describing the result. If **ResultCode** = 1, will return 'Authorized'. If **ResultCode** = 2 or 3, will contain the reason for the decline.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
