// DO NOT MODIFY, THIS FILE IS GENERATED FROM version{{EXT.hxx}}.in
//
// @PROJECT_NAME@/@PROJECT_VERSION@@PROJECT_VERSION_STABILITY@
//
// Copyright (c) {{COPY.YEAR}} {{COPY.HOLDER}}
// This code is licensed under {{COPY.LICENSE}} license (see LICENSE for details)
// clang-format off

#pragma once

#define {{NAME_PREFIX}}_VERSION_STR "@PROJECT_VERSION_MAJOR@.@PROJECT_VERSION_MINOR@.@PROJECT_VERSION_PATCH@"
#define {{NAME_PREFIX}}_VERSION_STR_SHORT "@PROJECT_VERSION_MAJOR@.@PROJECT_VERSION_MINOR@"
#define {{NAME_PREFIX}}_VERSION_STABILITY "@PROJECT_VERSION_STABILITY@"
#define {{NAME_PREFIX}}_VERSION_BUILD_META "@PROJECT_VERSION_BUILD_META@"
#define {{NAME_PREFIX}}_PROJECT_NAME "@PROJECT_NAME@"

#define {{NAME_PREFIX}}_VERSION_MAJOR @PROJECT_VERSION_MAJOR@
#define {{NAME_PREFIX}}_VERSION_MINOR @PROJECT_VERSION_MINOR@
#define {{NAME_PREFIX}}_VERSION_PATCH @PROJECT_VERSION_PATCH@

#ifndef RC_INVOKED
namespace {{NAMESPACE}} {
	struct version {
		static constexpr char string[] = "@PROJECT_VERSION_MAJOR@.@PROJECT_VERSION_MINOR@.@PROJECT_VERSION_PATCH@";  // NOLINT build/include_what_you_use and whitespace/line_length
		static constexpr char string_short[] = "@PROJECT_VERSION_MAJOR@.@PROJECT_VERSION_MINOR@";
		static constexpr char stability[] = "@PROJECT_VERSION_STABILITY@";  // or "-alpha.5", "-beta", "-rc.3", "", ...
		static constexpr char build_meta[] = "@PROJECT_VERSION_BUILD_META@";
		static constexpr char ui[] = "@PROJECT_VERSION@@PROJECT_VERSION_STABILITY@@PROJECT_VERSION_BUILD_META@";

		static constexpr unsigned major = @PROJECT_VERSION_MAJOR@;
		static constexpr unsigned minor = @PROJECT_VERSION_MINOR@;
		static constexpr unsigned patch = @PROJECT_VERSION_PATCH@;
	};
}  // namespace {{NAMESPACE}}
#endif
// clang-format on
