[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "waves-workflows"
authors = [
    {name = "Kyle Brindley", email = "kbrindley@lanl.gov"},
    {name = "Prabhu Khalsa", email = "pkhalsa@lanl.gov"},
    {name = "Thomas Roberts", email = "tproberts@lanl.gov"},
    {name = "Sergio Cordova", email = "sergioc@lanl.gov"},
    {name = "Matthew Fister", email = "mwfister@lanl.gov"},
    {name = "Chris Johnson", email = "clj@lanl.gov"},
    {name = "Scott Ouellette", email = "souellette@lanl.gov"}
]
description = "Computational science and engineering parameteric study workflows"
readme = "README.rst"
requires-python = ">=3.10"
license = "BSD-3-Clause"
license-files = ["LICENSE.txt"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering"
]
dynamic = ["version"]
dependencies = [
    "h5netcdf",
    "h5py",
    "matplotlib",
    "networkx",
    "numpy",
    "pyyaml",
    "salib >=1.4.6",
    "scipy >=1.7",
    "scons >=4",
    "xarray >=2024.10.0"
]

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
where = ["."]

[project.scripts]
odb_extract = "waves._abaqus.odb_extract:main"
waves = "waves._main:main"

[project.urls]
homepage = "https://github.com/lanl-aea/waves"
documentation = "https://github.com/lanl-aea/waves"
repository = "https://github.com/lanl-aea/waves"
changelog = "https://lanl-aea.github.io/waves/changelog.html"

[tool.setuptools_scm]
write_to = "waves/_version.py"

[tool.pytest.ini_options]
markers = [
    "systemtest: marks system tests, e.g. the tutorials",
    "require_third_party: marks system tests that require third-party software command line calls",
    "cli: tests of the waves CLI that do not require real file I/O",
    "abaqus: tests requiring the Abaqus executable",
    "calculix: tests requiring the CalculiX executable",
    "cubit: tests requiring the Cubit executable",
    "fierro: tests requiring the Fierro executable",
    "gmsh: tests requiring the Gmsh executable",
    "matlab: tests requiring the Matlab executable",
    "quinoa: tests requiring the Quinoa executable",
    "scons: tests requiring the SCons executable",
    "sierra: tests requiring the Sierra executable",
    "sphinx: tests requiring the sphinx-build executable",
]
addopts = "--ignore='build' --ignore='install' --ignore='waves/modsim_template/' --ignore='modsim_template/' --ignore='waves/modsim_template_2/' --ignore='modsim_template_2/' --ignore='waves/tutorials/' --ignore='tutorials/' --tb=long --showlocals --failed-first --strict-markers -m 'not systemtest' --import-mode=importlib -ra"

[tool.black]
target-version = ["py39", "py310", "py311", "py312", "py313"]
extend-exclude = ".txt|.toml|.yaml|.csv"
force-exclude = "build*/|install*/|conda-environment*/|conda-pkgs*/"
line-length = 120
include = "SConstruct|SConscript|.py|.py.in"

[tool.mypy]
disable_error_code = "import-untyped"
exclude = [
    "modsim_template",
    "tutorials",
    "tests"
]
packages = ["waves"]
