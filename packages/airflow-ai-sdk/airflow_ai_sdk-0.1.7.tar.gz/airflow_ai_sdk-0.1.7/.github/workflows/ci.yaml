name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.10"
          enable-cache: true

      - name: install python
        run: uv python install

      - name: install dependencies
        run: uv sync --all-extras --dev

      - name: ruff check
        run: uv run ruff check --output-format=github .

      - name: ruff format
        run: uv run ruff format --check .

      - name: minimize uv cache
        run: uv cache prune --ci

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
        airflow-version:
          - "2.10.0"
          - "3.0.0"

    steps:
      - uses: actions/checkout@v4

      - name: install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.10"
          enable-cache: true

      - name: install python
        run: uv python install ${{ matrix.python-version }}

      - name: install dependencies
        run: uv sync --all-extras --dev --no-install-package apache-airflow

      - name: install airflow
        run: uv add apache-airflow==${{ matrix.airflow-version }}

      - name: install requirements necessary for examples
        run: uv add sentence-transformers

      - name: print python package versions
        run: uv pip freeze

      - name: print airflow version
        run: uv run --python ${{ matrix.python-version }} airflow version

      - name: pytest
        run: uv run --python ${{ matrix.python-version }} pytest -v

      - name: minimize uv cache
        run: uv cache prune --ci

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.10"
          enable-cache: true

      - name: install python
        run: uv python install

      - name: install pre-commit
        run: uv add pre-commit

      - name: install dependencies
        run: uv sync --all-extras --dev

      - name: generate interface docs
        run: uv run python scripts/generate_interface_docs.py

      # if there are changes to the docs, fail and tell the user to run the script
      - name: check for changes to the docs
        run: |
          if git diff --name-only | grep -q "docs"; then
            echo "Changes to docs detected. Please run 'uv run python scripts/generate_interface_docs.py' to update the generated docs."
            exit 1
          else
            echo "No changes to docs detected"
          fi

      - name: minimize uv cache
        run: uv cache prune --ci
