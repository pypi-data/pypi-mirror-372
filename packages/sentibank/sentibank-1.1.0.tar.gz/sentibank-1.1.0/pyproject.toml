[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sentibank"
version = "1.1.0"
description = "Unifying sentiment lexicons and dictionaries into an accessible open python package"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "CC BY-NC-SA 4.0"}
authors = [
    {name = "Nick Oh", email = "nick.sh.oh@socius.org"}
]
maintainers = [
    {name = "Nick Oh", email = "nick.sh.oh@socius.org"}
]
keywords = [
    "sentiment analysis",
    "sentiment dictionary", 
    "sentiment lexicon",
    "semantic orientation",
    "nlp",
    "text analysis"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: Linguistic",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
dependencies = [
    "spacy>=3.7.2",
    "spacymoji>=3.1.0",
    "rich>=13.4.2",
    "pandas>=2.1.4",
    "pyenchant>=3.2.2"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "coverage>=7.3.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "sphinx-autodoc-typehints>=1.24.0",
]

[project.urls]
Homepage = "https://github.com/socius-org/sentibank"
Documentation = "https://doc.socius.org/sentibank/about.html"
Repository = "https://github.com/socius-org/sentibank"
Issues = "https://github.com/socius-org/sentibank/issues"
Changelog = "https://github.com/socius-org/sentibank/releases"

[project.scripts]
sentibank = "sentibank.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["sentibank*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
sentibank = [
    "dict_arXiv/**/*.csv",
    "dict_arXiv/**/*.json",
    "dict_arXiv/**/*.pickle"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["sentibank"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
strict_optional = true
disallow_untyped_defs = true
disallow_untyped_calls = true
check_untyped_defs = true