# coding: utf-8

"""Model Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""
# noqa: E501


import unittest

from mlx.api.model_registry.models.version import Version

class TestVersion(unittest.TestCase):
    """Version unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Version:
        """Test Version
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included
        """
        # uncomment below to create an instance of `Version`
        """
        model = Version()
        if include_optional:
            return Version(
                author = '',
                created = '',
                download_count = 0,
                id = '',
                labels = {
                    'key' : ''
                    },
                model = '',
                project = '',
                size = 0,
                stage = '',
                storage = mlx.api.model_registry.models.version_storage.VersionStorage(
                    storage_type = '', ),
                summary = '',
                tags = [
                    ''
                    ],
                training = mlx.api.model_registry.models.training.Training(
                    environment = mlx.api.model_registry.models.environment.Environment(
                        docker_image = '', 
                        host_os = '', 
                        packages = [
                            ''
                            ], ), 
                    reference = '', 
                    source = mlx.api.model_registry.models.source.Source(
                        commit_id = '', 
                        repo = '', ), ),
                updated = '',
                upload_done = True,
                version_name = ''
            )
        else:
            return Version(
                author = '',
                created = '',
                download_count = 0,
                id = '',
                labels = {
                    'key' : ''
                    },
                model = '',
                project = '',
                size = 0,
                stage = '',
                storage = mlx.api.model_registry.models.version_storage.VersionStorage(
                    storage_type = '', ),
                summary = '',
                tags = [
                    ''
                    ],
                updated = '',
                upload_done = True,
                version_name = '',
        )
        """

    def testVersion(self):
        """Test Version"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
