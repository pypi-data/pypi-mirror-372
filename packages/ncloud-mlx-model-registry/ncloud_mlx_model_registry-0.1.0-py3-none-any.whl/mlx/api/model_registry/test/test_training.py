# coding: utf-8

"""Model Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""
# noqa: E501


import unittest

from mlx.api.model_registry.models.training import Training

class TestTraining(unittest.TestCase):
    """Training unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Training:
        """Test Training
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included
        """
        # uncomment below to create an instance of `Training`
        """
        model = Training()
        if include_optional:
            return Training(
                environment = mlx.api.model_registry.models.environment.Environment(
                    docker_image = '', 
                    host_os = '', 
                    packages = [
                        ''
                        ], ),
                reference = '',
                source = mlx.api.model_registry.models.source.Source(
                    commit_id = '', 
                    repo = '', )
            )
        else:
            return Training(
                environment = mlx.api.model_registry.models.environment.Environment(
                    docker_image = '', 
                    host_os = '', 
                    packages = [
                        ''
                        ], ),
                reference = '',
                source = mlx.api.model_registry.models.source.Source(
                    commit_id = '', 
                    repo = '', ),
        )
        """

    def testTraining(self):
        """Test Training"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
