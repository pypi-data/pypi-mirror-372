[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "guapy"
dynamic = ["version"]
description = "Python implementation of Guacamole WebSocket proxy server"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    { name = "Adithya", email = "adithyakokkirala@gmail.com" },
]
maintainers = [
    { name = "Adithya", email = "adithyakokkirala@gmail.com" },
]
keywords = [
    "guacamole",
    "websocket",
    "remote-desktop",
    "vnc", 
    "rdp",
    "ssh",
    "proxy",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: System :: Networking",
    "Topic :: Communications",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "cryptography>=41.0.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "typer>=0.16.0",
    "httpx>=0.28.1",
    "starlette>=0.47.2",  # Security fix for GHSA-2c2j-9gv5-cj73
]

[project.urls]
Homepage = "https://github.com/Adithya1331/guapy"
Documentation = "https://guapy.readthedocs.io"
Repository = "https://github.com/Adithya1331/guapy.git"
Issues = "https://github.com/Adithya1331/guapy/issues"
Changelog = "https://github.com/Adithya1331/guapy/blob/main/CHANGELOG.md"

[project.optional-dependencies]

[project.scripts]
guapy = "guapy.cli:main"

[tool.hatch.version]
path = "src/guapy/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/guapy"]

# Ruff configuration for linting and formatting
[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
    "N",    # pep8-naming
    "D",    # pydocstyle
    "ASYNC", # flake8-async
    "S",    # flake8-bandit
    "C4",   # flake8-comprehensions
    "RUF",  # Ruff-specific rules
]
ignore = [
    "D102", # Missing docstring in public method
    "D105", # Missing docstring in magic method  
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D205", # 1 blank line required between summary line and description
    "D213", # Multi-line docstring summary should start at the second line
    "D300", # Use triple double quotes
    "D415", # First line should end with a period, question mark, or exclamation point
    "E501", # Line too long (we'll fix these gradually)
    "B017", # Do not assert blind exception (test code)
    "B904", # Within an except clause, raise exceptions with raise ... from err
    "S105", # Possible hardcoded password (test data)
    "S106", # Possible hardcoded password assigned to argument (test data)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "S101"]  # Ignore docstring and assert rules in tests
"src/guapy/__init__.py" = ["F401"]   # Allow unused imports in __init__.py

[tool.ruff.lint.pydocstyle]
convention = "google"

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/guapy",
    "--cov-report=html",
    "--cov-report=term-missing",
]
asyncio_mode = "auto"

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[dependency-groups]
dev = [
    "build>=1.3.0",
    "mypy>=1.16.0",
    "pip-audit>=2.9.0",
    "pre-commit>=4.2.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.11.13",
    "twine>=6.1.0",
]
